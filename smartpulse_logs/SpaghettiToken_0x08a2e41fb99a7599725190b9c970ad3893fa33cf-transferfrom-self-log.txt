This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 16:27:36,190 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 16:27:36,191 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 16:27:36,199 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 16:27:36,199 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 16:27:36,199 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 16:27:36,200 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 16:27:36,201 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 16:27:36,202 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 16:27:36,203 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 16:27:36,203 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 16:27:36,203 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 16:27:36,204 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 16:27:36,204 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 16:27:36,205 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 16:27:36,205 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 16:27:36,206 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 16:27:36,207 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 16:27:36,208 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 16:27:36,209 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 16:27:36,209 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 16:27:36,210 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 16:27:36,211 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 16:27:36,211 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 16:27:36,211 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 16:27:36,212 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 16:27:36,212 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 16:27:36,213 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 16:27:36,213 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 16:27:36,213 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 16:27:36,214 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 16:27:36,214 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 16:27:36,215 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 16:27:36,215 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 16:27:36,216 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 16:27:36,216 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 16:27:36,216 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 16:27:36,217 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 16:27:36,217 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 16:27:36,217 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 16:27:36,218 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 16:27:36,218 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 16:27:36,230 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 16:27:36,231 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 16:27:36,232 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 16:27:36,233 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 16:27:36,233 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 16:27:36,233 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 16:27:36,233 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 16:27:36,234 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 16:27:36,234 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 16:27:36,234 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 16:27:36,234 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 16:27:36,235 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 16:27:36,235 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 16:27:36,235 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 16:27:36,235 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 16:27:36,236 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 16:27:36,236 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 16:27:36,236 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 16:27:36,237 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 16:27:36,237 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 16:27:36,237 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 16:27:36,237 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 16:27:36,238 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 16:27:36,238 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 16:27:36,238 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 16:27:36,238 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 16:27:36,262 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 16:27:36,273 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 16:27:36,277 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 16:27:36,278 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 16:27:36,279 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 16:27:36,279 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl
[2020-11-24 16:27:36,280 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl'
[2020-11-24 16:27:36,332 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 16:27:36,333 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 16:27:36,333 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 16:27:36,333 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 16:27:36,334 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 16:27:36,350 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/1) ...
[2020-11-24 16:27:36,351 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/1) ...
[2020-11-24 16:27:36,369 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/1) ...
[2020-11-24 16:27:36,370 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/1) ...
[2020-11-24 16:27:36,382 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/1) ...
[2020-11-24 16:27:36,389 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/1) ...
[2020-11-24 16:27:36,393 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/1) ...
[2020-11-24 16:27:36,398 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 16:27:36,399 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 16:27:36,399 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 16:27:36,401 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 16:27:36,404 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/1) ...
[2020-11-24 16:27:36,414 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(SpaghettiToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_SpaghettiToken[this][from] && value <= allowance_SpaghettiToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transferFrom(from, to, value), return == true && allowance_SpaghettiToken[this][from][msg.sender] == old(allowance_SpaghettiToken[this][from][msg.sender]) - value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:27:36,418 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(SpaghettiToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_SpaghettiToken[this][from] && value <= allowance_SpaghettiToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transferFrom(from, to, value), return == true && allowance_SpaghettiToken[this][from][msg.sender] == old(allowance_SpaghettiToken[this][from][msg.sender]) - value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:27:36,426 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(SpaghettiToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_SpaghettiToken[this][from] && value <= allowance_SpaghettiToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transferFrom(from, to, value), return == true && allowance_SpaghettiToken[this][from][msg.sender] == old(allowance_SpaghettiToken[this][from][msg.sender]) - value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:27:36,432 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=src_s309 || p2!=msg.sender ) && src_s309==dst_s309 ) && wad_s309<=balanceOf_SpaghettiToken[this][src_s309] ) && wad_s309<=allowance_SpaghettiToken[this][src_s309][msg.sender] ) && wad_s309>=0 ) && wad_s309<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiToken[this][dst_s309]>=0 ) && balanceOf_SpaghettiToken[this][dst_s309]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiToken[this][src_s309]>=0 ) && balanceOf_SpaghettiToken[this][src_s309]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_SpaghettiToken[this][src_s309][msg.sender]>=0 ) && allowance_SpaghettiToken[this][src_s309][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],BinaryExpression[COMPEQ,IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 16:27:36,435 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && allowance_SpaghettiToken[this][src_s309][msg.sender]==( ( old(allowance_SpaghettiToken[this][src_s309][msg.sender]) ) - wad_s309 ) ) && totalSupply_SpaghettiToken[this]==( old(totalSupply_SpaghettiToken[this]) ) ) && balanceOf_SpaghettiToken[this]==( old(balanceOf_SpaghettiToken[this]) ) ) && allowance_SpaghettiToken[this][p1][p2]==( old(allowance_SpaghettiToken[this][p1][p2]) ) ) && symbol_SpaghettiToken[this]==( old(symbol_SpaghettiToken[this]) ) ) && decimals_SpaghettiToken[this]==( old(decimals_SpaghettiToken[this]) ) ) && name_SpaghettiToken[this]==( old(name_SpaghettiToken[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_SpaghettiToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]],IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]]]
[2020-11-24 16:27:36,438 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(SpaghettiToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_SpaghettiToken[this][from] && value <= allowance_SpaghettiToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transferFrom(from, to, value), return == true && allowance_SpaghettiToken[this][from][msg.sender] == old(allowance_SpaghettiToken[this][from][msg.sender]) - value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:27:36,438 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_SpaghettiToken0) ==> ( <>AP(success_transferFrom_SpaghettiToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 16:27:36,443 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:27:36 PropertyContainer
[2020-11-24 16:27:36,443 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 16:27:36,444 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 16:27:36,444 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 16:27:36,444 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 16:27:36,444 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/2) ...
[2020-11-24 16:27:36,445 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 16:27:36,445 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 16:27:36,452 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:27:36" (2/2) ...
[2020-11-24 16:27:36,452 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 16:27:36,453 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 16:27:36,453 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 16:27:36,453 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 16:27:36,453 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/2) ...
[2020-11-24 16:27:36,504 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 16:27:36,504 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__success
[2020-11-24 16:27:36,504 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__success
[2020-11-24 16:27:36,504 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken
[2020-11-24 16:27:36,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken
[2020-11-24 16:27:36,505 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken
[2020-11-24 16:27:36,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken
[2020-11-24 16:27:36,505 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken
[2020-11-24 16:27:36,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken
[2020-11-24 16:27:36,505 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-24 16:27:36,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-24 16:27:36,505 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__success
[2020-11-24 16:27:36,505 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken
[2020-11-24 16:27:36,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken
[2020-11-24 16:27:36,505 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken
[2020-11-24 16:27:36,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken
[2020-11-24 16:27:36,506 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken
[2020-11-24 16:27:36,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken
[2020-11-24 16:27:36,506 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 16:27:36,506 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 16:27:36,506 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 16:27:36,506 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DSMath
[2020-11-24 16:27:36,506 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_DSMath
[2020-11-24 16:27:36,506 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SpaghettiToken
[2020-11-24 16:27:36,506 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__fail
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__fail
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__success
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__fail
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__fail
[2020-11-24 16:27:36,507 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__success
[2020-11-24 16:27:36,508 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__fail
[2020-11-24 16:27:36,508 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__success
[2020-11-24 16:27:36,508 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-24 16:27:36,508 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__success
[2020-11-24 16:27:36,508 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-24 16:27:36,508 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 16:27:36,508 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 16:27:36,508 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 16:27:36,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 16:27:36,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 16:27:36,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__fail
[2020-11-24 16:27:36,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__success
[2020-11-24 16:27:36,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__fail
[2020-11-24 16:27:36,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__success
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__fail
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__success
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__fail
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__success
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__fail
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__success
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-24 16:27:36,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__success
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__success
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DSMath
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_DSMath
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SpaghettiToken
[2020-11-24 16:27:36,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 16:27:36,510 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 16:27:36,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 16:27:36,663 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:27:36,861 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:27:36,861 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:27:36,862 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:27:36,892 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 16:27:36,892 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-24 16:27:36,894 INFO  L202        PluginConnector]: Adding new model SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:27:36 BoogieIcfgContainer
[2020-11-24 16:27:36,894 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:27:36" (2/2) ...
[2020-11-24 16:27:36,894 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 16:27:36,894 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@5b3fca88 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:27:36, skipping insertion in model container
[2020-11-24 16:27:36,894 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 16:27:36,894 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 16:27:36,895 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 16:27:36,896 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 16:27:36,896 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/3) ...
[2020-11-24 16:27:36,897 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@246eaf48 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:27:36, skipping insertion in model container
[2020-11-24 16:27:36,897 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:27:36" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 16:27:36,931 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:27:36 NWAContainer
[2020-11-24 16:27:36,931 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 16:27:36,931 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 16:27:36,931 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 16:27:36,932 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 16:27:36,933 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:27:36" (3/4) ...
[2020-11-24 16:27:36,933 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2850d52d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:27:36, skipping insertion in model container
[2020-11-24 16:27:36,934 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:27:36" (4/4) ...
[2020-11-24 16:27:36,936 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 16:27:36,939 INFO  L110   BuchiProductObserver]: Initial RCFG 529 locations, 670 edges
[2020-11-24 16:27:36,939 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 16:27:36,947 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 16:27:37,703 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 16:27:37,706 INFO  L110   BuchiProductObserver]: BuchiProgram size 1254 locations, 2159 edges
[2020-11-24 16:27:37,706 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:27:37 BoogieIcfgContainer
[2020-11-24 16:27:37,706 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 16:27:37,706 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 16:27:37,706 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 16:27:37,708 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 16:27:37,709 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:27:37" (1/1) ...
[2020-11-24 16:27:37,750 INFO  L313           BlockEncoder]: Initial Icfg 1254 locations, 2159 edges
[2020-11-24 16:27:37,750 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 16:27:37,751 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 16:27:37,751 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 16:27:37,752 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 16:27:37,759 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 7 locations because of local infeasibility
[2020-11-24 16:27:37,763 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 16:27:37,769 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 16:27:37,771 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 16:27:37,772 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 16:27:37,772 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 16:27:37,775 INFO  L313           BlockEncoder]: Encoded RCFG 1216 locations, 2056 edges
[2020-11-24 16:27:37,775 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:27:37 BasicIcfg
[2020-11-24 16:27:37,775 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 16:27:37,775 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 16:27:37,776 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 16:27:37,778 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 16:27:37,778 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:27:37,778 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:27:36" (1/6) ...
[2020-11-24 16:27:37,779 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21bb070c and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:27:37, skipping insertion in model container
[2020-11-24 16:27:37,779 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:27:37,780 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:27:36" (2/6) ...
[2020-11-24 16:27:37,780 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21bb070c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:27:37, skipping insertion in model container
[2020-11-24 16:27:37,780 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:27:37,780 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:27:36" (3/6) ...
[2020-11-24 16:27:37,780 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21bb070c and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:27:37, skipping insertion in model container
[2020-11-24 16:27:37,780 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:27:37,780 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:27:36" (4/6) ...
[2020-11-24 16:27:37,781 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21bb070c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:27:37, skipping insertion in model container
[2020-11-24 16:27:37,781 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:27:37,781 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:27:37" (5/6) ...
[2020-11-24 16:27:37,782 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21bb070c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 04:27:37, skipping insertion in model container
[2020-11-24 16:27:37,782 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:27:37,782 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:27:37" (6/6) ...
[2020-11-24 16:27:37,783 INFO  L404   chiAutomizerObserver]: Analyzing ICFG SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-self.bpl_BEv2
[2020-11-24 16:27:37,820 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 16:27:37,821 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 16:27:37,821 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 16:27:37,821 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 16:27:37,821 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 16:27:37,821 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 16:27:37,821 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 16:27:37,822 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 16:27:37,822 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 16:27:37,839 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1216 states.
[2020-11-24 16:27:37,878 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:37,878 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:27:37,878 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:27:37,887 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:27:37,887 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 16:27:37,887 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 16:27:37,887 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1216 states.
[2020-11-24 16:27:37,898 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:37,898 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:27:37,898 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:27:37,899 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:27:37,899 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND TRUE   choice == 7
[L1408]              gas := gas - 21000;
[L1409]  COND FALSE  !(gas >= 0)
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:27:37,921 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:37,921 INFO  L82        PathProgramCache]: Analyzing trace with hash 229110929, now seen corresponding path program 1 times
[2020-11-24 16:27:37,927 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:37,942 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:27:37,983 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:27:37,984 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:27:37,985 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 16:27:37,988 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:27:37,999 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 16:27:38,000 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 16:27:38,001 INFO  L87              Difference]: Start difference. First operand 1216 states. Second operand 4 states.
[2020-11-24 16:27:38,247 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:27:38,248 INFO  L93              Difference]: Finished difference Result 683 states and 772 transitions.
[2020-11-24 16:27:38,248 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:27:38,250 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 683 states and 772 transitions.
[2020-11-24 16:27:38,255 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:38,261 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 683 states to 235 states and 264 transitions.
[2020-11-24 16:27:38,262 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 16:27:38,263 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 111
[2020-11-24 16:27:38,263 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 235 states and 264 transitions.
[2020-11-24 16:27:38,266 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:27:38,266 INFO  L728         BuchiCegarLoop]: Abstraction has 235 states and 264 transitions.
[2020-11-24 16:27:38,287 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 235 states and 264 transitions.
[2020-11-24 16:27:38,302 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 235 to 235.
[2020-11-24 16:27:38,302 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 235 states.
[2020-11-24 16:27:38,303 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 235 states to 235 states and 264 transitions.
[2020-11-24 16:27:38,304 INFO  L751         BuchiCegarLoop]: Abstraction has 235 states and 264 transitions.
[2020-11-24 16:27:38,304 INFO  L631         BuchiCegarLoop]: Abstraction has 235 states and 264 transitions.
[2020-11-24 16:27:38,304 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 16:27:38,304 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 235 states and 264 transitions.
[2020-11-24 16:27:38,306 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:38,306 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:27:38,306 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:27:38,307 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:27:38,307 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != src_s309 || p2 != msgsender_MSG) && src_s309 == dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND FALSE  !(__exception)
[L258]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L827]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L828]   COND TRUE   src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L829]   COND TRUE   !(allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309)
[L830]               revert := true;
[L258]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L259]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] == old(allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) - wad_s309) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:27:38,310 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:38,310 INFO  L82        PathProgramCache]: Analyzing trace with hash 958551381, now seen corresponding path program 1 times
[2020-11-24 16:27:38,311 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:38,321 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:27:38,338 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:27:38,338 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:27:38,338 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:27:38,339 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:27:38,339 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:27:38,340 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:27:38,340 INFO  L87              Difference]: Start difference. First operand 235 states and 264 transitions. cyclomatic complexity: 30 Second operand 3 states.
[2020-11-24 16:27:38,351 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:27:38,351 INFO  L93              Difference]: Finished difference Result 286 states and 320 transitions.
[2020-11-24 16:27:38,351 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:27:38,352 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 286 states and 320 transitions.
[2020-11-24 16:27:38,354 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:27:38,356 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 286 states to 260 states and 282 transitions.
[2020-11-24 16:27:38,356 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 126
[2020-11-24 16:27:38,356 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 140
[2020-11-24 16:27:38,356 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 260 states and 282 transitions.
[2020-11-24 16:27:38,357 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:27:38,357 INFO  L728         BuchiCegarLoop]: Abstraction has 260 states and 282 transitions.
[2020-11-24 16:27:38,358 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 260 states and 282 transitions.
[2020-11-24 16:27:38,364 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 260 to 249.
[2020-11-24 16:27:38,364 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 249 states.
[2020-11-24 16:27:38,364 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 249 states to 249 states and 271 transitions.
[2020-11-24 16:27:38,365 INFO  L751         BuchiCegarLoop]: Abstraction has 249 states and 271 transitions.
[2020-11-24 16:27:38,365 INFO  L631         BuchiCegarLoop]: Abstraction has 249 states and 271 transitions.
[2020-11-24 16:27:38,365 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 16:27:38,365 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 249 states and 271 transitions.
[2020-11-24 16:27:38,366 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:38,366 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:27:38,366 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:27:38,367 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:27:38,367 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != src_s309 || p2 != msgsender_MSG) && src_s309 == dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND TRUE   src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L759]   COND TRUE   !(__tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309)
[L760]               revert := true;
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:27:38,369 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:38,370 INFO  L82        PathProgramCache]: Analyzing trace with hash -607697728, now seen corresponding path program 1 times
[2020-11-24 16:27:38,370 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:38,381 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:27:38,423 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:27:38,423 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:27:38,423 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 16:27:38,424 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:27:38,424 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 16:27:38,424 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 16:27:38,424 INFO  L87              Difference]: Start difference. First operand 249 states and 271 transitions. cyclomatic complexity: 23 Second operand 6 states.
[2020-11-24 16:27:38,544 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:27:38,545 INFO  L93              Difference]: Finished difference Result 298 states and 332 transitions.
[2020-11-24 16:27:38,545 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 16:27:38,545 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 298 states and 332 transitions.
[2020-11-24 16:27:38,548 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:27:38,550 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 298 states to 295 states and 329 transitions.
[2020-11-24 16:27:38,550 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 153
[2020-11-24 16:27:38,550 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 153
[2020-11-24 16:27:38,550 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 295 states and 329 transitions.
[2020-11-24 16:27:38,551 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:27:38,551 INFO  L728         BuchiCegarLoop]: Abstraction has 295 states and 329 transitions.
[2020-11-24 16:27:38,552 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 295 states and 329 transitions.
[2020-11-24 16:27:38,557 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 295 to 248.
[2020-11-24 16:27:38,557 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 248 states.
[2020-11-24 16:27:38,558 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 248 states to 248 states and 269 transitions.
[2020-11-24 16:27:38,558 INFO  L751         BuchiCegarLoop]: Abstraction has 248 states and 269 transitions.
[2020-11-24 16:27:38,558 INFO  L631         BuchiCegarLoop]: Abstraction has 248 states and 269 transitions.
[2020-11-24 16:27:38,558 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 16:27:38,558 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 248 states and 269 transitions.
[2020-11-24 16:27:38,559 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:38,560 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:27:38,560 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:27:38,561 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:27:38,561 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != src_s309 || p2 != msgsender_MSG) && src_s309 == dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND TRUE   !(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309)
[L776]               revert := true;
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:27:38,563 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:38,563 INFO  L82        PathProgramCache]: Analyzing trace with hash 1310438367, now seen corresponding path program 1 times
[2020-11-24 16:27:38,564 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:38,573 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:27:38,613 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:27:38,613 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:27:38,613 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 16:27:38,614 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:27:38,614 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 16:27:38,614 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 16:27:38,614 INFO  L87              Difference]: Start difference. First operand 248 states and 269 transitions. cyclomatic complexity: 22 Second operand 6 states.
[2020-11-24 16:27:38,723 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:27:38,723 INFO  L93              Difference]: Finished difference Result 263 states and 283 transitions.
[2020-11-24 16:27:38,723 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 16:27:38,723 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 263 states and 283 transitions.
[2020-11-24 16:27:38,725 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:27:38,726 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 263 states to 260 states and 280 transitions.
[2020-11-24 16:27:38,727 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 140
[2020-11-24 16:27:38,727 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 140
[2020-11-24 16:27:38,727 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 260 states and 280 transitions.
[2020-11-24 16:27:38,727 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:27:38,728 INFO  L728         BuchiCegarLoop]: Abstraction has 260 states and 280 transitions.
[2020-11-24 16:27:38,728 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 260 states and 280 transitions.
[2020-11-24 16:27:38,731 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 260 to 247.
[2020-11-24 16:27:38,731 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 247 states.
[2020-11-24 16:27:38,732 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 247 states to 247 states and 267 transitions.
[2020-11-24 16:27:38,732 INFO  L751         BuchiCegarLoop]: Abstraction has 247 states and 267 transitions.
[2020-11-24 16:27:38,732 INFO  L631         BuchiCegarLoop]: Abstraction has 247 states and 267 transitions.
[2020-11-24 16:27:38,732 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 16:27:38,732 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 247 states and 267 transitions.
[2020-11-24 16:27:38,733 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:38,733 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:27:38,733 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:27:38,734 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:27:38,734 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != src_s309 || p2 != msgsender_MSG) && src_s309 == dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND TRUE   src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L759]   COND FALSE  !(!(__tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309))
[L763]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L764]   CALL        call __var_5 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L764]   RET         call __var_5 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG], wad_s309);
[L765]   COND TRUE   revert
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:27:38,736 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:38,736 INFO  L82        PathProgramCache]: Analyzing trace with hash -121664512, now seen corresponding path program 1 times
[2020-11-24 16:27:38,737 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:38,744 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:27:38,765 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:27:38,765 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:27:38,766 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:27:38,766 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:27:38,766 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:27:38,766 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:27:38,766 INFO  L87              Difference]: Start difference. First operand 247 states and 267 transitions. cyclomatic complexity: 21 Second operand 5 states.
[2020-11-24 16:27:38,781 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:27:38,781 INFO  L93              Difference]: Finished difference Result 258 states and 272 transitions.
[2020-11-24 16:27:38,781 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:27:38,781 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 258 states and 272 transitions.
[2020-11-24 16:27:38,783 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:27:38,784 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 258 states to 258 states and 272 transitions.
[2020-11-24 16:27:38,784 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 138
[2020-11-24 16:27:38,784 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 138
[2020-11-24 16:27:38,784 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 258 states and 272 transitions.
[2020-11-24 16:27:38,785 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:27:38,785 INFO  L728         BuchiCegarLoop]: Abstraction has 258 states and 272 transitions.
[2020-11-24 16:27:38,785 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 258 states and 272 transitions.
[2020-11-24 16:27:38,788 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 258 to 247.
[2020-11-24 16:27:38,788 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 247 states.
[2020-11-24 16:27:38,788 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 247 states to 247 states and 261 transitions.
[2020-11-24 16:27:38,789 INFO  L751         BuchiCegarLoop]: Abstraction has 247 states and 261 transitions.
[2020-11-24 16:27:38,789 INFO  L631         BuchiCegarLoop]: Abstraction has 247 states and 261 transitions.
[2020-11-24 16:27:38,789 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 16:27:38,789 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 247 states and 261 transitions.
[2020-11-24 16:27:38,790 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:38,790 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:27:38,790 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:27:38,791 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:27:38,791 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != src_s309 || p2 != msgsender_MSG) && src_s309 == dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND TRUE   src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L759]   COND FALSE  !(!(__tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309))
[L763]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L764]   CALL        call __var_5 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND TRUE   !((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45)
[L668]               revert := true;
[L764]   RET         call __var_5 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG], wad_s309);
[L765]   COND TRUE   revert
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:27:38,792 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:38,793 INFO  L82        PathProgramCache]: Analyzing trace with hash -1607581035, now seen corresponding path program 1 times
[2020-11-24 16:27:38,793 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:38,803 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:27:38,851 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:27:38,851 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:27:38,851 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:27:38,852 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:27:38,852 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:27:38,852 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:27:38,852 INFO  L87              Difference]: Start difference. First operand 247 states and 261 transitions. cyclomatic complexity: 15 Second operand 7 states.
[2020-11-24 16:27:39,024 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:27:39,025 INFO  L93              Difference]: Finished difference Result 295 states and 316 transitions.
[2020-11-24 16:27:39,025 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 16:27:39,025 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 295 states and 316 transitions.
[2020-11-24 16:27:39,026 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:27:39,028 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 295 states to 291 states and 312 transitions.
[2020-11-24 16:27:39,028 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 149
[2020-11-24 16:27:39,028 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 149
[2020-11-24 16:27:39,028 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 291 states and 312 transitions.
[2020-11-24 16:27:39,029 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:27:39,029 INFO  L728         BuchiCegarLoop]: Abstraction has 291 states and 312 transitions.
[2020-11-24 16:27:39,029 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 291 states and 312 transitions.
[2020-11-24 16:27:39,032 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 291 to 245.
[2020-11-24 16:27:39,032 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 245 states.
[2020-11-24 16:27:39,032 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 245 states to 245 states and 258 transitions.
[2020-11-24 16:27:39,032 INFO  L751         BuchiCegarLoop]: Abstraction has 245 states and 258 transitions.
[2020-11-24 16:27:39,032 INFO  L631         BuchiCegarLoop]: Abstraction has 245 states and 258 transitions.
[2020-11-24 16:27:39,032 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 16:27:39,033 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 245 states and 258 transitions.
[2020-11-24 16:27:39,033 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:39,033 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:27:39,033 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:27:39,034 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:27:39,034 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != src_s309 || p2 != msgsender_MSG) && src_s309 == dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L779]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L780]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND TRUE   !((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45)
[L668]               revert := true;
[L780]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L781]   COND TRUE   revert
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:27:39,035 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:39,036 INFO  L82        PathProgramCache]: Analyzing trace with hash -1691062977, now seen corresponding path program 1 times
[2020-11-24 16:27:39,036 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:39,044 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:27:39,077 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:27:39,077 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:27:39,077 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 16:27:39,077 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:27:39,078 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 16:27:39,078 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 16:27:39,078 INFO  L87              Difference]: Start difference. First operand 245 states and 258 transitions. cyclomatic complexity: 14 Second operand 6 states.
[2020-11-24 16:27:39,103 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:27:39,103 INFO  L93              Difference]: Finished difference Result 247 states and 259 transitions.
[2020-11-24 16:27:39,103 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 16:27:39,103 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 247 states and 259 transitions.
[2020-11-24 16:27:39,104 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:39,105 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 247 states to 243 states and 255 transitions.
[2020-11-24 16:27:39,105 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 123
[2020-11-24 16:27:39,106 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 123
[2020-11-24 16:27:39,106 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 243 states and 255 transitions.
[2020-11-24 16:27:39,106 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:27:39,106 INFO  L728         BuchiCegarLoop]: Abstraction has 243 states and 255 transitions.
[2020-11-24 16:27:39,106 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 243 states and 255 transitions.
[2020-11-24 16:27:39,109 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 243 to 243.
[2020-11-24 16:27:39,109 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 243 states.
[2020-11-24 16:27:39,110 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 243 states to 243 states and 255 transitions.
[2020-11-24 16:27:39,110 INFO  L751         BuchiCegarLoop]: Abstraction has 243 states and 255 transitions.
[2020-11-24 16:27:39,110 INFO  L631         BuchiCegarLoop]: Abstraction has 243 states and 255 transitions.
[2020-11-24 16:27:39,110 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 16:27:39,110 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 243 states and 255 transitions.
[2020-11-24 16:27:39,111 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:39,111 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:27:39,111 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:27:39,112 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:27:39,112 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != src_s309 || p2 != msgsender_MSG) && src_s309 == dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L779]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L780]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L780]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L781]   COND FALSE  !(revert)
[L787]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L788]               __tmp__balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L789]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L790]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L791]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L792]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L792]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L793]   COND FALSE  !(revert)
[L799]               ninetynine_s309 := ninetynine_s309;
[L800]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L801]   CALL        call __var_7 := add~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L648]               z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L649]   COND TRUE   !((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23)
[L650]               revert := true;
[L801]   RET         call __var_7 := add~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L802]   COND TRUE   revert
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:27:39,113 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:39,113 INFO  L82        PathProgramCache]: Analyzing trace with hash -1107427747, now seen corresponding path program 1 times
[2020-11-24 16:27:39,114 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:39,132 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:27:39,247 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 1 proven. 2 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 16:27:39,247 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 16:27:39,248 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [14] total 14
[2020-11-24 16:27:39,248 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:27:39,248 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 16:27:39,248 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=28, Invalid=154, Unknown=0, NotChecked=0, Total=182
[2020-11-24 16:27:39,249 INFO  L87              Difference]: Start difference. First operand 243 states and 255 transitions. cyclomatic complexity: 13 Second operand 14 states.
[2020-11-24 16:27:39,509 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:27:39,509 INFO  L93              Difference]: Finished difference Result 254 states and 265 transitions.
[2020-11-24 16:27:39,509 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 16:27:39,509 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 254 states and 265 transitions.
[2020-11-24 16:27:39,510 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:27:39,511 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 254 states to 247 states and 258 transitions.
[2020-11-24 16:27:39,511 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 127
[2020-11-24 16:27:39,512 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 127
[2020-11-24 16:27:39,512 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 247 states and 258 transitions.
[2020-11-24 16:27:39,512 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:27:39,512 INFO  L728         BuchiCegarLoop]: Abstraction has 247 states and 258 transitions.
[2020-11-24 16:27:39,512 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 247 states and 258 transitions.
[2020-11-24 16:27:39,514 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 247 to 238.
[2020-11-24 16:27:39,514 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 238 states.
[2020-11-24 16:27:39,514 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 238 states to 238 states and 249 transitions.
[2020-11-24 16:27:39,514 INFO  L751         BuchiCegarLoop]: Abstraction has 238 states and 249 transitions.
[2020-11-24 16:27:39,515 INFO  L631         BuchiCegarLoop]: Abstraction has 238 states and 249 transitions.
[2020-11-24 16:27:39,515 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 16:27:39,515 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 238 states and 249 transitions.
[2020-11-24 16:27:39,515 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:39,515 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:27:39,515 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:27:39,516 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:27:39,516 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != src_s309 || p2 != msgsender_MSG) && src_s309 == dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L779]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L780]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L780]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L781]   COND FALSE  !(revert)
[L787]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L788]               __tmp__balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L789]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L790]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L791]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L792]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND TRUE   !((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45)
[L668]               revert := true;
[L792]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L793]   COND TRUE   revert
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:27:39,518 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:39,518 INFO  L82        PathProgramCache]: Analyzing trace with hash -1122370439, now seen corresponding path program 1 times
[2020-11-24 16:27:39,518 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:39,524 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:27:39,545 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-24 16:27:39,545 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:27:39,545 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 16:27:39,545 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:27:39,545 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 16:27:39,545 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 16:27:39,546 INFO  L87              Difference]: Start difference. First operand 238 states and 249 transitions. cyclomatic complexity: 12 Second operand 6 states.
[2020-11-24 16:27:39,565 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:27:39,565 INFO  L93              Difference]: Finished difference Result 240 states and 250 transitions.
[2020-11-24 16:27:39,565 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 16:27:39,565 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 240 states and 250 transitions.
[2020-11-24 16:27:39,566 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:39,567 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 240 states to 236 states and 246 transitions.
[2020-11-24 16:27:39,567 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 116
[2020-11-24 16:27:39,567 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 116
[2020-11-24 16:27:39,567 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 236 states and 246 transitions.
[2020-11-24 16:27:39,567 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:27:39,567 INFO  L728         BuchiCegarLoop]: Abstraction has 236 states and 246 transitions.
[2020-11-24 16:27:39,568 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 236 states and 246 transitions.
[2020-11-24 16:27:39,569 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 236 to 236.
[2020-11-24 16:27:39,569 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 236 states.
[2020-11-24 16:27:39,570 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 236 states to 236 states and 246 transitions.
[2020-11-24 16:27:39,570 INFO  L751         BuchiCegarLoop]: Abstraction has 236 states and 246 transitions.
[2020-11-24 16:27:39,570 INFO  L631         BuchiCegarLoop]: Abstraction has 236 states and 246 transitions.
[2020-11-24 16:27:39,570 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 16:27:39,570 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 236 states and 246 transitions.
[2020-11-24 16:27:39,570 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:27:39,571 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:27:39,571 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:27:39,571 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:27:39,571 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != src_s309 || p2 != msgsender_MSG) && src_s309 == dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND FALSE  !(__exception)
[L258]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L827]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L828]   COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L845]   COND FALSE  !(!(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L849]   COND TRUE   DType[this] == SpaghettiToken
[L850]   CALL        call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L850]   RET         call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L851]   COND FALSE  !(revert)
[L857]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][src_s309];
[L858]               balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L859]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][src_s309];
[L860]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L861]   COND TRUE   DType[this] == SpaghettiToken
[L862]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L862]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L863]   COND FALSE  !(revert)
[L869]               ninetynine_s309 := ninetynine_s309;
[L870]   COND TRUE   DType[this] == SpaghettiToken
[L871]   CALL        call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L657]               z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L658]   COND FALSE  !(!((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23))
[L871]   RET         call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L872]   COND FALSE  !(revert)
[L878]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][dst_s309];
[L879]               balanceOf_SpaghettiToken[this][dst_s309] := __var_7;
[L880]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][dst_s309];
[L881]   CALL        call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L907]   COND TRUE   DType[this] == SpaghettiToken
[L908]   CALL        call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L908]   RET         call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L909]   COND FALSE  !(revert)
[L915]               totalSupply_SpaghettiToken[this] := __var_8;
[L916]               assert { :EventEmitted "Burn_SpaghettiToken" } true;
[L881]   RET         call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L882]   COND FALSE  !(revert)
[L885]               assert { :EventEmitted "Transfer_SpaghettiToken" } true;
[L886]               __ret_0_ := true;
[L258]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L259]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] == old(allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) - wad_s309) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this][p1][p2] == old(allowance_SpaghettiToken[this][p1][p2])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:27:39,573 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:39,573 INFO  L82        PathProgramCache]: Analyzing trace with hash 1146500929, now seen corresponding path program 1 times
[2020-11-24 16:27:39,573 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:39,603 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:27:39,641 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:27:39,685 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:39,686 INFO  L82        PathProgramCache]: Analyzing trace with hash 5286, now seen corresponding path program 1 times
[2020-11-24 16:27:39,686 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:39,686 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:27:39,687 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:27:39,687 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:27:39,688 INFO  L82        PathProgramCache]: Analyzing trace with hash 1181795686, now seen corresponding path program 1 times
[2020-11-24 16:27:39,688 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:27:39,714 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:27:39,742 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
[2020-11-24 16:27:40,239 WARN  L188               SmtUtils]: Spent 394.00 ms on a formula simplification. DAG size of input: 170 DAG size of output: 164
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #5: 317 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 317 to 631
[2020-11-24 16:27:40,388 WARN  L188               SmtUtils]: Spent 132.00 ms on a formula simplification. DAG size of input: 80 DAG size of output: 79
[2020-11-24 16:27:40,570 WARN  L188               SmtUtils]: Spent 180.00 ms on a formula simplification. DAG size of input: 124 DAG size of output: 119
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-24 16:27:40,827 WARN  L188               SmtUtils]: Spent 253.00 ms on a formula simplification. DAG size of input: 111 DAG size of output: 110
[2020-11-24 16:27:41,507 WARN  L188               SmtUtils]: Spent 679.00 ms on a formula simplification. DAG size of input: 199 DAG size of output: 182
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 2473 to 4943
Garbage collection #8: 4943 nodes / 0 free / 0.001s / 0.006s total
Resizing node table from 4943 to 9883
Garbage collection #9: 9883 nodes / 0 free / 0.003s / 0.009s total
Resizing node table from 9883 to 19763
[2020-11-24 16:27:43,503 WARN  L188               SmtUtils]: Spent 1.89 s on a formula simplification. DAG size of input: 149 DAG size of output: 130
[2020-11-24 16:27:44,872 WARN  L188               SmtUtils]: Spent 1.37 s on a formula simplification. DAG size of input: 271 DAG size of output: 249
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-24 16:27:47,672 WARN  L188               SmtUtils]: Spent 2.79 s on a formula simplification. DAG size of input: 229 DAG size of output: 228
[2020-11-24 16:27:50,222 WARN  L188               SmtUtils]: Spent 2.55 s on a formula simplification. DAG size of input: 269 DAG size of output: 248
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #9: 21107 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 21107 to 42209
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6271 to 12541
[2020-11-24 16:27:51,902 WARN  L188               SmtUtils]: Spent 1.65 s on a formula simplification. DAG size of input: 169 DAG size of output: 168
[2020-11-24 16:27:52,977 WARN  L188               SmtUtils]: Spent 1.07 s on a formula simplification that was a NOOP. DAG size: 287
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
[2020-11-24 16:27:57,646 WARN  L188               SmtUtils]: Spent 4.65 s on a formula simplification. DAG size of input: 235 DAG size of output: 230
[2020-11-24 16:28:00,307 WARN  L188               SmtUtils]: Spent 2.66 s on a formula simplification. DAG size of input: 250 DAG size of output: 248
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Received shutdown request...
Cannot interrupt operation gracefully because timeout expired. Forcing shutdown
