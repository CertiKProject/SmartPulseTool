This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 17:37:09,021 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 17:37:09,022 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 17:37:09,029 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 17:37:09,030 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 17:37:09,030 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 17:37:09,031 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 17:37:09,032 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 17:37:09,033 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 17:37:09,033 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 17:37:09,034 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 17:37:09,034 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 17:37:09,034 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 17:37:09,035 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 17:37:09,036 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 17:37:09,036 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 17:37:09,036 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 17:37:09,037 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 17:37:09,038 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 17:37:09,039 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 17:37:09,040 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 17:37:09,040 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 17:37:09,041 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 17:37:09,041 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 17:37:09,042 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 17:37:09,042 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 17:37:09,042 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 17:37:09,043 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 17:37:09,043 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 17:37:09,043 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 17:37:09,043 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 17:37:09,044 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 17:37:09,044 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 17:37:09,044 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 17:37:09,045 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 17:37:09,045 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 17:37:09,045 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 17:37:09,045 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 17:37:09,045 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 17:37:09,046 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 17:37:09,046 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 17:37:09,046 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 17:37:09,052 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 17:37:09,052 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 17:37:09,052 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 17:37:09,053 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 17:37:09,053 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 17:37:09,053 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 17:37:09,053 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 17:37:09,053 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 17:37:09,053 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 17:37:09,053 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 17:37:09,053 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 17:37:09,053 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 17:37:09,053 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 17:37:09,053 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 17:37:09,054 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 17:37:09,054 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 17:37:09,054 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 17:37:09,054 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 17:37:09,054 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 17:37:09,054 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 17:37:09,054 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 17:37:09,054 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 17:37:09,054 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 17:37:09,054 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 17:37:09,054 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 17:37:09,054 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 17:37:09,071 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 17:37:09,080 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 17:37:09,083 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 17:37:09,084 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 17:37:09,084 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 17:37:09,085 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl
[2020-11-24 17:37:09,085 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl'
[2020-11-24 17:37:09,130 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 17:37:09,130 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 17:37:09,131 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 17:37:09,131 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 17:37:09,131 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 17:37:09,142 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/1) ...
[2020-11-24 17:37:09,143 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/1) ...
[2020-11-24 17:37:09,155 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/1) ...
[2020-11-24 17:37:09,155 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/1) ...
[2020-11-24 17:37:09,168 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/1) ...
[2020-11-24 17:37:09,174 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/1) ...
[2020-11-24 17:37:09,178 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/1) ...
[2020-11-24 17:37:09,183 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 17:37:09,184 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 17:37:09,184 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 17:37:09,186 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 17:37:09,190 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/1) ...
[2020-11-24 17:37:09,202 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Token.transfer(to, value), msg.sender == to && value <= _balances_Token[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][to] >= 0 && _balances_Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][msg.sender] >= 0 &&  _balances_Token[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.transfer(to, value), return == true && _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this] == old(_balances_Token[this]) && _allowed_Token[this] == old(_allowed_Token[this]))))
[2020-11-24 17:37:09,207 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Token.transfer(to, value), msg.sender == to && value <= _balances_Token[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][to] >= 0 && _balances_Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][msg.sender] >= 0 &&  _balances_Token[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.transfer(to, value), return == true && _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this] == old(_balances_Token[this]) && _allowed_Token[this] == old(_allowed_Token[this]))))
[2020-11-24 17:37:09,214 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Token.transfer(to, value), msg.sender == to && value <= _balances_Token[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][to] >= 0 && _balances_Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][msg.sender] >= 0 &&  _balances_Token[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.transfer(to, value), return == true && _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this] == old(_balances_Token[this]) && _allowed_Token[this] == old(_allowed_Token[this]))))
[2020-11-24 17:37:09,220 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s316 && value_s316<=_balances_Token[this][msg.sender] ) && value_s316>=0 ) && value_s316<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_Token[this][to_s316]>=0 ) && _balances_Token[this][to_s316]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_Token[this][msg.sender]>=0 ) && _balances_Token[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>],IdentifierExpression[to_s316,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s316,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s316,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s316,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],[IdentifierExpression[to_s316,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],[IdentifierExpression[to_s316,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 17:37:09,222 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( __ret_0_==true && _totalSupply_Token[this]==( old(_totalSupply_Token[this]) ) ) && _balances_Token[this]==( old(_balances_Token[this]) ) ) && _allowed_Token[this]==( old(_allowed_Token[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_Token>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Token>]]]]]]
[2020-11-24 17:37:09,225 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Token.transfer(to, value), msg.sender == to && value <= _balances_Token[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][to] >= 0 && _balances_Token[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_Token[this][msg.sender] >= 0 &&  _balances_Token[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Token.transfer(to, value), return == true && _totalSupply_Token[this] == old(_totalSupply_Token[this]) && _balances_Token[this] == old(_balances_Token[this]) && _allowed_Token[this] == old(_allowed_Token[this]))))
[2020-11-24 17:37:09,225 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_Token0) ==> ( <>AP(success_transfer_Token0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 17:37:09,229 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:37:09 PropertyContainer
[2020-11-24 17:37:09,229 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 17:37:09,229 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 17:37:09,229 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 17:37:09,229 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 17:37:09,230 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/2) ...
[2020-11-24 17:37:09,231 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 17:37:09,231 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 17:37:09,237 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:37:09" (2/2) ...
[2020-11-24 17:37:09,237 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 17:37:09,238 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 17:37:09,238 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 17:37:09,238 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 17:37:09,238 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/2) ...
[2020-11-24 17:37:09,288 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 17:37:09,288 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 17:37:09,288 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 17:37:09,288 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token
[2020-11-24 17:37:09,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token
[2020-11-24 17:37:09,289 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Token
[2020-11-24 17:37:09,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Token
[2020-11-24 17:37:09,289 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Token
[2020-11-24 17:37:09,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Token
[2020-11-24 17:37:09,289 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Token
[2020-11-24 17:37:09,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Token
[2020-11-24 17:37:09,289 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Token
[2020-11-24 17:37:09,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Token
[2020-11-24 17:37:09,289 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Token
[2020-11-24 17:37:09,289 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Token
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_Token__success
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_Token__success
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Token
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 17:37:09,290 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token__success
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token__fail
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Token__success
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Token__fail
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Token__success
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Token__fail
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Token__success
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Token__fail
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Token__success
[2020-11-24 17:37:09,291 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Token__fail
[2020-11-24 17:37:09,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Token__success
[2020-11-24 17:37:09,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Token__fail
[2020-11-24 17:37:09,292 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_Token__fail
[2020-11-24 17:37:09,292 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_Token__fail
[2020-11-24 17:37:09,292 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 17:37:09,292 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 17:37:09,292 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 17:37:09,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 17:37:09,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 17:37:09,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 17:37:09,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 17:37:09,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 17:37:09,292 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token__fail
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token__success
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Token__fail
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Token__success
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Token__fail
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Token__success
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Token__fail
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Token__success
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Token__fail
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Token__success
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Token__fail
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Token__success
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_Token__fail
[2020-11-24 17:37:09,293 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_Token__success
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_Token__fail
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_Token__success
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 17:37:09,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Token
[2020-11-24 17:37:09,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 17:37:09,295 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 17:37:09,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 17:37:09,466 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:37:09,467 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:37:09,467 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:37:09,676 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 17:37:09,676 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-24 17:37:09,677 INFO  L202        PluginConnector]: Adding new model Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:37:09 BoogieIcfgContainer
[2020-11-24 17:37:09,677 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:37:09" (2/2) ...
[2020-11-24 17:37:09,677 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 17:37:09,678 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3601731a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:37:09, skipping insertion in model container
[2020-11-24 17:37:09,678 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 17:37:09,678 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 17:37:09,678 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 17:37:09,680 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 17:37:09,680 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/3) ...
[2020-11-24 17:37:09,680 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@d0e31f1 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:37:09, skipping insertion in model container
[2020-11-24 17:37:09,680 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:37:09" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 17:37:09,716 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:37:09 NWAContainer
[2020-11-24 17:37:09,716 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 17:37:09,716 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 17:37:09,716 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 17:37:09,717 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 17:37:09,718 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:37:09" (3/4) ...
[2020-11-24 17:37:09,718 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4565e4da and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:37:09, skipping insertion in model container
[2020-11-24 17:37:09,719 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:37:09" (4/4) ...
[2020-11-24 17:37:09,722 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 17:37:09,724 INFO  L110   BuchiProductObserver]: Initial RCFG 486 locations, 601 edges
[2020-11-24 17:37:09,725 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 17:37:09,741 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 17:37:10,506 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 17:37:10,508 INFO  L110   BuchiProductObserver]: BuchiProgram size 1150 locations, 1941 edges
[2020-11-24 17:37:10,509 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:37:10 BoogieIcfgContainer
[2020-11-24 17:37:10,509 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 17:37:10,509 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 17:37:10,509 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 17:37:10,511 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 17:37:10,512 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:37:10" (1/1) ...
[2020-11-24 17:37:10,557 INFO  L313           BlockEncoder]: Initial Icfg 1150 locations, 1941 edges
[2020-11-24 17:37:10,557 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 17:37:10,558 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 17:37:10,558 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 17:37:10,559 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 17:37:10,566 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 9 locations because of local infeasibility
[2020-11-24 17:37:10,570 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 17:37:10,576 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 17:37:10,577 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 17:37:10,579 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 17:37:10,579 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 17:37:10,582 INFO  L313           BlockEncoder]: Encoded RCFG 1130 locations, 1895 edges
[2020-11-24 17:37:10,582 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:37:10 BasicIcfg
[2020-11-24 17:37:10,582 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 17:37:10,583 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 17:37:10,583 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 17:37:10,585 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 17:37:10,585 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:37:10,585 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:37:09" (1/6) ...
[2020-11-24 17:37:10,587 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50800581 and model type Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:37:10, skipping insertion in model container
[2020-11-24 17:37:10,587 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:37:10,587 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:37:09" (2/6) ...
[2020-11-24 17:37:10,588 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50800581 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:37:10, skipping insertion in model container
[2020-11-24 17:37:10,588 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:37:10,588 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:37:09" (3/6) ...
[2020-11-24 17:37:10,588 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50800581 and model type Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:37:10, skipping insertion in model container
[2020-11-24 17:37:10,588 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:37:10,588 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:37:09" (4/6) ...
[2020-11-24 17:37:10,589 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50800581 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:37:10, skipping insertion in model container
[2020-11-24 17:37:10,589 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:37:10,589 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:37:10" (5/6) ...
[2020-11-24 17:37:10,589 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50800581 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 05:37:10, skipping insertion in model container
[2020-11-24 17:37:10,589 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:37:10,589 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:37:10" (6/6) ...
[2020-11-24 17:37:10,591 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Token_0xef811e8ea1c406cd1df7c953e45acfc4deb72e3d_transfer-self.bpl_BEv2
[2020-11-24 17:37:10,629 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 17:37:10,630 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 17:37:10,630 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 17:37:10,630 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 17:37:10,630 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 17:37:10,630 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 17:37:10,630 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 17:37:10,630 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 17:37:10,630 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 17:37:10,646 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1130 states.
[2020-11-24 17:37:10,687 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:10,687 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:37:10,687 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:37:10,695 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:37:10,695 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 17:37:10,695 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 17:37:10,696 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1130 states.
[2020-11-24 17:37:10,705 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:10,705 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:37:10,705 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:37:10,707 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:37:10,707 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_Token0 := false;
[L2]                 call_transfer_Token0 := false;
[L2]     CALL        call main();
[L1378]              assume null == 0;
[L1379]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1379]  RET         call this := FreshRefGenerator__success();
[L1380]              assume now >= 0;
[L1381]              assume DType[this] == Token;
[L1382]              assume !revert && gas >= 0;
[L1383]  CALL        call CorralChoice_Token(this);
[L1294]              havoc msgsender_MSG;
[L1295]              havoc msgvalue_MSG;
[L1296]              havoc choice;
[L1297]              havoc to_s316;
[L1298]              havoc value_s316;
[L1299]              havoc __ret_0_transfer;
[L1300]              havoc spender_s335;
[L1301]              havoc value_s335;
[L1302]              havoc __ret_0_approve;
[L1303]              havoc from_s370;
[L1304]              havoc to_s370;
[L1305]              havoc value_s370;
[L1306]              havoc __ret_0_transferFrom;
[L1307]              havoc __ret_0_totalSupply;
[L1308]              havoc owner_s281;
[L1309]              havoc __ret_0_balanceOf;
[L1310]              havoc owner_s297;
[L1311]              havoc spender_s297;
[L1312]              havoc __ret_0_allowance;
[L1313]              havoc __ret_0_name;
[L1314]              havoc __ret_0_symbol;
[L1315]              havoc __ret_0_decimals;
[L1316]              havoc banker_s261;
[L1317]              havoc spender_s397;
[L1318]              havoc addedValue_s397;
[L1319]              havoc __ret_0_increaseAllowance;
[L1320]              havoc spender_s424;
[L1321]              havoc subtractedValue_s424;
[L1322]              havoc __ret_0_decreaseAllowance;
[L1323]              havoc tmpNow;
[L1324]              havoc gas;
[L1325]              assume gas > 4000000 && gas <= 8000000;
[L1326]              tmpNow := now;
[L1327]              havoc now;
[L1328]              assume now > tmpNow;
[L1329]              assume msgsender_MSG != null;
[L1330]  COND TRUE   choice == 6
[L1331]              gas := gas - 21000;
[L1332]  COND FALSE  !(gas >= 0)
[L1383]  RET         call CorralChoice_Token(this);

Loop:
[L1383]        assume true;

[2020-11-24 17:37:10,723 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:37:10,723 INFO  L82        PathProgramCache]: Analyzing trace with hash -749050998, now seen corresponding path program 1 times
[2020-11-24 17:37:10,727 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:37:10,746 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:37:10,793 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:37:10,795 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:37:10,795 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 17:37:10,799 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:37:10,811 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 17:37:10,812 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 17:37:10,813 INFO  L87              Difference]: Start difference. First operand 1130 states. Second operand 4 states.
[2020-11-24 17:37:11,037 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:37:11,037 INFO  L93              Difference]: Finished difference Result 575 states and 639 transitions.
[2020-11-24 17:37:11,037 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 17:37:11,039 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 575 states and 639 transitions.
[2020-11-24 17:37:11,044 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:11,050 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 575 states to 183 states and 196 transitions.
[2020-11-24 17:37:11,052 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 17:37:11,053 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 183
[2020-11-24 17:37:11,054 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 183 states and 196 transitions.
[2020-11-24 17:37:11,056 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:37:11,056 INFO  L728         BuchiCegarLoop]: Abstraction has 183 states and 196 transitions.
[2020-11-24 17:37:11,073 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 183 states and 196 transitions.
[2020-11-24 17:37:11,087 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 183 to 183.
[2020-11-24 17:37:11,087 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 183 states.
[2020-11-24 17:37:11,088 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 183 states to 183 states and 196 transitions.
[2020-11-24 17:37:11,089 INFO  L751         BuchiCegarLoop]: Abstraction has 183 states and 196 transitions.
[2020-11-24 17:37:11,089 INFO  L631         BuchiCegarLoop]: Abstraction has 183 states and 196 transitions.
[2020-11-24 17:37:11,089 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 17:37:11,089 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 183 states and 196 transitions.
[2020-11-24 17:37:11,091 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:11,091 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:37:11,091 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:37:11,093 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:37:11,093 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_Token0 := false;
[L2]                 call_transfer_Token0 := false;
[L2]     CALL        call main();
[L1378]              assume null == 0;
[L1379]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1379]  RET         call this := FreshRefGenerator__success();
[L1380]              assume now >= 0;
[L1381]              assume DType[this] == Token;
[L1382]              assume !revert && gas >= 0;
[L1383]  CALL        call CorralChoice_Token(this);
[L1294]              havoc msgsender_MSG;
[L1295]              havoc msgvalue_MSG;
[L1296]              havoc choice;
[L1297]              havoc to_s316;
[L1298]              havoc value_s316;
[L1299]              havoc __ret_0_transfer;
[L1300]              havoc spender_s335;
[L1301]              havoc value_s335;
[L1302]              havoc __ret_0_approve;
[L1303]              havoc from_s370;
[L1304]              havoc to_s370;
[L1305]              havoc value_s370;
[L1306]              havoc __ret_0_transferFrom;
[L1307]              havoc __ret_0_totalSupply;
[L1308]              havoc owner_s281;
[L1309]              havoc __ret_0_balanceOf;
[L1310]              havoc owner_s297;
[L1311]              havoc spender_s297;
[L1312]              havoc __ret_0_allowance;
[L1313]              havoc __ret_0_name;
[L1314]              havoc __ret_0_symbol;
[L1315]              havoc __ret_0_decimals;
[L1316]              havoc banker_s261;
[L1317]              havoc spender_s397;
[L1318]              havoc addedValue_s397;
[L1319]              havoc __ret_0_increaseAllowance;
[L1320]              havoc spender_s424;
[L1321]              havoc subtractedValue_s424;
[L1322]              havoc __ret_0_decreaseAllowance;
[L1323]              havoc tmpNow;
[L1324]              havoc gas;
[L1325]              assume gas > 4000000 && gas <= 8000000;
[L1326]              tmpNow := now;
[L1327]              havoc now;
[L1328]              assume now > tmpNow;
[L1329]              assume msgsender_MSG != null;
[L1330]  COND TRUE   choice == 6
[L1331]              gas := gas - 21000;
[L1332]  COND TRUE   gas >= 0
[L1333]              assume value_s316 >= 0 && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1334]              assume msgvalue_MSG == 0;
[L1335]  CALL        call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s316 && value_s316 <= _balances_Token[this][msgsender_MSG]) && value_s316 >= 0) && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s316] >= 0) && _balances_Token[this][to_s316] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][msgsender_MSG] >= 0) && _balances_Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_Token0 := true;
[L2]                 call_transfer_Token0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND FALSE  !(__exception)
[L246]   CALL        call __ret_0_ := transfer~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L684]   CALL        call _transfer~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L781]               __var_2 := null;
[L782]   COND TRUE   !(to_s470 != null)
[L783]               revert := true;
[L684]   RET         call _transfer~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L685]   COND TRUE   revert
[L246]   RET         call __ret_0_ := transfer~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L247]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == true && _totalSupply_Token[this] == old(_totalSupply_Token[this])) && _balances_Token[this] == old(_balances_Token[this])) && _allowed_Token[this] == old(_allowed_Token[this]));
[L2]                 revert := revert_hold;
[L1335]  RET         call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L1383]  RET         call CorralChoice_Token(this);

Loop:
[L1383]        assume true;

[2020-11-24 17:37:11,096 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:37:11,096 INFO  L82        PathProgramCache]: Analyzing trace with hash 1855195134, now seen corresponding path program 1 times
[2020-11-24 17:37:11,097 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:37:11,115 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:37:11,144 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:37:11,144 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:37:11,144 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 17:37:11,145 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:37:11,145 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 17:37:11,146 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 17:37:11,146 INFO  L87              Difference]: Start difference. First operand 183 states and 196 transitions. cyclomatic complexity: 14 Second operand 7 states.
[2020-11-24 17:37:11,161 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:37:11,161 INFO  L93              Difference]: Finished difference Result 198 states and 211 transitions.
[2020-11-24 17:37:11,161 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 17:37:11,162 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 198 states and 211 transitions.
[2020-11-24 17:37:11,163 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:11,165 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 198 states to 182 states and 194 transitions.
[2020-11-24 17:37:11,165 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 182
[2020-11-24 17:37:11,166 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 182
[2020-11-24 17:37:11,166 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 182 states and 194 transitions.
[2020-11-24 17:37:11,166 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:37:11,166 INFO  L728         BuchiCegarLoop]: Abstraction has 182 states and 194 transitions.
[2020-11-24 17:37:11,167 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 182 states and 194 transitions.
[2020-11-24 17:37:11,171 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 182 to 182.
[2020-11-24 17:37:11,171 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 182 states.
[2020-11-24 17:37:11,172 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 182 states to 182 states and 194 transitions.
[2020-11-24 17:37:11,172 INFO  L751         BuchiCegarLoop]: Abstraction has 182 states and 194 transitions.
[2020-11-24 17:37:11,172 INFO  L631         BuchiCegarLoop]: Abstraction has 182 states and 194 transitions.
[2020-11-24 17:37:11,172 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 17:37:11,172 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 182 states and 194 transitions.
[2020-11-24 17:37:11,173 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:11,173 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:37:11,173 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:37:11,174 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:37:11,174 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_Token0 := false;
[L2]                 call_transfer_Token0 := false;
[L2]     CALL        call main();
[L1378]              assume null == 0;
[L1379]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1379]  RET         call this := FreshRefGenerator__success();
[L1380]              assume now >= 0;
[L1381]              assume DType[this] == Token;
[L1382]              assume !revert && gas >= 0;
[L1383]  CALL        call CorralChoice_Token(this);
[L1294]              havoc msgsender_MSG;
[L1295]              havoc msgvalue_MSG;
[L1296]              havoc choice;
[L1297]              havoc to_s316;
[L1298]              havoc value_s316;
[L1299]              havoc __ret_0_transfer;
[L1300]              havoc spender_s335;
[L1301]              havoc value_s335;
[L1302]              havoc __ret_0_approve;
[L1303]              havoc from_s370;
[L1304]              havoc to_s370;
[L1305]              havoc value_s370;
[L1306]              havoc __ret_0_transferFrom;
[L1307]              havoc __ret_0_totalSupply;
[L1308]              havoc owner_s281;
[L1309]              havoc __ret_0_balanceOf;
[L1310]              havoc owner_s297;
[L1311]              havoc spender_s297;
[L1312]              havoc __ret_0_allowance;
[L1313]              havoc __ret_0_name;
[L1314]              havoc __ret_0_symbol;
[L1315]              havoc __ret_0_decimals;
[L1316]              havoc banker_s261;
[L1317]              havoc spender_s397;
[L1318]              havoc addedValue_s397;
[L1319]              havoc __ret_0_increaseAllowance;
[L1320]              havoc spender_s424;
[L1321]              havoc subtractedValue_s424;
[L1322]              havoc __ret_0_decreaseAllowance;
[L1323]              havoc tmpNow;
[L1324]              havoc gas;
[L1325]              assume gas > 4000000 && gas <= 8000000;
[L1326]              tmpNow := now;
[L1327]              havoc now;
[L1328]              assume now > tmpNow;
[L1329]              assume msgsender_MSG != null;
[L1330]  COND TRUE   choice == 6
[L1331]              gas := gas - 21000;
[L1332]  COND TRUE   gas >= 0
[L1333]              assume value_s316 >= 0 && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1334]              assume msgvalue_MSG == 0;
[L1335]  CALL        call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s316 && value_s316 <= _balances_Token[this][msgsender_MSG]) && value_s316 >= 0) && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s316] >= 0) && _balances_Token[this][to_s316] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][msgsender_MSG] >= 0) && _balances_Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_Token0 := true;
[L2]                 call_transfer_Token0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND FALSE  !(__exception)
[L246]   CALL        call __ret_0_ := transfer~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L684]   CALL        call _transfer~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L781]               __var_2 := null;
[L782]   COND FALSE  !(!(to_s470 != null))
[L786]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_Token[this][from_s470], value_s470);
[L603]   COND TRUE   !(b_s82 <= a_s82)
[L604]               revert := true;
[L786]   RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_Token[this][from_s470], value_s470);
[L787]   COND TRUE   revert
[L684]   RET         call _transfer~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L685]   COND TRUE   revert
[L246]   RET         call __ret_0_ := transfer~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L247]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == true && _totalSupply_Token[this] == old(_totalSupply_Token[this])) && _balances_Token[this] == old(_balances_Token[this])) && _allowed_Token[this] == old(_allowed_Token[this]));
[L2]                 revert := revert_hold;
[L1335]  RET         call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L1383]  RET         call CorralChoice_Token(this);

Loop:
[L1383]        assume true;

[2020-11-24 17:37:11,176 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:37:11,176 INFO  L82        PathProgramCache]: Analyzing trace with hash 1591324684, now seen corresponding path program 1 times
[2020-11-24 17:37:11,177 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:37:11,185 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:37:11,199 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:37:11,199 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:37:11,199 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 17:37:11,199 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:37:11,199 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 17:37:11,200 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 17:37:11,200 INFO  L87              Difference]: Start difference. First operand 182 states and 194 transitions. cyclomatic complexity: 13 Second operand 3 states.
[2020-11-24 17:37:11,207 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:37:11,207 INFO  L93              Difference]: Finished difference Result 221 states and 232 transitions.
[2020-11-24 17:37:11,207 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 17:37:11,207 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 221 states and 232 transitions.
[2020-11-24 17:37:11,209 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 17:37:11,210 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 221 states to 203 states and 210 transitions.
[2020-11-24 17:37:11,210 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 203
[2020-11-24 17:37:11,211 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 203
[2020-11-24 17:37:11,211 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 203 states and 210 transitions.
[2020-11-24 17:37:11,211 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:37:11,212 INFO  L728         BuchiCegarLoop]: Abstraction has 203 states and 210 transitions.
[2020-11-24 17:37:11,212 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 203 states and 210 transitions.
[2020-11-24 17:37:11,216 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 203 to 192.
[2020-11-24 17:37:11,216 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 192 states.
[2020-11-24 17:37:11,217 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 192 states to 192 states and 199 transitions.
[2020-11-24 17:37:11,217 INFO  L751         BuchiCegarLoop]: Abstraction has 192 states and 199 transitions.
[2020-11-24 17:37:11,217 INFO  L631         BuchiCegarLoop]: Abstraction has 192 states and 199 transitions.
[2020-11-24 17:37:11,217 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 17:37:11,217 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 192 states and 199 transitions.
[2020-11-24 17:37:11,218 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:11,218 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:37:11,218 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:37:11,219 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:37:11,219 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                success_transfer_Token0 := false;
[L2]                call_transfer_Token0 := false;
[L2]     CALL       call main();
[L1378]             assume null == 0;
[L1379]  CALL       call this := FreshRefGenerator__success();
[L582]              havoc newRef;
[L583]              assume Alloc[newRef] == false;
[L584]              Alloc[newRef] := true;
[L585]              assume newRef != null;
[L1379]  RET        call this := FreshRefGenerator__success();
[L1380]             assume now >= 0;
[L1381]             assume DType[this] == Token;
[L1382]             assume !revert && gas >= 0;
[L1383]  CALL       call CorralChoice_Token(this);
[L1294]             havoc msgsender_MSG;
[L1295]             havoc msgvalue_MSG;
[L1296]             havoc choice;
[L1297]             havoc to_s316;
[L1298]             havoc value_s316;
[L1299]             havoc __ret_0_transfer;
[L1300]             havoc spender_s335;
[L1301]             havoc value_s335;
[L1302]             havoc __ret_0_approve;
[L1303]             havoc from_s370;
[L1304]             havoc to_s370;
[L1305]             havoc value_s370;
[L1306]             havoc __ret_0_transferFrom;
[L1307]             havoc __ret_0_totalSupply;
[L1308]             havoc owner_s281;
[L1309]             havoc __ret_0_balanceOf;
[L1310]             havoc owner_s297;
[L1311]             havoc spender_s297;
[L1312]             havoc __ret_0_allowance;
[L1313]             havoc __ret_0_name;
[L1314]             havoc __ret_0_symbol;
[L1315]             havoc __ret_0_decimals;
[L1316]             havoc banker_s261;
[L1317]             havoc spender_s397;
[L1318]             havoc addedValue_s397;
[L1319]             havoc __ret_0_increaseAllowance;
[L1320]             havoc spender_s424;
[L1321]             havoc subtractedValue_s424;
[L1322]             havoc __ret_0_decreaseAllowance;
[L1323]             havoc tmpNow;
[L1324]             havoc gas;
[L1325]             assume gas > 4000000 && gas <= 8000000;
[L1326]             tmpNow := now;
[L1327]             havoc now;
[L1328]             assume now > tmpNow;
[L1329]             assume msgsender_MSG != null;
[L1330]  COND TRUE  choice == 6
[L1331]             gas := gas - 21000;
[L1332]  COND TRUE  gas >= 0
[L1333]             assume value_s316 >= 0 && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1334]             assume msgvalue_MSG == 0;
[L1335]  CALL       call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L2]                revert_hold := revert;
[L2]                revert := false;
[L2]                assume ((((((msgsender_MSG == to_s316 && value_s316 <= _balances_Token[this][msgsender_MSG]) && value_s316 >= 0) && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s316] >= 0) && _balances_Token[this][to_s316] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][msgsender_MSG] >= 0) && _balances_Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                call_transfer_Token0 := true;
[L2]                call_transfer_Token0 := false;
[L2]                revert := revert_hold;
[L223]              havoc __exception;
[L224]              revert := false;
[L225]   COND TRUE  __exception
[L226]              __tmp__Balance := Balance;
[L227]              __tmp__DType := DType;
[L228]              __tmp__Alloc := Alloc;
[L229]              __tmp__balance_ADDR := balance_ADDR;
[L230]              __tmp__M_Ref_int := M_Ref_int;
[L231]              __tmp__sum__balances0 := sum__balances0;
[L232]              __tmp__alloc__allowed_Token_lvl0 := alloc__allowed_Token_lvl0;
[L233]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L234]              __tmp__sum__allowed1 := sum__allowed1;
[L235]              __tmp__Length := Length;
[L236]              __tmp__now := now;
[L237]              __tmp__name_Token := name_Token;
[L238]              __tmp__symbol_Token := symbol_Token;
[L239]              __tmp__decimals_Token := decimals_Token;
[L240]              __tmp___balances_Token := _balances_Token;
[L241]              __tmp___allowed_Token := _allowed_Token;
[L242]              __tmp___totalSupply_Token := _totalSupply_Token;
[L243]   CALL       call __ret_0_ := transfer~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L674]   CALL       call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L755]              __var_2 := null;
[L756]   COND TRUE  !(to_s470 != null)
[L757]              revert := true;
[L674]   RET        call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L675]   COND TRUE  revert
[L243]   RET        call __ret_0_ := transfer~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L244]              assume revert || gas < 0;
[L1335]  RET        call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L1383]  RET        call CorralChoice_Token(this);

Loop:
[L1383]        assume true;

[2020-11-24 17:37:11,221 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:37:11,222 INFO  L82        PathProgramCache]: Analyzing trace with hash -1507235823, now seen corresponding path program 1 times
[2020-11-24 17:37:11,222 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:37:11,230 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:37:11,251 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:37:11,251 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:37:11,251 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 17:37:11,251 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:37:11,252 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 17:37:11,252 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 17:37:11,252 INFO  L87              Difference]: Start difference. First operand 192 states and 199 transitions. cyclomatic complexity: 8 Second operand 7 states.
[2020-11-24 17:37:11,266 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:37:11,266 INFO  L93              Difference]: Finished difference Result 202 states and 208 transitions.
[2020-11-24 17:37:11,266 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 17:37:11,266 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 202 states and 208 transitions.
[2020-11-24 17:37:11,267 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:11,268 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 202 states to 191 states and 197 transitions.
[2020-11-24 17:37:11,268 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 191
[2020-11-24 17:37:11,269 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 191
[2020-11-24 17:37:11,269 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 191 states and 197 transitions.
[2020-11-24 17:37:11,269 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:37:11,269 INFO  L728         BuchiCegarLoop]: Abstraction has 191 states and 197 transitions.
[2020-11-24 17:37:11,270 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 191 states and 197 transitions.
[2020-11-24 17:37:11,272 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 191 to 191.
[2020-11-24 17:37:11,272 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 191 states.
[2020-11-24 17:37:11,272 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 191 states to 191 states and 197 transitions.
[2020-11-24 17:37:11,273 INFO  L751         BuchiCegarLoop]: Abstraction has 191 states and 197 transitions.
[2020-11-24 17:37:11,273 INFO  L631         BuchiCegarLoop]: Abstraction has 191 states and 197 transitions.
[2020-11-24 17:37:11,273 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 17:37:11,273 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 191 states and 197 transitions.
[2020-11-24 17:37:11,274 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:11,274 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:37:11,274 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:37:11,275 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:37:11,275 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_Token0 := false;
[L2]                 call_transfer_Token0 := false;
[L2]     CALL        call main();
[L1378]              assume null == 0;
[L1379]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1379]  RET         call this := FreshRefGenerator__success();
[L1380]              assume now >= 0;
[L1381]              assume DType[this] == Token;
[L1382]              assume !revert && gas >= 0;
[L1383]  CALL        call CorralChoice_Token(this);
[L1294]              havoc msgsender_MSG;
[L1295]              havoc msgvalue_MSG;
[L1296]              havoc choice;
[L1297]              havoc to_s316;
[L1298]              havoc value_s316;
[L1299]              havoc __ret_0_transfer;
[L1300]              havoc spender_s335;
[L1301]              havoc value_s335;
[L1302]              havoc __ret_0_approve;
[L1303]              havoc from_s370;
[L1304]              havoc to_s370;
[L1305]              havoc value_s370;
[L1306]              havoc __ret_0_transferFrom;
[L1307]              havoc __ret_0_totalSupply;
[L1308]              havoc owner_s281;
[L1309]              havoc __ret_0_balanceOf;
[L1310]              havoc owner_s297;
[L1311]              havoc spender_s297;
[L1312]              havoc __ret_0_allowance;
[L1313]              havoc __ret_0_name;
[L1314]              havoc __ret_0_symbol;
[L1315]              havoc __ret_0_decimals;
[L1316]              havoc banker_s261;
[L1317]              havoc spender_s397;
[L1318]              havoc addedValue_s397;
[L1319]              havoc __ret_0_increaseAllowance;
[L1320]              havoc spender_s424;
[L1321]              havoc subtractedValue_s424;
[L1322]              havoc __ret_0_decreaseAllowance;
[L1323]              havoc tmpNow;
[L1324]              havoc gas;
[L1325]              assume gas > 4000000 && gas <= 8000000;
[L1326]              tmpNow := now;
[L1327]              havoc now;
[L1328]              assume now > tmpNow;
[L1329]              assume msgsender_MSG != null;
[L1330]  COND TRUE   choice == 6
[L1331]              gas := gas - 21000;
[L1332]  COND TRUE   gas >= 0
[L1333]              assume value_s316 >= 0 && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1334]              assume msgvalue_MSG == 0;
[L1335]  CALL        call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s316 && value_s316 <= _balances_Token[this][msgsender_MSG]) && value_s316 >= 0) && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s316] >= 0) && _balances_Token[this][to_s316] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][msgsender_MSG] >= 0) && _balances_Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_Token0 := true;
[L2]                 call_transfer_Token0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND TRUE   __exception
[L226]               __tmp__Balance := Balance;
[L227]               __tmp__DType := DType;
[L228]               __tmp__Alloc := Alloc;
[L229]               __tmp__balance_ADDR := balance_ADDR;
[L230]               __tmp__M_Ref_int := M_Ref_int;
[L231]               __tmp__sum__balances0 := sum__balances0;
[L232]               __tmp__alloc__allowed_Token_lvl0 := alloc__allowed_Token_lvl0;
[L233]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L234]               __tmp__sum__allowed1 := sum__allowed1;
[L235]               __tmp__Length := Length;
[L236]               __tmp__now := now;
[L237]               __tmp__name_Token := name_Token;
[L238]               __tmp__symbol_Token := symbol_Token;
[L239]               __tmp__decimals_Token := decimals_Token;
[L240]               __tmp___balances_Token := _balances_Token;
[L241]               __tmp___allowed_Token := _allowed_Token;
[L242]               __tmp___totalSupply_Token := _totalSupply_Token;
[L243]   CALL        call __ret_0_ := transfer~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L674]   CALL        call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L755]               __var_2 := null;
[L756]   COND FALSE  !(!(to_s470 != null))
[L760]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][from_s470], value_s470);
[L591]   COND TRUE   !(b_s82 <= a_s82)
[L592]               revert := true;
[L760]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][from_s470], value_s470);
[L761]   COND TRUE   revert
[L674]   RET         call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L675]   COND TRUE   revert
[L243]   RET         call __ret_0_ := transfer~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L244]               assume revert || gas < 0;
[L1335]  RET         call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L1383]  RET         call CorralChoice_Token(this);

Loop:
[L1383]        assume true;

[2020-11-24 17:37:11,277 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:37:11,277 INFO  L82        PathProgramCache]: Analyzing trace with hash 860013370, now seen corresponding path program 1 times
[2020-11-24 17:37:11,278 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:37:11,287 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:37:11,330 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:37:11,330 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:37:11,331 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-24 17:37:11,331 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:37:11,331 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-24 17:37:11,331 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-24 17:37:11,331 INFO  L87              Difference]: Start difference. First operand 191 states and 197 transitions. cyclomatic complexity: 7 Second operand 8 states.
[2020-11-24 17:37:11,440 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:37:11,440 INFO  L93              Difference]: Finished difference Result 214 states and 219 transitions.
[2020-11-24 17:37:11,440 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-24 17:37:11,440 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 214 states and 219 transitions.
[2020-11-24 17:37:11,442 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 17:37:11,443 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 214 states to 203 states and 208 transitions.
[2020-11-24 17:37:11,443 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 203
[2020-11-24 17:37:11,443 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 203
[2020-11-24 17:37:11,443 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 203 states and 208 transitions.
[2020-11-24 17:37:11,443 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:37:11,443 INFO  L728         BuchiCegarLoop]: Abstraction has 203 states and 208 transitions.
[2020-11-24 17:37:11,444 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 203 states and 208 transitions.
[2020-11-24 17:37:11,446 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 203 to 186.
[2020-11-24 17:37:11,446 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 186 states.
[2020-11-24 17:37:11,446 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 186 states to 186 states and 191 transitions.
[2020-11-24 17:37:11,446 INFO  L751         BuchiCegarLoop]: Abstraction has 186 states and 191 transitions.
[2020-11-24 17:37:11,446 INFO  L631         BuchiCegarLoop]: Abstraction has 186 states and 191 transitions.
[2020-11-24 17:37:11,447 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 17:37:11,447 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 186 states and 191 transitions.
[2020-11-24 17:37:11,447 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:11,447 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:37:11,448 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:37:11,448 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:37:11,448 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_Token0 := false;
[L2]                 call_transfer_Token0 := false;
[L2]     CALL        call main();
[L1378]              assume null == 0;
[L1379]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1379]  RET         call this := FreshRefGenerator__success();
[L1380]              assume now >= 0;
[L1381]              assume DType[this] == Token;
[L1382]              assume !revert && gas >= 0;
[L1383]  CALL        call CorralChoice_Token(this);
[L1294]              havoc msgsender_MSG;
[L1295]              havoc msgvalue_MSG;
[L1296]              havoc choice;
[L1297]              havoc to_s316;
[L1298]              havoc value_s316;
[L1299]              havoc __ret_0_transfer;
[L1300]              havoc spender_s335;
[L1301]              havoc value_s335;
[L1302]              havoc __ret_0_approve;
[L1303]              havoc from_s370;
[L1304]              havoc to_s370;
[L1305]              havoc value_s370;
[L1306]              havoc __ret_0_transferFrom;
[L1307]              havoc __ret_0_totalSupply;
[L1308]              havoc owner_s281;
[L1309]              havoc __ret_0_balanceOf;
[L1310]              havoc owner_s297;
[L1311]              havoc spender_s297;
[L1312]              havoc __ret_0_allowance;
[L1313]              havoc __ret_0_name;
[L1314]              havoc __ret_0_symbol;
[L1315]              havoc __ret_0_decimals;
[L1316]              havoc banker_s261;
[L1317]              havoc spender_s397;
[L1318]              havoc addedValue_s397;
[L1319]              havoc __ret_0_increaseAllowance;
[L1320]              havoc spender_s424;
[L1321]              havoc subtractedValue_s424;
[L1322]              havoc __ret_0_decreaseAllowance;
[L1323]              havoc tmpNow;
[L1324]              havoc gas;
[L1325]              assume gas > 4000000 && gas <= 8000000;
[L1326]              tmpNow := now;
[L1327]              havoc now;
[L1328]              assume now > tmpNow;
[L1329]              assume msgsender_MSG != null;
[L1330]  COND TRUE   choice == 6
[L1331]              gas := gas - 21000;
[L1332]  COND TRUE   gas >= 0
[L1333]              assume value_s316 >= 0 && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1334]              assume msgvalue_MSG == 0;
[L1335]  CALL        call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s316 && value_s316 <= _balances_Token[this][msgsender_MSG]) && value_s316 >= 0) && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s316] >= 0) && _balances_Token[this][to_s316] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][msgsender_MSG] >= 0) && _balances_Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_Token0 := true;
[L2]                 call_transfer_Token0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND TRUE   __exception
[L226]               __tmp__Balance := Balance;
[L227]               __tmp__DType := DType;
[L228]               __tmp__Alloc := Alloc;
[L229]               __tmp__balance_ADDR := balance_ADDR;
[L230]               __tmp__M_Ref_int := M_Ref_int;
[L231]               __tmp__sum__balances0 := sum__balances0;
[L232]               __tmp__alloc__allowed_Token_lvl0 := alloc__allowed_Token_lvl0;
[L233]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L234]               __tmp__sum__allowed1 := sum__allowed1;
[L235]               __tmp__Length := Length;
[L236]               __tmp__now := now;
[L237]               __tmp__name_Token := name_Token;
[L238]               __tmp__symbol_Token := symbol_Token;
[L239]               __tmp__decimals_Token := decimals_Token;
[L240]               __tmp___balances_Token := _balances_Token;
[L241]               __tmp___allowed_Token := _allowed_Token;
[L242]               __tmp___totalSupply_Token := _totalSupply_Token;
[L243]   CALL        call __ret_0_ := transfer~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L674]   CALL        call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L755]               __var_2 := null;
[L756]   COND FALSE  !(!(to_s470 != null))
[L760]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][from_s470], value_s470);
[L591]   COND FALSE  !(!(b_s82 <= a_s82))
[L595]               c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L596]               __ret_0_ := c_s82;
[L760]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][from_s470], value_s470);
[L761]   COND TRUE   revert
[L674]   RET         call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L675]   COND TRUE   revert
[L243]   RET         call __ret_0_ := transfer~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L244]               assume revert || gas < 0;
[L1335]  RET         call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L1383]  RET         call CorralChoice_Token(this);

Loop:
[L1383]        assume true;

[2020-11-24 17:37:11,450 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:37:11,450 INFO  L82        PathProgramCache]: Analyzing trace with hash 996540514, now seen corresponding path program 1 times
[2020-11-24 17:37:11,451 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:37:11,458 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:37:11,477 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:37:11,477 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:37:11,477 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 17:37:11,477 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:37:11,478 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 17:37:11,478 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 17:37:11,478 INFO  L87              Difference]: Start difference. First operand 186 states and 191 transitions. cyclomatic complexity: 6 Second operand 5 states.
[2020-11-24 17:37:11,491 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:37:11,491 INFO  L93              Difference]: Finished difference Result 197 states and 199 transitions.
[2020-11-24 17:37:11,491 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 17:37:11,491 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 197 states and 199 transitions.
[2020-11-24 17:37:11,492 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 17:37:11,493 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 197 states to 197 states and 199 transitions.
[2020-11-24 17:37:11,493 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 197
[2020-11-24 17:37:11,493 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 197
[2020-11-24 17:37:11,493 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 197 states and 199 transitions.
[2020-11-24 17:37:11,494 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:37:11,494 INFO  L728         BuchiCegarLoop]: Abstraction has 197 states and 199 transitions.
[2020-11-24 17:37:11,494 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 197 states and 199 transitions.
[2020-11-24 17:37:11,496 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 197 to 186.
[2020-11-24 17:37:11,496 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 186 states.
[2020-11-24 17:37:11,497 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 186 states to 186 states and 188 transitions.
[2020-11-24 17:37:11,497 INFO  L751         BuchiCegarLoop]: Abstraction has 186 states and 188 transitions.
[2020-11-24 17:37:11,497 INFO  L631         BuchiCegarLoop]: Abstraction has 186 states and 188 transitions.
[2020-11-24 17:37:11,497 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 17:37:11,497 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 186 states and 188 transitions.
[2020-11-24 17:37:11,498 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:11,498 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:37:11,498 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:37:11,498 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:37:11,499 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_Token0 := false;
[L2]                 call_transfer_Token0 := false;
[L2]     CALL        call main();
[L1378]              assume null == 0;
[L1379]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1379]  RET         call this := FreshRefGenerator__success();
[L1380]              assume now >= 0;
[L1381]              assume DType[this] == Token;
[L1382]              assume !revert && gas >= 0;
[L1383]  CALL        call CorralChoice_Token(this);
[L1294]              havoc msgsender_MSG;
[L1295]              havoc msgvalue_MSG;
[L1296]              havoc choice;
[L1297]              havoc to_s316;
[L1298]              havoc value_s316;
[L1299]              havoc __ret_0_transfer;
[L1300]              havoc spender_s335;
[L1301]              havoc value_s335;
[L1302]              havoc __ret_0_approve;
[L1303]              havoc from_s370;
[L1304]              havoc to_s370;
[L1305]              havoc value_s370;
[L1306]              havoc __ret_0_transferFrom;
[L1307]              havoc __ret_0_totalSupply;
[L1308]              havoc owner_s281;
[L1309]              havoc __ret_0_balanceOf;
[L1310]              havoc owner_s297;
[L1311]              havoc spender_s297;
[L1312]              havoc __ret_0_allowance;
[L1313]              havoc __ret_0_name;
[L1314]              havoc __ret_0_symbol;
[L1315]              havoc __ret_0_decimals;
[L1316]              havoc banker_s261;
[L1317]              havoc spender_s397;
[L1318]              havoc addedValue_s397;
[L1319]              havoc __ret_0_increaseAllowance;
[L1320]              havoc spender_s424;
[L1321]              havoc subtractedValue_s424;
[L1322]              havoc __ret_0_decreaseAllowance;
[L1323]              havoc tmpNow;
[L1324]              havoc gas;
[L1325]              assume gas > 4000000 && gas <= 8000000;
[L1326]              tmpNow := now;
[L1327]              havoc now;
[L1328]              assume now > tmpNow;
[L1329]              assume msgsender_MSG != null;
[L1330]  COND TRUE   choice == 6
[L1331]              gas := gas - 21000;
[L1332]  COND TRUE   gas >= 0
[L1333]              assume value_s316 >= 0 && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1334]              assume msgvalue_MSG == 0;
[L1335]  CALL        call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s316 && value_s316 <= _balances_Token[this][msgsender_MSG]) && value_s316 >= 0) && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s316] >= 0) && _balances_Token[this][to_s316] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][msgsender_MSG] >= 0) && _balances_Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_Token0 := true;
[L2]                 call_transfer_Token0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND FALSE  !(__exception)
[L246]   CALL        call __ret_0_ := transfer~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L684]   CALL        call _transfer~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L781]               __var_2 := null;
[L782]   COND FALSE  !(!(to_s470 != null))
[L786]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_Token[this][from_s470], value_s470);
[L603]   COND FALSE  !(!(b_s82 <= a_s82))
[L607]               c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L608]               __ret_0_ := c_s82;
[L786]   RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_Token[this][from_s470], value_s470);
[L787]   COND FALSE  !(revert)
[L790]               sum__balances0[this] := sum__balances0[this] - _balances_Token[this][from_s470];
[L791]               _balances_Token[this][from_s470] := __var_3;
[L792]               sum__balances0[this] := sum__balances0[this] + _balances_Token[this][from_s470];
[L793]   CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_Token[this][to_s470], value_s470);
[L627]               c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L628]   COND FALSE  !(!(c_s106 >= a_s106))
[L632]               __ret_0_ := c_s106;
[L793]   RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_Token[this][to_s470], value_s470);
[L794]   COND FALSE  !(revert)
[L797]               sum__balances0[this] := sum__balances0[this] - _balances_Token[this][to_s470];
[L798]               _balances_Token[this][to_s470] := __var_4;
[L799]               sum__balances0[this] := sum__balances0[this] + _balances_Token[this][to_s470];
[L800]               assert { :EventEmitted "Transfer_Token" } true;
[L684]   RET         call _transfer~address~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L685]   COND FALSE  !(revert)
[L688]               __ret_0_ := true;
[L246]   RET         call __ret_0_ := transfer~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L247]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((__ret_0_ == true && _totalSupply_Token[this] == old(_totalSupply_Token[this])) && _balances_Token[this] == old(_balances_Token[this])) && _allowed_Token[this] == old(_allowed_Token[this]));
[L2]                 revert := revert_hold;
[L1335]  RET         call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L1383]  RET         call CorralChoice_Token(this);

Loop:
[L1383]        assume true;

[2020-11-24 17:37:11,500 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:37:11,500 INFO  L82        PathProgramCache]: Analyzing trace with hash 1630510043, now seen corresponding path program 1 times
[2020-11-24 17:37:11,501 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:37:11,542 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:37:11,826 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:37:11,826 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:37:11,826 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [18] imperfect sequences [] total 18
[2020-11-24 17:37:11,826 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:37:11,827 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2020-11-24 17:37:11,827 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=41, Invalid=265, Unknown=0, NotChecked=0, Total=306
[2020-11-24 17:37:11,827 INFO  L87              Difference]: Start difference. First operand 186 states and 188 transitions. cyclomatic complexity: 3 Second operand 18 states.
[2020-11-24 17:37:12,249 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:37:12,249 INFO  L93              Difference]: Finished difference Result 191 states and 192 transitions.
[2020-11-24 17:37:12,250 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-24 17:37:12,250 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 191 states and 192 transitions.
[2020-11-24 17:37:12,251 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:12,252 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 191 states to 142 states and 143 transitions.
[2020-11-24 17:37:12,252 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 142
[2020-11-24 17:37:12,253 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 142
[2020-11-24 17:37:12,253 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 142 states and 143 transitions.
[2020-11-24 17:37:12,253 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:37:12,253 INFO  L728         BuchiCegarLoop]: Abstraction has 142 states and 143 transitions.
[2020-11-24 17:37:12,253 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 142 states and 143 transitions.
[2020-11-24 17:37:12,255 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 142 to 142.
[2020-11-24 17:37:12,255 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 142 states.
[2020-11-24 17:37:12,256 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 142 states to 142 states and 143 transitions.
[2020-11-24 17:37:12,256 INFO  L751         BuchiCegarLoop]: Abstraction has 142 states and 143 transitions.
[2020-11-24 17:37:12,256 INFO  L631         BuchiCegarLoop]: Abstraction has 142 states and 143 transitions.
[2020-11-24 17:37:12,256 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 17:37:12,256 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 142 states and 143 transitions.
[2020-11-24 17:37:12,257 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:12,257 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:37:12,257 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:37:12,259 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:37:12,259 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_Token0 := false;
[L2]                 call_transfer_Token0 := false;
[L2]     CALL        call main();
[L1378]              assume null == 0;
[L1379]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1379]  RET         call this := FreshRefGenerator__success();
[L1380]              assume now >= 0;
[L1381]              assume DType[this] == Token;
[L1382]              assume !revert && gas >= 0;
[L1383]  CALL        call CorralChoice_Token(this);
[L1294]              havoc msgsender_MSG;
[L1295]              havoc msgvalue_MSG;
[L1296]              havoc choice;
[L1297]              havoc to_s316;
[L1298]              havoc value_s316;
[L1299]              havoc __ret_0_transfer;
[L1300]              havoc spender_s335;
[L1301]              havoc value_s335;
[L1302]              havoc __ret_0_approve;
[L1303]              havoc from_s370;
[L1304]              havoc to_s370;
[L1305]              havoc value_s370;
[L1306]              havoc __ret_0_transferFrom;
[L1307]              havoc __ret_0_totalSupply;
[L1308]              havoc owner_s281;
[L1309]              havoc __ret_0_balanceOf;
[L1310]              havoc owner_s297;
[L1311]              havoc spender_s297;
[L1312]              havoc __ret_0_allowance;
[L1313]              havoc __ret_0_name;
[L1314]              havoc __ret_0_symbol;
[L1315]              havoc __ret_0_decimals;
[L1316]              havoc banker_s261;
[L1317]              havoc spender_s397;
[L1318]              havoc addedValue_s397;
[L1319]              havoc __ret_0_increaseAllowance;
[L1320]              havoc spender_s424;
[L1321]              havoc subtractedValue_s424;
[L1322]              havoc __ret_0_decreaseAllowance;
[L1323]              havoc tmpNow;
[L1324]              havoc gas;
[L1325]              assume gas > 4000000 && gas <= 8000000;
[L1326]              tmpNow := now;
[L1327]              havoc now;
[L1328]              assume now > tmpNow;
[L1329]              assume msgsender_MSG != null;
[L1330]  COND TRUE   choice == 6
[L1331]              gas := gas - 21000;
[L1332]  COND TRUE   gas >= 0
[L1333]              assume value_s316 >= 0 && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1334]              assume msgvalue_MSG == 0;
[L1335]  CALL        call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s316 && value_s316 <= _balances_Token[this][msgsender_MSG]) && value_s316 >= 0) && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s316] >= 0) && _balances_Token[this][to_s316] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][msgsender_MSG] >= 0) && _balances_Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_Token0 := true;
[L2]                 call_transfer_Token0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND TRUE   __exception
[L226]               __tmp__Balance := Balance;
[L227]               __tmp__DType := DType;
[L228]               __tmp__Alloc := Alloc;
[L229]               __tmp__balance_ADDR := balance_ADDR;
[L230]               __tmp__M_Ref_int := M_Ref_int;
[L231]               __tmp__sum__balances0 := sum__balances0;
[L232]               __tmp__alloc__allowed_Token_lvl0 := alloc__allowed_Token_lvl0;
[L233]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L234]               __tmp__sum__allowed1 := sum__allowed1;
[L235]               __tmp__Length := Length;
[L236]               __tmp__now := now;
[L237]               __tmp__name_Token := name_Token;
[L238]               __tmp__symbol_Token := symbol_Token;
[L239]               __tmp__decimals_Token := decimals_Token;
[L240]               __tmp___balances_Token := _balances_Token;
[L241]               __tmp___allowed_Token := _allowed_Token;
[L242]               __tmp___totalSupply_Token := _totalSupply_Token;
[L243]   CALL        call __ret_0_ := transfer~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L674]   CALL        call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L755]               __var_2 := null;
[L756]   COND FALSE  !(!(to_s470 != null))
[L760]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][from_s470], value_s470);
[L591]   COND FALSE  !(!(b_s82 <= a_s82))
[L595]               c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L596]               __ret_0_ := c_s82;
[L760]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][from_s470], value_s470);
[L761]   COND FALSE  !(revert)
[L764]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_Token[this][from_s470];
[L765]               __tmp___balances_Token[this][from_s470] := __var_3;
[L766]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_Token[this][from_s470];
[L767]   CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][to_s470], value_s470);
[L615]               c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L616]   COND TRUE   !(c_s106 >= a_s106)
[L617]               revert := true;
[L767]   RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][to_s470], value_s470);
[L768]   COND TRUE   revert
[L674]   RET         call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L675]   COND TRUE   revert
[L243]   RET         call __ret_0_ := transfer~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L244]               assume revert || gas < 0;
[L1335]  RET         call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L1383]  RET         call CorralChoice_Token(this);

Loop:
[L1383]        assume true;

[2020-11-24 17:37:12,260 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:37:12,261 INFO  L82        PathProgramCache]: Analyzing trace with hash 1111017842, now seen corresponding path program 1 times
[2020-11-24 17:37:12,261 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:37:12,271 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:37:12,382 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:37:12,382 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:37:12,383 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-24 17:37:12,383 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:37:12,383 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-24 17:37:12,383 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=32, Invalid=208, Unknown=0, NotChecked=0, Total=240
[2020-11-24 17:37:12,383 INFO  L87              Difference]: Start difference. First operand 142 states and 143 transitions. cyclomatic complexity: 2 Second operand 16 states.
[2020-11-24 17:37:12,481 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:37:12,481 INFO  L93              Difference]: Finished difference Result 148 states and 148 transitions.
[2020-11-24 17:37:12,481 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-24 17:37:12,482 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 148 states and 148 transitions.
[2020-11-24 17:37:12,483 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:12,484 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 148 states to 133 states and 133 transitions.
[2020-11-24 17:37:12,484 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 133
[2020-11-24 17:37:12,484 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 133
[2020-11-24 17:37:12,484 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 133 states and 133 transitions.
[2020-11-24 17:37:12,484 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:37:12,484 INFO  L728         BuchiCegarLoop]: Abstraction has 133 states and 133 transitions.
[2020-11-24 17:37:12,485 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 133 states and 133 transitions.
[2020-11-24 17:37:12,486 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 133 to 133.
[2020-11-24 17:37:12,486 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 133 states.
[2020-11-24 17:37:12,486 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 133 states to 133 states and 133 transitions.
[2020-11-24 17:37:12,486 INFO  L751         BuchiCegarLoop]: Abstraction has 133 states and 133 transitions.
[2020-11-24 17:37:12,486 INFO  L631         BuchiCegarLoop]: Abstraction has 133 states and 133 transitions.
[2020-11-24 17:37:12,486 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 17:37:12,487 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 133 states and 133 transitions.
[2020-11-24 17:37:12,487 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:37:12,487 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:37:12,487 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:37:12,488 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:37:12,488 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_Token0 := false;
[L2]                 call_transfer_Token0 := false;
[L2]     CALL        call main();
[L1378]              assume null == 0;
[L1379]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1379]  RET         call this := FreshRefGenerator__success();
[L1380]              assume now >= 0;
[L1381]              assume DType[this] == Token;
[L1382]              assume !revert && gas >= 0;
[L1383]  CALL        call CorralChoice_Token(this);
[L1294]              havoc msgsender_MSG;
[L1295]              havoc msgvalue_MSG;
[L1296]              havoc choice;
[L1297]              havoc to_s316;
[L1298]              havoc value_s316;
[L1299]              havoc __ret_0_transfer;
[L1300]              havoc spender_s335;
[L1301]              havoc value_s335;
[L1302]              havoc __ret_0_approve;
[L1303]              havoc from_s370;
[L1304]              havoc to_s370;
[L1305]              havoc value_s370;
[L1306]              havoc __ret_0_transferFrom;
[L1307]              havoc __ret_0_totalSupply;
[L1308]              havoc owner_s281;
[L1309]              havoc __ret_0_balanceOf;
[L1310]              havoc owner_s297;
[L1311]              havoc spender_s297;
[L1312]              havoc __ret_0_allowance;
[L1313]              havoc __ret_0_name;
[L1314]              havoc __ret_0_symbol;
[L1315]              havoc __ret_0_decimals;
[L1316]              havoc banker_s261;
[L1317]              havoc spender_s397;
[L1318]              havoc addedValue_s397;
[L1319]              havoc __ret_0_increaseAllowance;
[L1320]              havoc spender_s424;
[L1321]              havoc subtractedValue_s424;
[L1322]              havoc __ret_0_decreaseAllowance;
[L1323]              havoc tmpNow;
[L1324]              havoc gas;
[L1325]              assume gas > 4000000 && gas <= 8000000;
[L1326]              tmpNow := now;
[L1327]              havoc now;
[L1328]              assume now > tmpNow;
[L1329]              assume msgsender_MSG != null;
[L1330]  COND TRUE   choice == 6
[L1331]              gas := gas - 21000;
[L1332]  COND TRUE   gas >= 0
[L1333]              assume value_s316 >= 0 && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1334]              assume msgvalue_MSG == 0;
[L1335]  CALL        call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s316 && value_s316 <= _balances_Token[this][msgsender_MSG]) && value_s316 >= 0) && value_s316 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][to_s316] >= 0) && _balances_Token[this][to_s316] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_Token[this][msgsender_MSG] >= 0) && _balances_Token[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_Token0 := true;
[L2]                 call_transfer_Token0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND TRUE   __exception
[L226]               __tmp__Balance := Balance;
[L227]               __tmp__DType := DType;
[L228]               __tmp__Alloc := Alloc;
[L229]               __tmp__balance_ADDR := balance_ADDR;
[L230]               __tmp__M_Ref_int := M_Ref_int;
[L231]               __tmp__sum__balances0 := sum__balances0;
[L232]               __tmp__alloc__allowed_Token_lvl0 := alloc__allowed_Token_lvl0;
[L233]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L234]               __tmp__sum__allowed1 := sum__allowed1;
[L235]               __tmp__Length := Length;
[L236]               __tmp__now := now;
[L237]               __tmp__name_Token := name_Token;
[L238]               __tmp__symbol_Token := symbol_Token;
[L239]               __tmp__decimals_Token := decimals_Token;
[L240]               __tmp___balances_Token := _balances_Token;
[L241]               __tmp___allowed_Token := _allowed_Token;
[L242]               __tmp___totalSupply_Token := _totalSupply_Token;
[L243]   CALL        call __ret_0_ := transfer~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L674]   CALL        call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L755]               __var_2 := null;
[L756]   COND FALSE  !(!(to_s470 != null))
[L760]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][from_s470], value_s470);
[L591]   COND FALSE  !(!(b_s82 <= a_s82))
[L595]               c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L596]               __ret_0_ := c_s82;
[L760]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][from_s470], value_s470);
[L761]   COND FALSE  !(revert)
[L764]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_Token[this][from_s470];
[L765]               __tmp___balances_Token[this][from_s470] := __var_3;
[L766]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_Token[this][from_s470];
[L767]   CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][to_s470], value_s470);
[L615]               c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L616]   COND FALSE  !(!(c_s106 >= a_s106))
[L620]               __ret_0_ := c_s106;
[L767]   RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_Token[this][to_s470], value_s470);
[L768]   COND FALSE  !(revert)
[L771]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_Token[this][to_s470];
[L772]               __tmp___balances_Token[this][to_s470] := __var_4;
[L773]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_Token[this][to_s470];
[L674]   RET         call _transfer~address~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s316, value_s316);
[L675]   COND FALSE  !(revert)
[L678]               __ret_0_ := true;
[L243]   RET         call __ret_0_ := transfer~address~uint256_Token__fail(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L244]               assume revert || gas < 0;
[L1335]  RET         call __ret_0_transfer := transfer~address~uint256_Token(this, msgsender_MSG, msgvalue_MSG, to_s316, value_s316);
[L1383]  RET         call CorralChoice_Token(this);

Loop:
[L1383]        assume true;

[2020-11-24 17:37:12,490 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:37:12,490 INFO  L82        PathProgramCache]: Analyzing trace with hash 692560149, now seen corresponding path program 1 times
[2020-11-24 17:37:12,491 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:37:12,497 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:37:12,515 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:37:12,515 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:37:12,515 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 17:37:12,516 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:37:12,516 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 17:37:12,516 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-24 17:37:12,516 INFO  L87              Difference]: Start difference. First operand 133 states and 133 transitions. cyclomatic complexity: 1 Second operand 6 states.
[2020-11-24 17:37:12,527 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:37:12,527 INFO  L93              Difference]: Finished difference Result 126 states and 125 transitions.
[2020-11-24 17:37:12,527 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 17:37:12,527 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 126 states and 125 transitions.
[2020-11-24 17:37:12,528 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 17:37:12,528 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 126 states to 0 states and 0 transitions.
[2020-11-24 17:37:12,528 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 17:37:12,528 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 17:37:12,528 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 17:37:12,528 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:37:12,528 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 17:37:12,528 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 17:37:12,528 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 17:37:12,528 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 17:37:12,528 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 17:37:12,529 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 17:37:12,529 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 17:37:12,533 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:37:12 BasicIcfg
[2020-11-24 17:37:12,533 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 17:37:12,533 INFO  L168              Benchmark]: Toolchain (without parser) took 3403.01 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 243.8 MB). Free memory was 945.9 MB in the beginning and 1.1 GB in the end (delta: -173.9 MB). Peak memory consumption was 69.9 MB. Max. memory is 15.3 GB.
[2020-11-24 17:37:12,534 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 17:37:12,535 INFO  L168              Benchmark]: Boogie Preprocessor took 52.67 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:37:12,535 INFO  L168              Benchmark]: UtopiaSpecLang took 45.45 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:37:12,535 INFO  L168              Benchmark]: Boogie Printer took 8.20 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 17:37:12,536 INFO  L168              Benchmark]: RCFGBuilder took 440.30 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 897.6 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
[2020-11-24 17:37:12,536 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.74 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 888.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 17:37:12,536 INFO  L168              Benchmark]: BÃ¼chi Program Product took 793.02 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.9 MB). Free memory was 888.7 MB in the beginning and 1.0 GB in the end (delta: -150.9 MB). Peak memory consumption was 169.6 MB. Max. memory is 15.3 GB.
[2020-11-24 17:37:12,537 INFO  L168              Benchmark]: BlockEncodingV2 took 72.86 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 23.2 MB). Peak memory consumption was 23.2 MB. Max. memory is 15.3 GB.
[2020-11-24 17:37:12,537 INFO  L168              Benchmark]: BuchiAutomizer took 1950.24 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 181.9 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -103.4 MB). Peak memory consumption was 78.6 MB. Max. memory is 15.3 GB.
[2020-11-24 17:37:12,541 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1150 locations, 1941 edges
  - StatisticsResult: Encoded RCFG
    1130 locations, 1895 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 52.67 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 45.45 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 8.20 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 440.30 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 897.6 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.74 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 888.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 793.02 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.9 MB). Free memory was 888.7 MB in the beginning and 1.0 GB in the end (delta: -150.9 MB). Peak memory consumption was 169.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 72.86 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 23.2 MB). Peak memory consumption was 23.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1950.24 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 181.9 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -103.4 MB). Peak memory consumption was 78.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    486 locations, 601 edges
  - StatisticsResult: BuchiProgram size
    1150 locations, 1941 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 9 terminating modules (9 trivial, 0 deterministic, 0 nondeterministic). 9 modules have a trivial ranking function, the largest among these consists of 18 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.9s and 10 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.7s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 9. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 8 MinimizatonAttempts, 39 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 192 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1969 SDtfs, 1543 SDslu, 5627 SDs, 0 SdLazy, 1905 SolverSat, 508 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU9 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_Token0) ==> ( <>(success_transfer_Token0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
