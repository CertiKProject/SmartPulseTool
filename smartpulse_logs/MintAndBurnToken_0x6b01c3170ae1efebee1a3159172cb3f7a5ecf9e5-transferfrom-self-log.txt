This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:17:03,958 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:17:03,959 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:17:03,967 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:17:03,968 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:17:03,969 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:17:03,972 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:17:03,975 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:17:03,979 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:17:03,979 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:17:03,980 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:17:03,980 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:17:03,981 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:17:03,982 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:17:03,983 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:17:03,983 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:17:03,984 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:17:03,985 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:17:03,987 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:17:03,988 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:17:03,989 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:17:03,989 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:17:03,991 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:17:03,991 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:17:03,991 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:17:03,993 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:17:03,993 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:17:03,995 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:17:03,995 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:17:03,996 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:17:03,997 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:17:03,998 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:17:04,000 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:17:04,001 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:17:04,003 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:17:04,003 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:17:04,004 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:17:04,004 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:17:04,004 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:17:04,005 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:17:04,005 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:17:04,005 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:17:04,011 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:17:04,012 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:17:04,014 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:17:04,014 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:17:04,014 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:17:04,014 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:17:04,015 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:17:04,015 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:17:04,015 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:17:04,016 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:17:04,016 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:17:04,016 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:17:04,016 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:17:04,016 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:17:04,017 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:17:04,017 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:17:04,017 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:17:04,017 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:17:04,017 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:17:04,017 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:17:04,018 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:17:04,018 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:17:04,018 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:17:04,018 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:17:04,018 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:17:04,018 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:17:04,048 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:17:04,061 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:17:04,063 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:17:04,066 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:17:04,067 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:17:04,068 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl
[2020-11-24 15:17:04,068 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl'
[2020-11-24 15:17:04,121 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:17:04,122 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:17:04,122 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:17:04,122 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:17:04,122 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:17:04,133 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/1) ...
[2020-11-24 15:17:04,134 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/1) ...
[2020-11-24 15:17:04,158 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/1) ...
[2020-11-24 15:17:04,159 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/1) ...
[2020-11-24 15:17:04,173 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/1) ...
[2020-11-24 15:17:04,180 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/1) ...
[2020-11-24 15:17:04,184 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/1) ...
[2020-11-24 15:17:04,191 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:17:04,191 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:17:04,191 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:17:04,193 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:17:04,197 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/1) ...
[2020-11-24 15:17:04,210 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_StandardToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][to] >= 0 && balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][from] >= 0 &&  balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_Token[this] == old(totalSupply_Token[this]) && balances_StandardToken[this] == old(balances_StandardToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && mintingFinished_MintAndBurnToken[this] == old(mintingFinished_MintAndBurnToken[this]) && name_MintAndBurnToken[this] == old(name_MintAndBurnToken[this]) && decimals_MintAndBurnToken[this] == old(decimals_MintAndBurnToken[this]) && symbol_MintAndBurnToken[this] == old(symbol_MintAndBurnToken[this]) && version_MintAndBurnToken[this] == old(version_MintAndBurnToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 15:17:04,215 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_StandardToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][to] >= 0 && balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][from] >= 0 &&  balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_Token[this] == old(totalSupply_Token[this]) && balances_StandardToken[this] == old(balances_StandardToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && mintingFinished_MintAndBurnToken[this] == old(mintingFinished_MintAndBurnToken[this]) && name_MintAndBurnToken[this] == old(name_MintAndBurnToken[this]) && decimals_MintAndBurnToken[this] == old(decimals_MintAndBurnToken[this]) && symbol_MintAndBurnToken[this] == old(symbol_MintAndBurnToken[this]) && version_MintAndBurnToken[this] == old(version_MintAndBurnToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 15:17:04,223 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_StandardToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][to] >= 0 && balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][from] >= 0 &&  balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_Token[this] == old(totalSupply_Token[this]) && balances_StandardToken[this] == old(balances_StandardToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && mintingFinished_MintAndBurnToken[this] == old(mintingFinished_MintAndBurnToken[this]) && name_MintAndBurnToken[this] == old(name_MintAndBurnToken[this]) && decimals_MintAndBurnToken[this] == old(decimals_MintAndBurnToken[this]) && symbol_MintAndBurnToken[this] == old(symbol_MintAndBurnToken[this]) && version_MintAndBurnToken[this] == old(version_MintAndBurnToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 15:17:04,229 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s306 || p2!=msg.sender ) && _from_s306==_to_s306 ) && _value_s306<=balances_StandardToken[this][_from_s306] ) && _value_s306<=allowed_StandardToken[this][_from_s306][msg.sender] ) && _value_s306>=0 ) && _value_s306<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_StandardToken[this][_to_s306]>=0 ) && balances_StandardToken[this][_to_s306]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_StandardToken[this][_from_s306]>=0 ) && balances_StandardToken[this][_from_s306]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_StandardToken[this][_from_s306][msg.sender]>=0 ) && allowed_StandardToken[this][_from_s306][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IdentifierExpression[_to_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:17:04,232 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s306==true && allowed_StandardToken[this][_from_s306][msg.sender]==( ( old(allowed_StandardToken[this][_from_s306][msg.sender]) ) - _value_s306 ) ) && totalSupply_Token[this]==( old(totalSupply_Token[this]) ) ) && balances_StandardToken[this]==( old(balances_StandardToken[this]) ) ) && allowed_StandardToken[this][p1][p2]==( old(allowed_StandardToken[this][p1][p2]) ) ) && mintingFinished_MintAndBurnToken[this]==( old(mintingFinished_MintAndBurnToken[this]) ) ) && name_MintAndBurnToken[this]==( old(name_MintAndBurnToken[this]) ) ) && decimals_MintAndBurnToken[this]==( old(decimals_MintAndBurnToken[this]) ) ) && symbol_MintAndBurnToken[this]==( old(symbol_MintAndBurnToken[this]) ) ) && version_MintAndBurnToken[this]==( old(version_MintAndBurnToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s306,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_StandardToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],IdentifierExpression[_value_s306,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[mintingFinished_MintAndBurnToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[mintingFinished_MintAndBurnToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_MintAndBurnToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_MintAndBurnToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_MintAndBurnToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_MintAndBurnToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_MintAndBurnToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_MintAndBurnToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[version_MintAndBurnToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[version_MintAndBurnToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]]
[2020-11-24 15:17:04,236 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_StandardToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][to] >= 0 && balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][from] >= 0 &&  balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_Token[this] == old(totalSupply_Token[this]) && balances_StandardToken[this] == old(balances_StandardToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && mintingFinished_MintAndBurnToken[this] == old(mintingFinished_MintAndBurnToken[this]) && name_MintAndBurnToken[this] == old(name_MintAndBurnToken[this]) && decimals_MintAndBurnToken[this] == old(decimals_MintAndBurnToken[this]) && symbol_MintAndBurnToken[this] == old(symbol_MintAndBurnToken[this]) && version_MintAndBurnToken[this] == old(version_MintAndBurnToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 15:17:04,236 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_StandardToken0) ==> ( <>AP(success_transferFrom_StandardToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:17:04,241 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:17:04 PropertyContainer
[2020-11-24 15:17:04,241 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:17:04,241 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:17:04,241 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:17:04,242 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:17:04,243 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/2) ...
[2020-11-24 15:17:04,243 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:17:04,243 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:17:04,252 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:17:04" (2/2) ...
[2020-11-24 15:17:04,253 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:17:04,253 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:17:04,253 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:17:04,253 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:17:04,254 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/2) ...
[2020-11-24 15:17:04,308 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:17:04,308 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token
[2020-11-24 15:17:04,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token
[2020-11-24 15:17:04,308 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken
[2020-11-24 15:17:04,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken
[2020-11-24 15:17:04,308 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 15:17:04,308 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 15:17:04,308 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken
[2020-11-24 15:17:04,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken
[2020-11-24 15:17:04,309 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 15:17:04,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 15:17:04,309 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 15:17:04,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 15:17:04,309 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:17:04,309 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:17:04,309 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:17:04,309 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:17:04,309 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__success
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BytesLib
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BytesLib
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Token
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Token
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_HumanStandardToken
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_HumanStandardToken
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 15:17:04,310 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MintAndBurnToken
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token__success
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token__fail
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken__success
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken__fail
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken__success
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken__fail
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 15:17:04,311 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 15:17:04,312 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 15:17:04,312 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 15:17:04,312 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:17:04,312 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:17:04,312 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:17:04,312 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:17:04,312 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__fail
[2020-11-24 15:17:04,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:17:04,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:17:04,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token__fail
[2020-11-24 15:17:04,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token__success
[2020-11-24 15:17:04,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken__fail
[2020-11-24 15:17:04,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken__success
[2020-11-24 15:17:04,312 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken__fail
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken__success
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:17:04,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__fail
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__success
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BytesLib
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BytesLib
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Token
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Token
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_HumanStandardToken
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_HumanStandardToken
[2020-11-24 15:17:04,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 15:17:04,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 15:17:04,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 15:17:04,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 15:17:04,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MintAndBurnToken
[2020-11-24 15:17:04,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:17:04,315 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:17:04,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:17:04,577 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:17:04,670 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:17:04,671 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:17:04,671 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:17:04,802 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:17:04,802 INFO  L286             CfgBuilder]: Removed 7 assue(true) statements.
[2020-11-24 15:17:04,804 INFO  L202        PluginConnector]: Adding new model MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:17:04 BoogieIcfgContainer
[2020-11-24 15:17:04,804 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:17:04" (2/2) ...
[2020-11-24 15:17:04,804 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:17:04,804 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@398a558b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:17:04, skipping insertion in model container
[2020-11-24 15:17:04,804 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:17:04,805 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:17:04,805 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:17:04,806 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:17:04,806 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/3) ...
[2020-11-24 15:17:04,807 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@6c67fff0 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:17:04, skipping insertion in model container
[2020-11-24 15:17:04,807 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:17:04" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:17:04,839 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:17:04 NWAContainer
[2020-11-24 15:17:04,839 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:17:04,840 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:17:04,840 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:17:04,840 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:17:04,841 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:17:04" (3/4) ...
[2020-11-24 15:17:04,842 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7133720b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:17:04, skipping insertion in model container
[2020-11-24 15:17:04,842 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:17:04" (4/4) ...
[2020-11-24 15:17:04,845 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:17:04,847 INFO  L110   BuchiProductObserver]: Initial RCFG 727 locations, 914 edges
[2020-11-24 15:17:04,847 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:17:04,856 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:17:05,688 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:17:05,690 INFO  L110   BuchiProductObserver]: BuchiProgram size 1704 locations, 2991 edges
[2020-11-24 15:17:05,690 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:17:05 BoogieIcfgContainer
[2020-11-24 15:17:05,690 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:17:05,691 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:17:05,691 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:17:05,692 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:17:05,693 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:17:05" (1/1) ...
[2020-11-24 15:17:05,740 INFO  L313           BlockEncoder]: Initial Icfg 1704 locations, 2991 edges
[2020-11-24 15:17:05,740 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:17:05,741 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:17:05,741 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:17:05,741 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:17:05,748 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 17 locations because of local infeasibility
[2020-11-24 15:17:05,751 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 15:17:05,756 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:17:05,757 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:17:05,758 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:17:05,759 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:17:05,761 INFO  L313           BlockEncoder]: Encoded RCFG 1666 locations, 2903 edges
[2020-11-24 15:17:05,761 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:17:05 BasicIcfg
[2020-11-24 15:17:05,761 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:17:05,761 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:17:05,762 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:17:05,764 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:17:05,764 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:17:05,764 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:17:04" (1/6) ...
[2020-11-24 15:17:05,766 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25a1ade8 and model type MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:17:05, skipping insertion in model container
[2020-11-24 15:17:05,766 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:17:05,766 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:17:04" (2/6) ...
[2020-11-24 15:17:05,766 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25a1ade8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:17:05, skipping insertion in model container
[2020-11-24 15:17:05,766 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:17:05,766 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:17:04" (3/6) ...
[2020-11-24 15:17:05,767 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25a1ade8 and model type MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:17:05, skipping insertion in model container
[2020-11-24 15:17:05,767 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:17:05,767 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:17:04" (4/6) ...
[2020-11-24 15:17:05,767 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25a1ade8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:17:05, skipping insertion in model container
[2020-11-24 15:17:05,767 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:17:05,767 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:17:05" (5/6) ...
[2020-11-24 15:17:05,767 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25a1ade8 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:17:05, skipping insertion in model container
[2020-11-24 15:17:05,767 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:17:05,767 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:17:05" (6/6) ...
[2020-11-24 15:17:05,769 INFO  L404   chiAutomizerObserver]: Analyzing ICFG MintAndBurnToken_0x6b01c3170ae1efebee1a3159172cb3f7a5ecf9e5_transferfrom-self.bpl_BEv2
[2020-11-24 15:17:05,802 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:17:05,803 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:17:05,803 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:17:05,803 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:17:05,803 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:17:05,803 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:17:05,803 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:17:05,803 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:17:05,803 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:17:05,818 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1666 states.
[2020-11-24 15:17:05,849 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:17:05,849 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:17:05,849 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:17:05,858 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:17:05,858 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:17:05,858 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:17:05,858 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1666 states.
[2020-11-24 15:17:05,864 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:17:05,864 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:17:05,864 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:17:05,866 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:17:05,866 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2287]              assume null == 0;
[L2288]  CALL        call this := FreshRefGenerator__success();
[L885]               havoc newRef;
[L886]               assume Alloc[newRef] == false;
[L887]               Alloc[newRef] := true;
[L888]               assume newRef != null;
[L2288]  RET         call this := FreshRefGenerator__success();
[L2289]              assume now >= 0;
[L2290]              assume DType[this] == MintAndBurnToken;
[L2291]              assume !revert && gas >= 0;
[L2292]  CALL        call CorralChoice_MintAndBurnToken(this);
[L2196]              havoc msgsender_MSG;
[L2197]              havoc msgvalue_MSG;
[L2198]              havoc choice;
[L2199]              havoc __ret_0_totalSupply;
[L2200]              havoc _owner_s318;
[L2201]              havoc balance_s318;
[L2202]              havoc _to_s248;
[L2203]              havoc _value_s248;
[L2204]              havoc success_s248;
[L2205]              havoc _from_s306;
[L2206]              havoc _to_s306;
[L2207]              havoc _value_s306;
[L2208]              havoc success_s306;
[L2209]              havoc _spender_s346;
[L2210]              havoc _value_s346;
[L2211]              havoc success_s346;
[L2212]              havoc _owner_s362;
[L2213]              havoc _spender_s362;
[L2214]              havoc remaining_s362;
[L2215]              havoc __ret_0_name;
[L2216]              havoc __ret_0_decimals;
[L2217]              havoc __ret_0_symbol;
[L2218]              havoc __ret_0_version;
[L2219]              havoc __ret_0_owner;
[L2220]              havoc newOwner_s528;
[L2221]              havoc __ret_0_mintingFinished;
[L2222]              havoc _tokenName_s677;
[L2223]              havoc _decimalUnits_s677;
[L2224]              havoc _tokenSymbol_s677;
[L2225]              havoc _to_s726;
[L2226]              havoc _amount_s726;
[L2227]              havoc __ret_0_mint;
[L2228]              havoc __ret_0_finishMinting;
[L2229]              havoc _value_s765;
[L2230]              havoc tmpNow;
[L2231]              havoc gas;
[L2232]              assume gas > 4000000 && gas <= 8000000;
[L2233]              tmpNow := now;
[L2234]              havoc now;
[L2235]              assume now > tmpNow;
[L2236]              assume msgsender_MSG != null;
[L2237]  COND TRUE   choice == 6
[L2238]              gas := gas - 21000;
[L2239]  COND FALSE  !(gas >= 0)
[L2292]  RET         call CorralChoice_MintAndBurnToken(this);

Loop:
[L2292]        assume true;

[2020-11-24 15:17:05,878 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:17:05,878 INFO  L82        PathProgramCache]: Analyzing trace with hash 34913550, now seen corresponding path program 1 times
[2020-11-24 15:17:05,882 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:17:05,902 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:17:05,947 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:17:05,949 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:17:05,949 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:17:05,953 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:17:06,064 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:17:06,065 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:17:06,069 INFO  L87              Difference]: Start difference. First operand 1666 states. Second operand 3 states.
[2020-11-24 15:17:06,152 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:17:06,153 INFO  L93              Difference]: Finished difference Result 504 states and 532 transitions.
[2020-11-24 15:17:06,153 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:17:06,154 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 504 states and 532 transitions.
[2020-11-24 15:17:06,157 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:17:06,160 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 504 states to 152 states and 155 transitions.
[2020-11-24 15:17:06,161 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:17:06,161 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 152
[2020-11-24 15:17:06,162 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 152 states and 155 transitions.
[2020-11-24 15:17:06,162 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:17:06,162 INFO  L728         BuchiCegarLoop]: Abstraction has 152 states and 155 transitions.
[2020-11-24 15:17:06,174 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 152 states and 155 transitions.
[2020-11-24 15:17:06,182 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 152 to 152.
[2020-11-24 15:17:06,183 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 152 states.
[2020-11-24 15:17:06,183 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 152 states to 152 states and 155 transitions.
[2020-11-24 15:17:06,184 INFO  L751         BuchiCegarLoop]: Abstraction has 152 states and 155 transitions.
[2020-11-24 15:17:06,184 INFO  L631         BuchiCegarLoop]: Abstraction has 152 states and 155 transitions.
[2020-11-24 15:17:06,185 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:17:06,185 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 152 states and 155 transitions.
[2020-11-24 15:17:06,186 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:17:06,186 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:17:06,186 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:17:06,187 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:17:06,187 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2287]              assume null == 0;
[L2288]  CALL        call this := FreshRefGenerator__success();
[L885]               havoc newRef;
[L886]               assume Alloc[newRef] == false;
[L887]               Alloc[newRef] := true;
[L888]               assume newRef != null;
[L2288]  RET         call this := FreshRefGenerator__success();
[L2289]              assume now >= 0;
[L2290]              assume DType[this] == MintAndBurnToken;
[L2291]              assume !revert && gas >= 0;
[L2292]  CALL        call CorralChoice_MintAndBurnToken(this);
[L2196]              havoc msgsender_MSG;
[L2197]              havoc msgvalue_MSG;
[L2198]              havoc choice;
[L2199]              havoc __ret_0_totalSupply;
[L2200]              havoc _owner_s318;
[L2201]              havoc balance_s318;
[L2202]              havoc _to_s248;
[L2203]              havoc _value_s248;
[L2204]              havoc success_s248;
[L2205]              havoc _from_s306;
[L2206]              havoc _to_s306;
[L2207]              havoc _value_s306;
[L2208]              havoc success_s306;
[L2209]              havoc _spender_s346;
[L2210]              havoc _value_s346;
[L2211]              havoc success_s346;
[L2212]              havoc _owner_s362;
[L2213]              havoc _spender_s362;
[L2214]              havoc remaining_s362;
[L2215]              havoc __ret_0_name;
[L2216]              havoc __ret_0_decimals;
[L2217]              havoc __ret_0_symbol;
[L2218]              havoc __ret_0_version;
[L2219]              havoc __ret_0_owner;
[L2220]              havoc newOwner_s528;
[L2221]              havoc __ret_0_mintingFinished;
[L2222]              havoc _tokenName_s677;
[L2223]              havoc _decimalUnits_s677;
[L2224]              havoc _tokenSymbol_s677;
[L2225]              havoc _to_s726;
[L2226]              havoc _amount_s726;
[L2227]              havoc __ret_0_mint;
[L2228]              havoc __ret_0_finishMinting;
[L2229]              havoc _value_s765;
[L2230]              havoc tmpNow;
[L2231]              havoc gas;
[L2232]              assume gas > 4000000 && gas <= 8000000;
[L2233]              tmpNow := now;
[L2234]              havoc now;
[L2235]              assume now > tmpNow;
[L2236]              assume msgsender_MSG != null;
[L2237]  COND FALSE  !(choice == 6)
[L2243]  COND FALSE  !(choice == 5)
[L2249]  COND FALSE  !(choice == 4)
[L2256]  COND TRUE   choice == 3
[L2257]              gas := gas - 21000;
[L2258]  COND TRUE   gas >= 0
[L2259]              assume _value_s306 >= 0 && _value_s306 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2260]              assume msgvalue_MSG == 0;
[L2261]  CALL        call success_s306 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s306 || p2 != msgsender_MSG) && _from_s306 == _to_s306) && _value_s306 <= balances_StandardToken[this][_from_s306]) && _value_s306 <= allowed_StandardToken[this][_from_s306][msgsender_MSG]) && _value_s306 >= 0) && _value_s306 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_to_s306] >= 0) && balances_StandardToken[this][_to_s306] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_from_s306] >= 0) && balances_StandardToken[this][_from_s306] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s306][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s306][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L208]               havoc __exception;
[L209]               revert := false;
[L210]   COND FALSE  !(__exception)
[L238]   CALL        call success_s306 := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L957]   COND TRUE   !(balances_StandardToken[this][_from_s306] >= _value_s306 && allowed_StandardToken[this][_from_s306][msgsender_MSG] >= _value_s306)
[L958]               revert := true;
[L238]   RET         call success_s306 := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L239]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s306 == true && allowed_StandardToken[this][_from_s306][msgsender_MSG] == old(allowed_StandardToken[this][_from_s306][msgsender_MSG]) - _value_s306) && totalSupply_Token[this] == old(totalSupply_Token[this])) && balances_StandardToken[this] == old(balances_StandardToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && mintingFinished_MintAndBurnToken[this] == old(mintingFinished_MintAndBurnToken[this])) && name_MintAndBurnToken[this] == old(name_MintAndBurnToken[this])) && decimals_MintAndBurnToken[this] == old(decimals_MintAndBurnToken[this])) && symbol_MintAndBurnToken[this] == old(symbol_MintAndBurnToken[this])) && version_MintAndBurnToken[this] == old(version_MintAndBurnToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L2261]  RET         call success_s306 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L2292]  RET         call CorralChoice_MintAndBurnToken(this);

Loop:
[L2292]        assume true;

[2020-11-24 15:17:06,190 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:17:06,190 INFO  L82        PathProgramCache]: Analyzing trace with hash -2017104365, now seen corresponding path program 1 times
[2020-11-24 15:17:06,192 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:17:06,201 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:17:06,214 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:17:06,214 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:17:06,214 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:17:06,215 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:17:06,215 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:17:06,215 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:17:06,215 INFO  L87              Difference]: Start difference. First operand 152 states and 155 transitions. cyclomatic complexity: 4 Second operand 3 states.
[2020-11-24 15:17:06,219 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:17:06,219 INFO  L93              Difference]: Finished difference Result 167 states and 169 transitions.
[2020-11-24 15:17:06,219 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:17:06,219 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 167 states and 169 transitions.
[2020-11-24 15:17:06,220 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:17:06,221 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 167 states to 162 states and 164 transitions.
[2020-11-24 15:17:06,221 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 162
[2020-11-24 15:17:06,222 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 162
[2020-11-24 15:17:06,222 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 162 states and 164 transitions.
[2020-11-24 15:17:06,222 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:17:06,222 INFO  L728         BuchiCegarLoop]: Abstraction has 162 states and 164 transitions.
[2020-11-24 15:17:06,222 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 162 states and 164 transitions.
[2020-11-24 15:17:06,225 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 162 to 151.
[2020-11-24 15:17:06,225 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 151 states.
[2020-11-24 15:17:06,225 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 151 states to 151 states and 153 transitions.
[2020-11-24 15:17:06,225 INFO  L751         BuchiCegarLoop]: Abstraction has 151 states and 153 transitions.
[2020-11-24 15:17:06,225 INFO  L631         BuchiCegarLoop]: Abstraction has 151 states and 153 transitions.
[2020-11-24 15:17:06,225 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:17:06,225 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 151 states and 153 transitions.
[2020-11-24 15:17:06,226 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:17:06,226 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:17:06,226 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:17:06,227 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:17:06,227 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2287]              assume null == 0;
[L2288]  CALL        call this := FreshRefGenerator__success();
[L885]               havoc newRef;
[L886]               assume Alloc[newRef] == false;
[L887]               Alloc[newRef] := true;
[L888]               assume newRef != null;
[L2288]  RET         call this := FreshRefGenerator__success();
[L2289]              assume now >= 0;
[L2290]              assume DType[this] == MintAndBurnToken;
[L2291]              assume !revert && gas >= 0;
[L2292]  CALL        call CorralChoice_MintAndBurnToken(this);
[L2196]              havoc msgsender_MSG;
[L2197]              havoc msgvalue_MSG;
[L2198]              havoc choice;
[L2199]              havoc __ret_0_totalSupply;
[L2200]              havoc _owner_s318;
[L2201]              havoc balance_s318;
[L2202]              havoc _to_s248;
[L2203]              havoc _value_s248;
[L2204]              havoc success_s248;
[L2205]              havoc _from_s306;
[L2206]              havoc _to_s306;
[L2207]              havoc _value_s306;
[L2208]              havoc success_s306;
[L2209]              havoc _spender_s346;
[L2210]              havoc _value_s346;
[L2211]              havoc success_s346;
[L2212]              havoc _owner_s362;
[L2213]              havoc _spender_s362;
[L2214]              havoc remaining_s362;
[L2215]              havoc __ret_0_name;
[L2216]              havoc __ret_0_decimals;
[L2217]              havoc __ret_0_symbol;
[L2218]              havoc __ret_0_version;
[L2219]              havoc __ret_0_owner;
[L2220]              havoc newOwner_s528;
[L2221]              havoc __ret_0_mintingFinished;
[L2222]              havoc _tokenName_s677;
[L2223]              havoc _decimalUnits_s677;
[L2224]              havoc _tokenSymbol_s677;
[L2225]              havoc _to_s726;
[L2226]              havoc _amount_s726;
[L2227]              havoc __ret_0_mint;
[L2228]              havoc __ret_0_finishMinting;
[L2229]              havoc _value_s765;
[L2230]              havoc tmpNow;
[L2231]              havoc gas;
[L2232]              assume gas > 4000000 && gas <= 8000000;
[L2233]              tmpNow := now;
[L2234]              havoc now;
[L2235]              assume now > tmpNow;
[L2236]              assume msgsender_MSG != null;
[L2237]  COND FALSE  !(choice == 6)
[L2243]  COND FALSE  !(choice == 5)
[L2249]  COND FALSE  !(choice == 4)
[L2256]  COND TRUE   choice == 3
[L2257]              gas := gas - 21000;
[L2258]  COND TRUE   gas >= 0
[L2259]              assume _value_s306 >= 0 && _value_s306 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2260]              assume msgvalue_MSG == 0;
[L2261]  CALL        call success_s306 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s306 || p2 != msgsender_MSG) && _from_s306 == _to_s306) && _value_s306 <= balances_StandardToken[this][_from_s306]) && _value_s306 <= allowed_StandardToken[this][_from_s306][msgsender_MSG]) && _value_s306 >= 0) && _value_s306 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_to_s306] >= 0) && balances_StandardToken[this][_to_s306] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_from_s306] >= 0) && balances_StandardToken[this][_from_s306] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s306][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s306][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L208]               havoc __exception;
[L209]               revert := false;
[L210]   COND FALSE  !(__exception)
[L238]   CALL        call success_s306 := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L957]   COND FALSE  !(!(balances_StandardToken[this][_from_s306] >= _value_s306 && allowed_StandardToken[this][_from_s306][msgsender_MSG] >= _value_s306))
[L961]               sum_balances0[this] := sum_balances0[this] - balances_StandardToken[this][_to_s306];
[L962]               balances_StandardToken[this][_to_s306] := (balances_StandardToken[this][_to_s306] + _value_s306) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               sum_balances0[this] := sum_balances0[this] + balances_StandardToken[this][_to_s306];
[L964]               sum_balances0[this] := sum_balances0[this] - balances_StandardToken[this][_from_s306];
[L965]               balances_StandardToken[this][_from_s306] := (balances_StandardToken[this][_from_s306] - _value_s306) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L966]               sum_balances0[this] := sum_balances0[this] + balances_StandardToken[this][_from_s306];
[L967]               sum_allowed1[_from_s306] := sum_allowed1[_from_s306] - allowed_StandardToken[this][_from_s306][msgsender_MSG];
[L968]               allowed_StandardToken[this][_from_s306][msgsender_MSG] := (allowed_StandardToken[this][_from_s306][msgsender_MSG] - _value_s306) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L969]               sum_allowed1[_from_s306] := sum_allowed1[_from_s306] + allowed_StandardToken[this][_from_s306][msgsender_MSG];
[L970]               assert { :EventEmitted "Transfer_StandardToken" } true;
[L971]               success_s306 := true;
[L238]   RET         call success_s306 := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L239]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s306 == true && allowed_StandardToken[this][_from_s306][msgsender_MSG] == old(allowed_StandardToken[this][_from_s306][msgsender_MSG]) - _value_s306) && totalSupply_Token[this] == old(totalSupply_Token[this])) && balances_StandardToken[this] == old(balances_StandardToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && mintingFinished_MintAndBurnToken[this] == old(mintingFinished_MintAndBurnToken[this])) && name_MintAndBurnToken[this] == old(name_MintAndBurnToken[this])) && decimals_MintAndBurnToken[this] == old(decimals_MintAndBurnToken[this])) && symbol_MintAndBurnToken[this] == old(symbol_MintAndBurnToken[this])) && version_MintAndBurnToken[this] == old(version_MintAndBurnToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L2261]  RET         call success_s306 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L2292]  RET         call CorralChoice_MintAndBurnToken(this);

Loop:
[L2292]        assume true;

[2020-11-24 15:17:06,228 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:17:06,229 INFO  L82        PathProgramCache]: Analyzing trace with hash 1598504364, now seen corresponding path program 1 times
[2020-11-24 15:17:06,229 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:17:06,287 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:17:06,629 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:17:06,629 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:17:06,630 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-24 15:17:06,631 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:17:06,631 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 15:17:06,631 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=108, Unknown=0, NotChecked=0, Total=132
[2020-11-24 15:17:06,631 INFO  L87              Difference]: Start difference. First operand 151 states and 153 transitions. cyclomatic complexity: 3 Second operand 12 states.
[2020-11-24 15:17:06,870 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:17:06,870 INFO  L93              Difference]: Finished difference Result 150 states and 151 transitions.
[2020-11-24 15:17:06,870 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-24 15:17:06,870 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 150 states and 151 transitions.
[2020-11-24 15:17:06,871 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:17:06,872 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 150 states to 129 states and 130 transitions.
[2020-11-24 15:17:06,872 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 129
[2020-11-24 15:17:06,873 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 129
[2020-11-24 15:17:06,873 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 129 states and 130 transitions.
[2020-11-24 15:17:06,873 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:17:06,874 INFO  L728         BuchiCegarLoop]: Abstraction has 129 states and 130 transitions.
[2020-11-24 15:17:06,874 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 129 states and 130 transitions.
[2020-11-24 15:17:06,876 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 129 to 129.
[2020-11-24 15:17:06,877 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 129 states.
[2020-11-24 15:17:06,877 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 129 states to 129 states and 130 transitions.
[2020-11-24 15:17:06,877 INFO  L751         BuchiCegarLoop]: Abstraction has 129 states and 130 transitions.
[2020-11-24 15:17:06,877 INFO  L631         BuchiCegarLoop]: Abstraction has 129 states and 130 transitions.
[2020-11-24 15:17:06,877 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:17:06,877 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 129 states and 130 transitions.
[2020-11-24 15:17:06,878 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:17:06,878 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:17:06,878 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:17:06,879 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:17:06,879 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2287]              assume null == 0;
[L2288]  CALL        call this := FreshRefGenerator__success();
[L885]               havoc newRef;
[L886]               assume Alloc[newRef] == false;
[L887]               Alloc[newRef] := true;
[L888]               assume newRef != null;
[L2288]  RET         call this := FreshRefGenerator__success();
[L2289]              assume now >= 0;
[L2290]              assume DType[this] == MintAndBurnToken;
[L2291]              assume !revert && gas >= 0;
[L2292]  CALL        call CorralChoice_MintAndBurnToken(this);
[L2196]              havoc msgsender_MSG;
[L2197]              havoc msgvalue_MSG;
[L2198]              havoc choice;
[L2199]              havoc __ret_0_totalSupply;
[L2200]              havoc _owner_s318;
[L2201]              havoc balance_s318;
[L2202]              havoc _to_s248;
[L2203]              havoc _value_s248;
[L2204]              havoc success_s248;
[L2205]              havoc _from_s306;
[L2206]              havoc _to_s306;
[L2207]              havoc _value_s306;
[L2208]              havoc success_s306;
[L2209]              havoc _spender_s346;
[L2210]              havoc _value_s346;
[L2211]              havoc success_s346;
[L2212]              havoc _owner_s362;
[L2213]              havoc _spender_s362;
[L2214]              havoc remaining_s362;
[L2215]              havoc __ret_0_name;
[L2216]              havoc __ret_0_decimals;
[L2217]              havoc __ret_0_symbol;
[L2218]              havoc __ret_0_version;
[L2219]              havoc __ret_0_owner;
[L2220]              havoc newOwner_s528;
[L2221]              havoc __ret_0_mintingFinished;
[L2222]              havoc _tokenName_s677;
[L2223]              havoc _decimalUnits_s677;
[L2224]              havoc _tokenSymbol_s677;
[L2225]              havoc _to_s726;
[L2226]              havoc _amount_s726;
[L2227]              havoc __ret_0_mint;
[L2228]              havoc __ret_0_finishMinting;
[L2229]              havoc _value_s765;
[L2230]              havoc tmpNow;
[L2231]              havoc gas;
[L2232]              assume gas > 4000000 && gas <= 8000000;
[L2233]              tmpNow := now;
[L2234]              havoc now;
[L2235]              assume now > tmpNow;
[L2236]              assume msgsender_MSG != null;
[L2237]  COND FALSE  !(choice == 6)
[L2243]  COND FALSE  !(choice == 5)
[L2249]  COND FALSE  !(choice == 4)
[L2256]  COND TRUE   choice == 3
[L2257]              gas := gas - 21000;
[L2258]  COND TRUE   gas >= 0
[L2259]              assume _value_s306 >= 0 && _value_s306 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2260]              assume msgvalue_MSG == 0;
[L2261]  CALL        call success_s306 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s306 || p2 != msgsender_MSG) && _from_s306 == _to_s306) && _value_s306 <= balances_StandardToken[this][_from_s306]) && _value_s306 <= allowed_StandardToken[this][_from_s306][msgsender_MSG]) && _value_s306 >= 0) && _value_s306 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_to_s306] >= 0) && balances_StandardToken[this][_to_s306] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_from_s306] >= 0) && balances_StandardToken[this][_from_s306] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s306][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s306][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L208]               havoc __exception;
[L209]               revert := false;
[L210]   COND TRUE   __exception
[L211]               __tmp__Balance := Balance;
[L212]               __tmp__DType := DType;
[L213]               __tmp__Alloc := Alloc;
[L214]               __tmp__balance_ADDR := balance_ADDR;
[L215]               __tmp__M_Ref_int := M_Ref_int;
[L216]               __tmp__sum_balances0 := sum_balances0;
[L217]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L218]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L219]               __tmp__sum_allowed1 := sum_allowed1;
[L220]               __tmp__Length := Length;
[L221]               __tmp__now := now;
[L222]               __tmp__totalSupply_Token := totalSupply_Token;
[L223]               __tmp__balances_StandardToken := balances_StandardToken;
[L224]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L225]               __tmp__name_HumanStandardToken := name_HumanStandardToken;
[L226]               __tmp__decimals_HumanStandardToken := decimals_HumanStandardToken;
[L227]               __tmp__symbol_HumanStandardToken := symbol_HumanStandardToken;
[L228]               __tmp__version_HumanStandardToken := version_HumanStandardToken;
[L229]               __tmp__owner_Ownable := owner_Ownable;
[L230]               __tmp__mintingFinished_MintAndBurnToken := mintingFinished_MintAndBurnToken;
[L231]               __tmp__name_MintAndBurnToken := name_MintAndBurnToken;
[L232]               __tmp__decimals_MintAndBurnToken := decimals_MintAndBurnToken;
[L233]               __tmp__symbol_MintAndBurnToken := symbol_MintAndBurnToken;
[L234]               __tmp__version_MintAndBurnToken := version_MintAndBurnToken;
[L235]   CALL        call success_s306 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L938]   COND TRUE   !(__tmp__balances_StandardToken[this][_from_s306] >= _value_s306 && __tmp__allowed_StandardToken[this][_from_s306][msgsender_MSG] >= _value_s306)
[L939]               revert := true;
[L235]   RET         call success_s306 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L236]               assume revert || gas < 0;
[L2261]  RET         call success_s306 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L2292]  RET         call CorralChoice_MintAndBurnToken(this);

Loop:
[L2292]        assume true;

[2020-11-24 15:17:06,882 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:17:06,882 INFO  L82        PathProgramCache]: Analyzing trace with hash 672471102, now seen corresponding path program 1 times
[2020-11-24 15:17:06,883 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:17:06,891 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:17:06,967 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:17:06,968 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:17:06,968 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:17:06,968 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:17:06,968 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:17:06,969 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:17:06,969 INFO  L87              Difference]: Start difference. First operand 129 states and 130 transitions. cyclomatic complexity: 2 Second operand 7 states.
[2020-11-24 15:17:07,030 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:17:07,031 INFO  L93              Difference]: Finished difference Result 131 states and 131 transitions.
[2020-11-24 15:17:07,031 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 15:17:07,031 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 131 states and 131 transitions.
[2020-11-24 15:17:07,032 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:17:07,033 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 131 states to 128 states and 128 transitions.
[2020-11-24 15:17:07,033 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 128
[2020-11-24 15:17:07,033 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 128
[2020-11-24 15:17:07,033 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 128 states and 128 transitions.
[2020-11-24 15:17:07,034 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:17:07,034 INFO  L728         BuchiCegarLoop]: Abstraction has 128 states and 128 transitions.
[2020-11-24 15:17:07,034 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 128 states and 128 transitions.
[2020-11-24 15:17:07,038 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 128 to 128.
[2020-11-24 15:17:07,038 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 128 states.
[2020-11-24 15:17:07,039 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 128 states to 128 states and 128 transitions.
[2020-11-24 15:17:07,039 INFO  L751         BuchiCegarLoop]: Abstraction has 128 states and 128 transitions.
[2020-11-24 15:17:07,039 INFO  L631         BuchiCegarLoop]: Abstraction has 128 states and 128 transitions.
[2020-11-24 15:17:07,039 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:17:07,039 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 128 states and 128 transitions.
[2020-11-24 15:17:07,040 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:17:07,040 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:17:07,040 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:17:07,041 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:17:07,041 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2287]              assume null == 0;
[L2288]  CALL        call this := FreshRefGenerator__success();
[L885]               havoc newRef;
[L886]               assume Alloc[newRef] == false;
[L887]               Alloc[newRef] := true;
[L888]               assume newRef != null;
[L2288]  RET         call this := FreshRefGenerator__success();
[L2289]              assume now >= 0;
[L2290]              assume DType[this] == MintAndBurnToken;
[L2291]              assume !revert && gas >= 0;
[L2292]  CALL        call CorralChoice_MintAndBurnToken(this);
[L2196]              havoc msgsender_MSG;
[L2197]              havoc msgvalue_MSG;
[L2198]              havoc choice;
[L2199]              havoc __ret_0_totalSupply;
[L2200]              havoc _owner_s318;
[L2201]              havoc balance_s318;
[L2202]              havoc _to_s248;
[L2203]              havoc _value_s248;
[L2204]              havoc success_s248;
[L2205]              havoc _from_s306;
[L2206]              havoc _to_s306;
[L2207]              havoc _value_s306;
[L2208]              havoc success_s306;
[L2209]              havoc _spender_s346;
[L2210]              havoc _value_s346;
[L2211]              havoc success_s346;
[L2212]              havoc _owner_s362;
[L2213]              havoc _spender_s362;
[L2214]              havoc remaining_s362;
[L2215]              havoc __ret_0_name;
[L2216]              havoc __ret_0_decimals;
[L2217]              havoc __ret_0_symbol;
[L2218]              havoc __ret_0_version;
[L2219]              havoc __ret_0_owner;
[L2220]              havoc newOwner_s528;
[L2221]              havoc __ret_0_mintingFinished;
[L2222]              havoc _tokenName_s677;
[L2223]              havoc _decimalUnits_s677;
[L2224]              havoc _tokenSymbol_s677;
[L2225]              havoc _to_s726;
[L2226]              havoc _amount_s726;
[L2227]              havoc __ret_0_mint;
[L2228]              havoc __ret_0_finishMinting;
[L2229]              havoc _value_s765;
[L2230]              havoc tmpNow;
[L2231]              havoc gas;
[L2232]              assume gas > 4000000 && gas <= 8000000;
[L2233]              tmpNow := now;
[L2234]              havoc now;
[L2235]              assume now > tmpNow;
[L2236]              assume msgsender_MSG != null;
[L2237]  COND FALSE  !(choice == 6)
[L2243]  COND FALSE  !(choice == 5)
[L2249]  COND FALSE  !(choice == 4)
[L2256]  COND TRUE   choice == 3
[L2257]              gas := gas - 21000;
[L2258]  COND TRUE   gas >= 0
[L2259]              assume _value_s306 >= 0 && _value_s306 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2260]              assume msgvalue_MSG == 0;
[L2261]  CALL        call success_s306 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s306 || p2 != msgsender_MSG) && _from_s306 == _to_s306) && _value_s306 <= balances_StandardToken[this][_from_s306]) && _value_s306 <= allowed_StandardToken[this][_from_s306][msgsender_MSG]) && _value_s306 >= 0) && _value_s306 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_to_s306] >= 0) && balances_StandardToken[this][_to_s306] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_from_s306] >= 0) && balances_StandardToken[this][_from_s306] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s306][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s306][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L208]               havoc __exception;
[L209]               revert := false;
[L210]   COND TRUE   __exception
[L211]               __tmp__Balance := Balance;
[L212]               __tmp__DType := DType;
[L213]               __tmp__Alloc := Alloc;
[L214]               __tmp__balance_ADDR := balance_ADDR;
[L215]               __tmp__M_Ref_int := M_Ref_int;
[L216]               __tmp__sum_balances0 := sum_balances0;
[L217]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L218]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L219]               __tmp__sum_allowed1 := sum_allowed1;
[L220]               __tmp__Length := Length;
[L221]               __tmp__now := now;
[L222]               __tmp__totalSupply_Token := totalSupply_Token;
[L223]               __tmp__balances_StandardToken := balances_StandardToken;
[L224]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L225]               __tmp__name_HumanStandardToken := name_HumanStandardToken;
[L226]               __tmp__decimals_HumanStandardToken := decimals_HumanStandardToken;
[L227]               __tmp__symbol_HumanStandardToken := symbol_HumanStandardToken;
[L228]               __tmp__version_HumanStandardToken := version_HumanStandardToken;
[L229]               __tmp__owner_Ownable := owner_Ownable;
[L230]               __tmp__mintingFinished_MintAndBurnToken := mintingFinished_MintAndBurnToken;
[L231]               __tmp__name_MintAndBurnToken := name_MintAndBurnToken;
[L232]               __tmp__decimals_MintAndBurnToken := decimals_MintAndBurnToken;
[L233]               __tmp__symbol_MintAndBurnToken := symbol_MintAndBurnToken;
[L234]               __tmp__version_MintAndBurnToken := version_MintAndBurnToken;
[L235]   CALL        call success_s306 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L938]   COND FALSE  !(!(__tmp__balances_StandardToken[this][_from_s306] >= _value_s306 && __tmp__allowed_StandardToken[this][_from_s306][msgsender_MSG] >= _value_s306))
[L942]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_StandardToken[this][_to_s306];
[L943]               __tmp__balances_StandardToken[this][_to_s306] := (__tmp__balances_StandardToken[this][_to_s306] + _value_s306) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L944]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_StandardToken[this][_to_s306];
[L945]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_StandardToken[this][_from_s306];
[L946]               __tmp__balances_StandardToken[this][_from_s306] := (__tmp__balances_StandardToken[this][_from_s306] - _value_s306) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L947]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_StandardToken[this][_from_s306];
[L948]               __tmp__sum_allowed1[_from_s306] := __tmp__sum_allowed1[_from_s306] - __tmp__allowed_StandardToken[this][_from_s306][msgsender_MSG];
[L949]               __tmp__allowed_StandardToken[this][_from_s306][msgsender_MSG] := (__tmp__allowed_StandardToken[this][_from_s306][msgsender_MSG] - _value_s306) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L950]               __tmp__sum_allowed1[_from_s306] := __tmp__sum_allowed1[_from_s306] + __tmp__allowed_StandardToken[this][_from_s306][msgsender_MSG];
[L951]               success_s306 := true;
[L235]   RET         call success_s306 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L236]               assume revert || gas < 0;
[L2261]  RET         call success_s306 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s306, _to_s306, _value_s306);
[L2292]  RET         call CorralChoice_MintAndBurnToken(this);

Loop:
[L2292]        assume true;

[2020-11-24 15:17:07,043 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:17:07,044 INFO  L82        PathProgramCache]: Analyzing trace with hash -1082819142, now seen corresponding path program 1 times
[2020-11-24 15:17:07,045 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:17:07,055 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:17:07,088 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:17:07,089 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:17:07,089 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 15:17:07,089 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:17:07,089 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 15:17:07,090 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-24 15:17:07,090 INFO  L87              Difference]: Start difference. First operand 128 states and 128 transitions. cyclomatic complexity: 1 Second operand 6 states.
[2020-11-24 15:17:07,102 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:17:07,102 INFO  L93              Difference]: Finished difference Result 121 states and 120 transitions.
[2020-11-24 15:17:07,102 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 15:17:07,103 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 121 states and 120 transitions.
[2020-11-24 15:17:07,104 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:17:07,104 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 121 states to 0 states and 0 transitions.
[2020-11-24 15:17:07,104 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 15:17:07,104 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 15:17:07,104 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 15:17:07,104 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:17:07,104 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:17:07,104 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:17:07,104 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:17:07,104 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:17:07,104 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 15:17:07,105 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:17:07,105 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 15:17:07,109 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:17:07 BasicIcfg
[2020-11-24 15:17:07,109 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:17:07,110 INFO  L168              Benchmark]: Toolchain (without parser) took 2987.69 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 263.7 MB). Free memory was 940.6 MB in the beginning and 854.5 MB in the end (delta: 86.1 MB). Peak memory consumption was 349.8 MB. Max. memory is 15.3 GB.
[2020-11-24 15:17:07,111 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.34 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:17:07,111 INFO  L168              Benchmark]: Boogie Preprocessor took 68.76 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:17:07,112 INFO  L168              Benchmark]: UtopiaSpecLang took 49.94 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:17:07,112 INFO  L168              Benchmark]: Boogie Printer took 11.36 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:17:07,112 INFO  L168              Benchmark]: RCFGBuilder took 551.54 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 860.0 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
[2020-11-24 15:17:07,113 INFO  L168              Benchmark]: UtopiaLTL2Aut took 34.83 ms. Allocated memory is still 1.0 GB. Free memory was 860.0 MB in the beginning and 851.1 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 15:17:07,113 INFO  L168              Benchmark]: BÃ¼chi Program Product took 850.81 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 51.4 MB). Free memory was 851.1 MB in the beginning and 838.1 MB in the end (delta: 13.0 MB). Peak memory consumption was 134.3 MB. Max. memory is 15.3 GB.
[2020-11-24 15:17:07,113 INFO  L168              Benchmark]: BlockEncodingV2 took 70.54 ms. Allocated memory is still 1.1 GB. Free memory was 838.1 MB in the beginning and 803.9 MB in the end (delta: 34.1 MB). Peak memory consumption was 34.1 MB. Max. memory is 15.3 GB.
[2020-11-24 15:17:07,114 INFO  L168              Benchmark]: BuchiAutomizer took 1347.49 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 212.3 MB). Free memory was 803.9 MB in the beginning and 854.5 MB in the end (delta: -50.6 MB). Peak memory consumption was 161.8 MB. Max. memory is 15.3 GB.
[2020-11-24 15:17:07,117 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1704 locations, 2991 edges
  - StatisticsResult: Encoded RCFG
    1666 locations, 2903 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.34 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 68.76 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 49.94 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.36 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 551.54 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 860.0 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 34.83 ms. Allocated memory is still 1.0 GB. Free memory was 860.0 MB in the beginning and 851.1 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 850.81 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 51.4 MB). Free memory was 851.1 MB in the beginning and 838.1 MB in the end (delta: 13.0 MB). Peak memory consumption was 134.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 70.54 ms. Allocated memory is still 1.1 GB. Free memory was 838.1 MB in the beginning and 803.9 MB in the end (delta: 34.1 MB). Peak memory consumption was 34.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1347.49 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 212.3 MB). Free memory was 803.9 MB in the beginning and 854.5 MB in the end (delta: -50.6 MB). Peak memory consumption was 161.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    727 locations, 914 edges
  - StatisticsResult: BuchiProgram size
    1704 locations, 2991 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 12 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.3s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.6s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 4 MinimizatonAttempts, 11 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 152 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1064 SDtfs, 993 SDslu, 1484 SDs, 0 SdLazy, 523 SolverSat, 420 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_StandardToken0) ==> ( <>(success_transferFrom_StandardToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
