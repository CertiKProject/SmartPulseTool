This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 17:41:08,384 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 17:41:08,385 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 17:41:08,397 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 17:41:08,397 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 17:41:08,397 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 17:41:08,398 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 17:41:08,400 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 17:41:08,402 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 17:41:08,402 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 17:41:08,403 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 17:41:08,403 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 17:41:08,404 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 17:41:08,405 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 17:41:08,406 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 17:41:08,406 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 17:41:08,407 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 17:41:08,408 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 17:41:08,410 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 17:41:08,411 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 17:41:08,412 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 17:41:08,412 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 17:41:08,414 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 17:41:08,414 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 17:41:08,414 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 17:41:08,415 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 17:41:08,415 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 17:41:08,416 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 17:41:08,416 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 17:41:08,416 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 17:41:08,417 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 17:41:08,417 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 17:41:08,418 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 17:41:08,418 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 17:41:08,419 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 17:41:08,419 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 17:41:08,420 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 17:41:08,420 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 17:41:08,420 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 17:41:08,421 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 17:41:08,421 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 17:41:08,421 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 17:41:08,430 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 17:41:08,430 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 17:41:08,431 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 17:41:08,431 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 17:41:08,431 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 17:41:08,431 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 17:41:08,431 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 17:41:08,431 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 17:41:08,431 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 17:41:08,432 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 17:41:08,432 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 17:41:08,432 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 17:41:08,432 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 17:41:08,432 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 17:41:08,432 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 17:41:08,432 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 17:41:08,432 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 17:41:08,432 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 17:41:08,432 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 17:41:08,433 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 17:41:08,433 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 17:41:08,433 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 17:41:08,433 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 17:41:08,433 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 17:41:08,433 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 17:41:08,433 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 17:41:08,455 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 17:41:08,465 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 17:41:08,468 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 17:41:08,469 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 17:41:08,469 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 17:41:08,470 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl
[2020-11-24 17:41:08,470 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl'
[2020-11-24 17:41:08,561 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 17:41:08,562 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 17:41:08,563 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 17:41:08,563 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 17:41:08,563 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 17:41:08,580 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/1) ...
[2020-11-24 17:41:08,582 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/1) ...
[2020-11-24 17:41:08,618 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/1) ...
[2020-11-24 17:41:08,619 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/1) ...
[2020-11-24 17:41:08,639 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/1) ...
[2020-11-24 17:41:08,650 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/1) ...
[2020-11-24 17:41:08,659 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/1) ...
[2020-11-24 17:41:08,668 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 17:41:08,669 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 17:41:08,669 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 17:41:08,671 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 17:41:08,675 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/1) ...
[2020-11-24 17:41:08,693 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(WhitelistedPausableToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WhitelistedPausableToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && callSpenderWhitelist_TONToken[this] == old(callSpenderWhitelist_TONToken[this]) && name_DetailedERC20[this] == old(name_DetailedERC20[this]) && symbol_DetailedERC20[this] == old(symbol_DetailedERC20[this]) && decimals_DetailedERC20[this] == old(decimals_DetailedERC20[this]) && whitelistExpiration_WhitelistedPausableToken[this] == old(whitelistExpiration_WhitelistedPausableToken[this]) && allowedTransactors_WhitelistedPausableToken[this] == old(allowedTransactors_WhitelistedPausableToken[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 17:41:08,698 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(WhitelistedPausableToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WhitelistedPausableToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && callSpenderWhitelist_TONToken[this] == old(callSpenderWhitelist_TONToken[this]) && name_DetailedERC20[this] == old(name_DetailedERC20[this]) && symbol_DetailedERC20[this] == old(symbol_DetailedERC20[this]) && decimals_DetailedERC20[this] == old(decimals_DetailedERC20[this]) && whitelistExpiration_WhitelistedPausableToken[this] == old(whitelistExpiration_WhitelistedPausableToken[this]) && allowedTransactors_WhitelistedPausableToken[this] == old(allowedTransactors_WhitelistedPausableToken[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 17:41:08,707 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(WhitelistedPausableToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WhitelistedPausableToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && callSpenderWhitelist_TONToken[this] == old(callSpenderWhitelist_TONToken[this]) && name_DetailedERC20[this] == old(name_DetailedERC20[this]) && symbol_DetailedERC20[this] == old(symbol_DetailedERC20[this]) && decimals_DetailedERC20[this] == old(decimals_DetailedERC20[this]) && whitelistExpiration_WhitelistedPausableToken[this] == old(whitelistExpiration_WhitelistedPausableToken[this]) && allowedTransactors_WhitelistedPausableToken[this] == old(allowedTransactors_WhitelistedPausableToken[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 17:41:08,715 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s1095 && p1!=_to_s1095 ) && ( p2!=_from_s1095 || p3!=msg.sender ) ) && _from_s1095!=_to_s1095 ) && _value_s1095<=balances_BasicToken[this][_from_s1095] ) && _value_s1095<=allowed_StandardToken[this][_from_s1095][msg.sender] ) && ( balances_BasicToken[this][_to_s1095] + _value_s1095 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s1095>=0 ) && _value_s1095<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s1095]>=0 ) && balances_BasicToken[this][_to_s1095]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_from_s1095]>=0 ) && balances_BasicToken[this][_from_s1095]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_StandardToken[this][_from_s1095][msg.sender]>=0 ) && allowed_StandardToken[this][_from_s1095][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>],IdentifierExpression[_to_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_to_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],IdentifierExpression[_value_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_to_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_to_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 17:41:08,719 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && balances_BasicToken[this][_from_s1095]==( ( old(balances_BasicToken[this][_from_s1095]) ) - _value_s1095 ) ) && balances_BasicToken[this][_to_s1095]==( ( old(balances_BasicToken[this][_to_s1095]) ) + _value_s1095 ) ) && allowed_StandardToken[this][_from_s1095][msg.sender]==( ( old(allowed_StandardToken[this][_from_s1095][msg.sender]) ) - _value_s1095 ) ) && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this][p1]==( old(balances_BasicToken[this][p1]) ) ) && allowed_StandardToken[this][p2][p3]==( old(allowed_StandardToken[this][p2][p3]) ) ) && callSpenderWhitelist_TONToken[this]==( old(callSpenderWhitelist_TONToken[this]) ) ) && name_DetailedERC20[this]==( old(name_DetailedERC20[this]) ) ) && symbol_DetailedERC20[this]==( old(symbol_DetailedERC20[this]) ) ) && decimals_DetailedERC20[this]==( old(decimals_DetailedERC20[this]) ) ) && whitelistExpiration_WhitelistedPausableToken[this]==( old(whitelistExpiration_WhitelistedPausableToken[this]) ) ) && allowedTransactors_WhitelistedPausableToken[this]==( old(allowedTransactors_WhitelistedPausableToken[this]) ) ) && paused_Pausable[this]==( old(paused_Pausable[this]) ) ) && mintingFinished_MintableToken[this]==( old(mintingFinished_MintableToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]],IdentifierExpression[_value_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_to_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_to_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]],IdentifierExpression[_value_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[_from_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]],IdentifierExpression[_value_s1095,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[callSpenderWhitelist_TONToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[callSpenderWhitelist_TONToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DetailedERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DetailedERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DetailedERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DetailedERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DetailedERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DetailedERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[whitelistExpiration_WhitelistedPausableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[whitelistExpiration_WhitelistedPausableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowedTransactors_WhitelistedPausableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowedTransactors_WhitelistedPausableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[mintingFinished_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[mintingFinished_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_WhitelistedPausableToken>]]]]]]
[2020-11-24 17:41:08,724 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(WhitelistedPausableToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WhitelistedPausableToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && callSpenderWhitelist_TONToken[this] == old(callSpenderWhitelist_TONToken[this]) && name_DetailedERC20[this] == old(name_DetailedERC20[this]) && symbol_DetailedERC20[this] == old(symbol_DetailedERC20[this]) && decimals_DetailedERC20[this] == old(decimals_DetailedERC20[this]) && whitelistExpiration_WhitelistedPausableToken[this] == old(whitelistExpiration_WhitelistedPausableToken[this]) && allowedTransactors_WhitelistedPausableToken[this] == old(allowedTransactors_WhitelistedPausableToken[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 17:41:08,725 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_WhitelistedPausableToken0) ==> ( <>AP(success_transferFrom_WhitelistedPausableToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 17:41:08,734 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:41:08 PropertyContainer
[2020-11-24 17:41:08,734 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 17:41:08,735 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 17:41:08,735 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 17:41:08,735 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 17:41:08,736 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/2) ...
[2020-11-24 17:41:08,736 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 17:41:08,736 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 17:41:08,751 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:41:08" (2/2) ...
[2020-11-24 17:41:08,752 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 17:41:08,752 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 17:41:08,752 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 17:41:08,752 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 17:41:08,753 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/2) ...
[2020-11-24 17:41:08,809 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 17:41:08,810 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-24 17:41:08,810 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 17:41:08,810 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 17:41:08,810 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 17:41:08,810 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 17:41:08,810 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-24 17:41:08,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-24 17:41:08,811 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-24 17:41:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-24 17:41:08,811 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-24 17:41:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-24 17:41:08,811 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 17:41:08,811 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 17:41:08,811 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 17:41:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 17:41:08,812 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 17:41:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 17:41:08,812 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken
[2020-11-24 17:41:08,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken
[2020-11-24 17:41:08,812 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken
[2020-11-24 17:41:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken
[2020-11-24 17:41:08,813 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken
[2020-11-24 17:41:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken
[2020-11-24 17:41:08,813 INFO  L130     BoogieDeclarations]: Found specification of procedure whitelistActive_WhitelistedPausableToken
[2020-11-24 17:41:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure whitelistActive_WhitelistedPausableToken
[2020-11-24 17:41:08,813 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WhitelistedPausableToken
[2020-11-24 17:41:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WhitelistedPausableToken
[2020-11-24 17:41:08,813 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WhitelistedPausableToken
[2020-11-24 17:41:08,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WhitelistedPausableToken
[2020-11-24 17:41:08,814 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 17:41:08,814 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 17:41:08,814 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 17:41:08,814 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 17:41:08,814 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 17:41:08,814 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 17:41:08,814 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__success
[2020-11-24 17:41:08,814 INFO  L130     BoogieDeclarations]: Found specification of procedure hasMintPermission_pre__success
[2020-11-24 17:41:08,814 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedTransfer_pre__success
[2020-11-24 17:41:08,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-24 17:41:08,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-24 17:41:08,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 17:41:08,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 17:41:08,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 17:41:08,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 17:41:08,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 17:41:08,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 17:41:08,815 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 17:41:08,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 17:41:08,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DetailedERC20
[2020-11-24 17:41:08,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_DetailedERC20
[2020-11-24 17:41:08,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-24 17:41:08,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-24 17:41:08,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-24 17:41:08,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-24 17:41:08,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 17:41:08,816 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 17:41:08,817 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_PausableToken
[2020-11-24 17:41:08,817 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_PausableToken
[2020-11-24 17:41:08,817 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MintableToken
[2020-11-24 17:41:08,817 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MintableToken
[2020-11-24 17:41:08,817 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_WhitelistedPausableToken
[2020-11-24 17:41:08,817 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_WhitelistedPausableToken
[2020-11-24 17:41:08,817 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TONToken
[2020-11-24 17:41:08,817 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 17:41:08,817 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 17:41:08,817 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 17:41:08,818 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 17:41:08,818 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-24 17:41:08,818 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-24 17:41:08,818 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 17:41:08,818 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 17:41:08,818 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-24 17:41:08,818 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-24 17:41:08,818 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 17:41:08,818 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 17:41:08,818 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 17:41:08,819 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 17:41:08,819 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 17:41:08,819 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 17:41:08,819 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken__success
[2020-11-24 17:41:08,819 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken__fail
[2020-11-24 17:41:08,819 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken__success
[2020-11-24 17:41:08,819 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken__fail
[2020-11-24 17:41:08,819 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken__success
[2020-11-24 17:41:08,819 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken__fail
[2020-11-24 17:41:08,820 INFO  L130     BoogieDeclarations]: Found specification of procedure whitelistActive_WhitelistedPausableToken__success
[2020-11-24 17:41:08,820 INFO  L130     BoogieDeclarations]: Found specification of procedure whitelistActive_WhitelistedPausableToken__fail
[2020-11-24 17:41:08,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WhitelistedPausableToken__success
[2020-11-24 17:41:08,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WhitelistedPausableToken__fail
[2020-11-24 17:41:08,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WhitelistedPausableToken__success
[2020-11-24 17:41:08,820 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WhitelistedPausableToken__fail
[2020-11-24 17:41:08,820 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 17:41:08,820 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 17:41:08,820 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 17:41:08,821 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 17:41:08,821 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 17:41:08,821 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 17:41:08,821 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__fail
[2020-11-24 17:41:08,821 INFO  L130     BoogieDeclarations]: Found specification of procedure hasMintPermission_pre__fail
[2020-11-24 17:41:08,821 INFO  L130     BoogieDeclarations]: Found specification of procedure allowedTransfer_pre__fail
[2020-11-24 17:41:08,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 17:41:08,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 17:41:08,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 17:41:08,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 17:41:08,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 17:41:08,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 17:41:08,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-24 17:41:08,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-24 17:41:08,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 17:41:08,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 17:41:08,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-24 17:41:08,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-24 17:41:08,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 17:41:08,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 17:41:08,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 17:41:08,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 17:41:08,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 17:41:08,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 17:41:08,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken__fail
[2020-11-24 17:41:08,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken__success
[2020-11-24 17:41:08,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken__fail
[2020-11-24 17:41:08,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken__success
[2020-11-24 17:41:08,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken__fail
[2020-11-24 17:41:08,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken__success
[2020-11-24 17:41:08,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure whitelistActive_WhitelistedPausableToken__fail
[2020-11-24 17:41:08,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure whitelistActive_WhitelistedPausableToken__success
[2020-11-24 17:41:08,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WhitelistedPausableToken__fail
[2020-11-24 17:41:08,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WhitelistedPausableToken__success
[2020-11-24 17:41:08,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WhitelistedPausableToken__fail
[2020-11-24 17:41:08,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WhitelistedPausableToken__success
[2020-11-24 17:41:08,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 17:41:08,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 17:41:08,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 17:41:08,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 17:41:08,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 17:41:08,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 17:41:08,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 17:41:08,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 17:41:08,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 17:41:08,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 17:41:08,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 17:41:08,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 17:41:08,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__fail
[2020-11-24 17:41:08,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__success
[2020-11-24 17:41:08,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure hasMintPermission_pre__fail
[2020-11-24 17:41:08,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure hasMintPermission_pre__success
[2020-11-24 17:41:08,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedTransfer_pre__fail
[2020-11-24 17:41:08,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowedTransfer_pre__success
[2020-11-24 17:41:08,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-24 17:41:08,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-24 17:41:08,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 17:41:08,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 17:41:08,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 17:41:08,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 17:41:08,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 17:41:08,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 17:41:08,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 17:41:08,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 17:41:08,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DetailedERC20
[2020-11-24 17:41:08,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_DetailedERC20
[2020-11-24 17:41:08,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-24 17:41:08,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_PausableToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_PausableToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MintableToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MintableToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_WhitelistedPausableToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_WhitelistedPausableToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TONToken
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 17:41:08,828 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 17:41:08,828 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 17:41:09,115 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:41:09,538 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:41:09,539 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:41:09,539 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:41:09,797 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 17:41:09,797 INFO  L286             CfgBuilder]: Removed 13 assue(true) statements.
[2020-11-24 17:41:09,799 INFO  L202        PluginConnector]: Adding new model TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:41:09 BoogieIcfgContainer
[2020-11-24 17:41:09,800 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:41:08" (2/2) ...
[2020-11-24 17:41:09,800 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 17:41:09,800 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1dde2e41 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:41:09, skipping insertion in model container
[2020-11-24 17:41:09,800 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 17:41:09,800 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 17:41:09,801 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 17:41:09,802 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 17:41:09,802 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/3) ...
[2020-11-24 17:41:09,803 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@ac97227 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:41:09, skipping insertion in model container
[2020-11-24 17:41:09,803 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:41:08" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 17:41:09,866 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:41:09 NWAContainer
[2020-11-24 17:41:09,866 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 17:41:09,866 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 17:41:09,866 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 17:41:09,867 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 17:41:09,868 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:41:09" (3/4) ...
[2020-11-24 17:41:09,869 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@44ef404e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:41:09, skipping insertion in model container
[2020-11-24 17:41:09,869 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:41:09" (4/4) ...
[2020-11-24 17:41:09,872 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 17:41:09,876 INFO  L110   BuchiProductObserver]: Initial RCFG 1609 locations, 2168 edges
[2020-11-24 17:41:09,876 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 17:41:09,888 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 17:41:11,851 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 17:41:11,856 INFO  L110   BuchiProductObserver]: BuchiProgram size 3904 locations, 7083 edges
[2020-11-24 17:41:11,856 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:41:11 BoogieIcfgContainer
[2020-11-24 17:41:11,856 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 17:41:11,856 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 17:41:11,856 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 17:41:11,858 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 17:41:11,858 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:41:11" (1/1) ...
[2020-11-24 17:41:11,938 INFO  L313           BlockEncoder]: Initial Icfg 3904 locations, 7083 edges
[2020-11-24 17:41:11,939 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 17:41:11,939 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 17:41:11,939 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 17:41:11,940 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 17:41:11,951 INFO  L70    emoveInfeasibleEdges]: Removed 129 edges and 29 locations because of local infeasibility
[2020-11-24 17:41:11,961 INFO  L70        RemoveSinkStates]: Removed 38 edges and 25 locations by removing sink states
[2020-11-24 17:41:11,973 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 17:41:11,976 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 17:41:11,979 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 17:41:11,979 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 17:41:11,984 INFO  L313           BlockEncoder]: Encoded RCFG 3818 locations, 6869 edges
[2020-11-24 17:41:11,984 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:41:11 BasicIcfg
[2020-11-24 17:41:11,984 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 17:41:11,985 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 17:41:11,985 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 17:41:11,987 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 17:41:11,987 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:41:11,987 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:41:08" (1/6) ...
[2020-11-24 17:41:11,988 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5f940567 and model type TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:41:11, skipping insertion in model container
[2020-11-24 17:41:11,988 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:41:11,989 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:41:08" (2/6) ...
[2020-11-24 17:41:11,989 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5f940567 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:41:11, skipping insertion in model container
[2020-11-24 17:41:11,989 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:41:11,989 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:41:09" (3/6) ...
[2020-11-24 17:41:11,989 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5f940567 and model type TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:41:11, skipping insertion in model container
[2020-11-24 17:41:11,989 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:41:11,989 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:41:09" (4/6) ...
[2020-11-24 17:41:11,989 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5f940567 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:41:11, skipping insertion in model container
[2020-11-24 17:41:11,989 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:41:11,989 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:41:11" (5/6) ...
[2020-11-24 17:41:11,990 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5f940567 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 05:41:11, skipping insertion in model container
[2020-11-24 17:41:11,990 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:41:11,990 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:41:11" (6/6) ...
[2020-11-24 17:41:11,991 INFO  L404   chiAutomizerObserver]: Analyzing ICFG TONToken_0x6a6c2ada3ce053561c2fbc3ee211f23d9b8c520a_transferfrom-normal.bpl_BEv2
[2020-11-24 17:41:12,023 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 17:41:12,023 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 17:41:12,023 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 17:41:12,024 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 17:41:12,024 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 17:41:12,024 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 17:41:12,024 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 17:41:12,024 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 17:41:12,024 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 17:41:12,053 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3818 states.
[2020-11-24 17:41:12,102 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:41:12,102 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:41:12,102 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:41:12,111 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:41:12,111 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 17:41:12,111 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 17:41:12,111 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3818 states.
[2020-11-24 17:41:12,128 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:41:12,128 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:41:12,128 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:41:12,130 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:41:12,130 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_WhitelistedPausableToken0 := false;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4756]              assume null == 0;
[L4757]  CALL        call this := FreshRefGenerator__success();
[L1659]              havoc newRef;
[L1660]              assume Alloc[newRef] == false;
[L1661]              Alloc[newRef] := true;
[L1662]              assume newRef != null;
[L4757]  RET         call this := FreshRefGenerator__success();
[L4758]              assume now >= 0;
[L4759]              assume DType[this] == TONToken;
[L4760]              assume !revert && gas >= 0;
[L4761]  CALL        call CorralChoice_TONToken(this);
[L4638]              havoc msgsender_MSG;
[L4639]              havoc msgvalue_MSG;
[L4640]              havoc choice;
[L4641]              havoc __ret_0_totalSupply;
[L4642]              havoc _owner_s426;
[L4643]              havoc __ret_0_balanceOf;
[L4644]              havoc _to_s1072;
[L4645]              havoc _value_s1072;
[L4646]              havoc __ret_0_transfer;
[L4647]              havoc __ret_0_owner;
[L4648]              havoc _newOwner_s91;
[L4649]              havoc _owner_s635;
[L4650]              havoc _spender_s635;
[L4651]              havoc __ret_0_allowance;
[L4652]              havoc _from_s1095;
[L4653]              havoc _to_s1095;
[L4654]              havoc _value_s1095;
[L4655]              havoc __ret_0_transferFrom;
[L4656]              havoc _spender_s799;
[L4657]              havoc _value_s799;
[L4658]              havoc __ret_0_approve;
[L4659]              havoc __ret_0_paused;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc _name_s334;
[L4664]              havoc _symbol_s334;
[L4665]              havoc _decimals_s334;
[L4666]              havoc _value_s1155;
[L4667]              havoc _spender_s817;
[L4668]              havoc _addedValue_s817;
[L4669]              havoc success_s817;
[L4670]              havoc _spender_s835;
[L4671]              havoc _subtractedValue_s835;
[L4672]              havoc success_s835;
[L4673]              havoc __ret_0_mintingFinished;
[L4674]              havoc _to_s918;
[L4675]              havoc _amount_s918;
[L4676]              havoc __ret_0_mint;
[L4677]              havoc __ret_0_finishMinting;
[L4678]              havoc __ret_0_whitelistExpiration;
[L4679]              havoc arg1281_s0;
[L4680]              havoc __ret_0_allowedTransactors;
[L4681]              havoc __ret_0_whitelistActive;
[L4682]              havoc _transactor_s1010;
[L4683]              havoc _transactor_s1027;
[L4684]              havoc _expiration_s1051;
[L4685]              havoc arg1282_s0;
[L4686]              havoc __ret_0_callSpenderWhitelist;
[L4687]              havoc _who_s1170;
[L4688]              havoc _value_s1170;
[L4689]              havoc _spender_s1190;
[L4690]              havoc _spender_s1209;
[L4691]              havoc _spender_s1278;
[L4692]              havoc _value_s1278;
[L4693]              havoc _selector_s1278;
[L4694]              havoc _callParams_s1278;
[L4695]              havoc __ret_0_approveAndCallWithSender;
[L4696]              havoc tmpNow;
[L4697]              havoc gas;
[L4698]              assume gas > 4000000 && gas <= 8000000;
[L4699]              tmpNow := now;
[L4700]              havoc now;
[L4701]              assume now > tmpNow;
[L4702]              assume msgsender_MSG != null;
[L4703]  COND TRUE   choice == 7
[L4704]              gas := gas - 21000;
[L4705]  COND FALSE  !(gas >= 0)
[L4761]  RET         call CorralChoice_TONToken(this);

Loop:
[L4761]        assume true;

[2020-11-24 17:41:12,147 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:41:12,147 INFO  L82        PathProgramCache]: Analyzing trace with hash -834420418, now seen corresponding path program 1 times
[2020-11-24 17:41:12,153 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:41:12,174 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:41:12,227 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:41:12,230 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:41:12,230 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 17:41:12,448 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:41:12,460 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 17:41:12,460 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 17:41:12,462 INFO  L87              Difference]: Start difference. First operand 3818 states. Second operand 4 states.
[2020-11-24 17:41:12,757 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:41:12,757 INFO  L93              Difference]: Finished difference Result 1077 states and 1272 transitions.
[2020-11-24 17:41:12,757 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 17:41:12,759 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1077 states and 1272 transitions.
[2020-11-24 17:41:12,767 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:41:12,774 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1077 states to 350 states and 403 transitions.
[2020-11-24 17:41:12,775 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 17:41:12,776 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 173
[2020-11-24 17:41:12,776 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 350 states and 403 transitions.
[2020-11-24 17:41:12,780 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:41:12,780 INFO  L728         BuchiCegarLoop]: Abstraction has 350 states and 403 transitions.
[2020-11-24 17:41:12,795 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 350 states and 403 transitions.
[2020-11-24 17:41:12,813 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 350 to 350.
[2020-11-24 17:41:12,814 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 350 states.
[2020-11-24 17:41:12,815 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 350 states to 350 states and 403 transitions.
[2020-11-24 17:41:12,816 INFO  L751         BuchiCegarLoop]: Abstraction has 350 states and 403 transitions.
[2020-11-24 17:41:12,816 INFO  L631         BuchiCegarLoop]: Abstraction has 350 states and 403 transitions.
[2020-11-24 17:41:12,816 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 17:41:12,816 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 350 states and 403 transitions.
[2020-11-24 17:41:12,818 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:41:12,818 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:41:12,818 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:41:12,819 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:41:12,819 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_WhitelistedPausableToken0 := false;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4756]              assume null == 0;
[L4757]  CALL        call this := FreshRefGenerator__success();
[L1659]              havoc newRef;
[L1660]              assume Alloc[newRef] == false;
[L1661]              Alloc[newRef] := true;
[L1662]              assume newRef != null;
[L4757]  RET         call this := FreshRefGenerator__success();
[L4758]              assume now >= 0;
[L4759]              assume DType[this] == TONToken;
[L4760]              assume !revert && gas >= 0;
[L4761]  CALL        call CorralChoice_TONToken(this);
[L4638]              havoc msgsender_MSG;
[L4639]              havoc msgvalue_MSG;
[L4640]              havoc choice;
[L4641]              havoc __ret_0_totalSupply;
[L4642]              havoc _owner_s426;
[L4643]              havoc __ret_0_balanceOf;
[L4644]              havoc _to_s1072;
[L4645]              havoc _value_s1072;
[L4646]              havoc __ret_0_transfer;
[L4647]              havoc __ret_0_owner;
[L4648]              havoc _newOwner_s91;
[L4649]              havoc _owner_s635;
[L4650]              havoc _spender_s635;
[L4651]              havoc __ret_0_allowance;
[L4652]              havoc _from_s1095;
[L4653]              havoc _to_s1095;
[L4654]              havoc _value_s1095;
[L4655]              havoc __ret_0_transferFrom;
[L4656]              havoc _spender_s799;
[L4657]              havoc _value_s799;
[L4658]              havoc __ret_0_approve;
[L4659]              havoc __ret_0_paused;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc _name_s334;
[L4664]              havoc _symbol_s334;
[L4665]              havoc _decimals_s334;
[L4666]              havoc _value_s1155;
[L4667]              havoc _spender_s817;
[L4668]              havoc _addedValue_s817;
[L4669]              havoc success_s817;
[L4670]              havoc _spender_s835;
[L4671]              havoc _subtractedValue_s835;
[L4672]              havoc success_s835;
[L4673]              havoc __ret_0_mintingFinished;
[L4674]              havoc _to_s918;
[L4675]              havoc _amount_s918;
[L4676]              havoc __ret_0_mint;
[L4677]              havoc __ret_0_finishMinting;
[L4678]              havoc __ret_0_whitelistExpiration;
[L4679]              havoc arg1281_s0;
[L4680]              havoc __ret_0_allowedTransactors;
[L4681]              havoc __ret_0_whitelistActive;
[L4682]              havoc _transactor_s1010;
[L4683]              havoc _transactor_s1027;
[L4684]              havoc _expiration_s1051;
[L4685]              havoc arg1282_s0;
[L4686]              havoc __ret_0_callSpenderWhitelist;
[L4687]              havoc _who_s1170;
[L4688]              havoc _value_s1170;
[L4689]              havoc _spender_s1190;
[L4690]              havoc _spender_s1209;
[L4691]              havoc _spender_s1278;
[L4692]              havoc _value_s1278;
[L4693]              havoc _selector_s1278;
[L4694]              havoc _callParams_s1278;
[L4695]              havoc __ret_0_approveAndCallWithSender;
[L4696]              havoc tmpNow;
[L4697]              havoc gas;
[L4698]              assume gas > 4000000 && gas <= 8000000;
[L4699]              tmpNow := now;
[L4700]              havoc now;
[L4701]              assume now > tmpNow;
[L4702]              assume msgsender_MSG != null;
[L4703]  COND FALSE  !(choice == 7)
[L4709]  COND FALSE  !(choice == 6)
[L4715]  COND FALSE  !(choice == 5)
[L4722]  COND FALSE  !(choice == 4)
[L4728]  COND TRUE   choice == 3
[L4729]              gas := gas - 21000;
[L4730]  COND TRUE   gas >= 0
[L4731]              assume _value_s1095 >= 0 && _value_s1095 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4732]              assume msgvalue_MSG == 0;
[L4733]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_WhitelistedPausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s1095 && p1 != _to_s1095) && (p2 != _from_s1095 || p3 != msgsender_MSG)) && _from_s1095 != _to_s1095) && _value_s1095 <= balances_BasicToken[this][_from_s1095]) && _value_s1095 <= allowed_StandardToken[this][_from_s1095][msgsender_MSG]) && balances_BasicToken[this][_to_s1095] + _value_s1095 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s1095 >= 0) && _value_s1095 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s1095] >= 0) && balances_BasicToken[this][_to_s1095] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s1095] >= 0) && balances_BasicToken[this][_from_s1095] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s1095][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s1095][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := true;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := false;
[L3]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L903]   CALL        call __ret_0_ := transferFrom~address~address~uint256_WhitelistedPausableToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L2173]  CALL        call allowedTransfer_pre__success(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095);
[L3549]  COND TRUE   DType[this] == TONToken
[L3550]  CALL        call __var_14 := whitelistActive_WhitelistedPausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2090]              __ret_0_ := now < whitelistExpiration_WhitelistedPausableToken[this];
[L3550]  RET         call __var_14 := whitelistActive_WhitelistedPausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND TRUE   revert
[L2173]  RET         call allowedTransfer_pre__success(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095);
[L2174]  COND TRUE   revert
[L903]   RET         call __ret_0_ := transferFrom~address~address~uint256_WhitelistedPausableToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L904]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((__ret_0_ == true && balances_BasicToken[this][_from_s1095] == old(balances_BasicToken[this][_from_s1095]) - _value_s1095) && balances_BasicToken[this][_to_s1095] == old(balances_BasicToken[this][_to_s1095]) + _value_s1095) && allowed_StandardToken[this][_from_s1095][msgsender_MSG] == old(allowed_StandardToken[this][_from_s1095][msgsender_MSG]) - _value_s1095) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3])) && callSpenderWhitelist_TONToken[this] == old(callSpenderWhitelist_TONToken[this])) && name_DetailedERC20[this] == old(name_DetailedERC20[this])) && symbol_DetailedERC20[this] == old(symbol_DetailedERC20[this])) && decimals_DetailedERC20[this] == old(decimals_DetailedERC20[this])) && whitelistExpiration_WhitelistedPausableToken[this] == old(whitelistExpiration_WhitelistedPausableToken[this])) && allowedTransactors_WhitelistedPausableToken[this] == old(allowedTransactors_WhitelistedPausableToken[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4733]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_WhitelistedPausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L4761]  RET         call CorralChoice_TONToken(this);

Loop:
[L4761]        assume true;

[2020-11-24 17:41:12,823 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:41:12,823 INFO  L82        PathProgramCache]: Analyzing trace with hash -1520122688, now seen corresponding path program 1 times
[2020-11-24 17:41:12,824 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:41:12,837 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:41:12,864 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:41:12,864 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:41:12,864 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 17:41:12,866 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:41:12,866 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 17:41:12,866 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 17:41:12,867 INFO  L87              Difference]: Start difference. First operand 350 states and 403 transitions. cyclomatic complexity: 54 Second operand 5 states.
[2020-11-24 17:41:12,934 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:41:12,934 INFO  L93              Difference]: Finished difference Result 409 states and 458 transitions.
[2020-11-24 17:41:12,934 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 17:41:12,935 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 409 states and 458 transitions.
[2020-11-24 17:41:12,937 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 17:41:12,940 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 409 states to 409 states and 458 transitions.
[2020-11-24 17:41:12,940 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 216
[2020-11-24 17:41:12,940 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 216
[2020-11-24 17:41:12,940 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 409 states and 458 transitions.
[2020-11-24 17:41:12,941 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:41:12,941 INFO  L728         BuchiCegarLoop]: Abstraction has 409 states and 458 transitions.
[2020-11-24 17:41:12,942 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 409 states and 458 transitions.
[2020-11-24 17:41:12,950 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 409 to 394.
[2020-11-24 17:41:12,950 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 394 states.
[2020-11-24 17:41:12,951 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 394 states to 394 states and 443 transitions.
[2020-11-24 17:41:12,952 INFO  L751         BuchiCegarLoop]: Abstraction has 394 states and 443 transitions.
[2020-11-24 17:41:12,952 INFO  L631         BuchiCegarLoop]: Abstraction has 394 states and 443 transitions.
[2020-11-24 17:41:12,952 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 17:41:12,952 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 394 states and 443 transitions.
[2020-11-24 17:41:12,953 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:41:12,953 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:41:12,953 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:41:12,955 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:41:12,955 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_WhitelistedPausableToken0 := false;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4756]              assume null == 0;
[L4757]  CALL        call this := FreshRefGenerator__success();
[L1659]              havoc newRef;
[L1660]              assume Alloc[newRef] == false;
[L1661]              Alloc[newRef] := true;
[L1662]              assume newRef != null;
[L4757]  RET         call this := FreshRefGenerator__success();
[L4758]              assume now >= 0;
[L4759]              assume DType[this] == TONToken;
[L4760]              assume !revert && gas >= 0;
[L4761]  CALL        call CorralChoice_TONToken(this);
[L4638]              havoc msgsender_MSG;
[L4639]              havoc msgvalue_MSG;
[L4640]              havoc choice;
[L4641]              havoc __ret_0_totalSupply;
[L4642]              havoc _owner_s426;
[L4643]              havoc __ret_0_balanceOf;
[L4644]              havoc _to_s1072;
[L4645]              havoc _value_s1072;
[L4646]              havoc __ret_0_transfer;
[L4647]              havoc __ret_0_owner;
[L4648]              havoc _newOwner_s91;
[L4649]              havoc _owner_s635;
[L4650]              havoc _spender_s635;
[L4651]              havoc __ret_0_allowance;
[L4652]              havoc _from_s1095;
[L4653]              havoc _to_s1095;
[L4654]              havoc _value_s1095;
[L4655]              havoc __ret_0_transferFrom;
[L4656]              havoc _spender_s799;
[L4657]              havoc _value_s799;
[L4658]              havoc __ret_0_approve;
[L4659]              havoc __ret_0_paused;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc _name_s334;
[L4664]              havoc _symbol_s334;
[L4665]              havoc _decimals_s334;
[L4666]              havoc _value_s1155;
[L4667]              havoc _spender_s817;
[L4668]              havoc _addedValue_s817;
[L4669]              havoc success_s817;
[L4670]              havoc _spender_s835;
[L4671]              havoc _subtractedValue_s835;
[L4672]              havoc success_s835;
[L4673]              havoc __ret_0_mintingFinished;
[L4674]              havoc _to_s918;
[L4675]              havoc _amount_s918;
[L4676]              havoc __ret_0_mint;
[L4677]              havoc __ret_0_finishMinting;
[L4678]              havoc __ret_0_whitelistExpiration;
[L4679]              havoc arg1281_s0;
[L4680]              havoc __ret_0_allowedTransactors;
[L4681]              havoc __ret_0_whitelistActive;
[L4682]              havoc _transactor_s1010;
[L4683]              havoc _transactor_s1027;
[L4684]              havoc _expiration_s1051;
[L4685]              havoc arg1282_s0;
[L4686]              havoc __ret_0_callSpenderWhitelist;
[L4687]              havoc _who_s1170;
[L4688]              havoc _value_s1170;
[L4689]              havoc _spender_s1190;
[L4690]              havoc _spender_s1209;
[L4691]              havoc _spender_s1278;
[L4692]              havoc _value_s1278;
[L4693]              havoc _selector_s1278;
[L4694]              havoc _callParams_s1278;
[L4695]              havoc __ret_0_approveAndCallWithSender;
[L4696]              havoc tmpNow;
[L4697]              havoc gas;
[L4698]              assume gas > 4000000 && gas <= 8000000;
[L4699]              tmpNow := now;
[L4700]              havoc now;
[L4701]              assume now > tmpNow;
[L4702]              assume msgsender_MSG != null;
[L4703]  COND FALSE  !(choice == 7)
[L4709]  COND FALSE  !(choice == 6)
[L4715]  COND FALSE  !(choice == 5)
[L4722]  COND FALSE  !(choice == 4)
[L4728]  COND TRUE   choice == 3
[L4729]              gas := gas - 21000;
[L4730]  COND TRUE   gas >= 0
[L4731]              assume _value_s1095 >= 0 && _value_s1095 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4732]              assume msgvalue_MSG == 0;
[L4733]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_WhitelistedPausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s1095 && p1 != _to_s1095) && (p2 != _from_s1095 || p3 != msgsender_MSG)) && _from_s1095 != _to_s1095) && _value_s1095 <= balances_BasicToken[this][_from_s1095]) && _value_s1095 <= allowed_StandardToken[this][_from_s1095][msgsender_MSG]) && balances_BasicToken[this][_to_s1095] + _value_s1095 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s1095 >= 0) && _value_s1095 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s1095] >= 0) && balances_BasicToken[this][_to_s1095] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s1095] >= 0) && balances_BasicToken[this][_from_s1095] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s1095][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s1095][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := true;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := false;
[L3]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L903]   CALL        call __ret_0_ := transferFrom~address~address~uint256_WhitelistedPausableToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L2173]  CALL        call allowedTransfer_pre__success(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095);
[L3549]  COND TRUE   DType[this] == TONToken
[L3550]  CALL        call __var_14 := whitelistActive_WhitelistedPausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2090]              __ret_0_ := now < whitelistExpiration_WhitelistedPausableToken[this];
[L3550]  RET         call __var_14 := whitelistActive_WhitelistedPausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND FALSE  !(revert)
[L3562]  COND TRUE   !((!__var_14 || allowedTransactors_WhitelistedPausableToken[this][_from_s981]) || allowedTransactors_WhitelistedPausableToken[this][_to_s981])
[L3563]              revert := true;
[L2173]  RET         call allowedTransfer_pre__success(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095);
[L2174]  COND TRUE   revert
[L903]   RET         call __ret_0_ := transferFrom~address~address~uint256_WhitelistedPausableToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L904]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((__ret_0_ == true && balances_BasicToken[this][_from_s1095] == old(balances_BasicToken[this][_from_s1095]) - _value_s1095) && balances_BasicToken[this][_to_s1095] == old(balances_BasicToken[this][_to_s1095]) + _value_s1095) && allowed_StandardToken[this][_from_s1095][msgsender_MSG] == old(allowed_StandardToken[this][_from_s1095][msgsender_MSG]) - _value_s1095) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3])) && callSpenderWhitelist_TONToken[this] == old(callSpenderWhitelist_TONToken[this])) && name_DetailedERC20[this] == old(name_DetailedERC20[this])) && symbol_DetailedERC20[this] == old(symbol_DetailedERC20[this])) && decimals_DetailedERC20[this] == old(decimals_DetailedERC20[this])) && whitelistExpiration_WhitelistedPausableToken[this] == old(whitelistExpiration_WhitelistedPausableToken[this])) && allowedTransactors_WhitelistedPausableToken[this] == old(allowedTransactors_WhitelistedPausableToken[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4733]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_WhitelistedPausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L4761]  RET         call CorralChoice_TONToken(this);

Loop:
[L4761]        assume true;

[2020-11-24 17:41:12,957 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:41:12,957 INFO  L82        PathProgramCache]: Analyzing trace with hash 1577342798, now seen corresponding path program 1 times
[2020-11-24 17:41:12,959 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:41:12,967 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:41:12,986 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:41:12,986 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:41:12,987 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 17:41:12,987 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:41:12,987 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 17:41:12,987 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 17:41:12,987 INFO  L87              Difference]: Start difference. First operand 394 states and 443 transitions. cyclomatic complexity: 50 Second operand 3 states.
[2020-11-24 17:41:13,001 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:41:13,001 INFO  L93              Difference]: Finished difference Result 409 states and 443 transitions.
[2020-11-24 17:41:13,001 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 17:41:13,001 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 409 states and 443 transitions.
[2020-11-24 17:41:13,003 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 17:41:13,005 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 409 states to 378 states and 405 transitions.
[2020-11-24 17:41:13,005 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 195
[2020-11-24 17:41:13,006 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 205
[2020-11-24 17:41:13,006 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 378 states and 405 transitions.
[2020-11-24 17:41:13,006 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:41:13,007 INFO  L728         BuchiCegarLoop]: Abstraction has 378 states and 405 transitions.
[2020-11-24 17:41:13,007 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 378 states and 405 transitions.
[2020-11-24 17:41:13,011 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 378 to 367.
[2020-11-24 17:41:13,011 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 367 states.
[2020-11-24 17:41:13,012 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 367 states to 367 states and 394 transitions.
[2020-11-24 17:41:13,012 INFO  L751         BuchiCegarLoop]: Abstraction has 367 states and 394 transitions.
[2020-11-24 17:41:13,012 INFO  L631         BuchiCegarLoop]: Abstraction has 367 states and 394 transitions.
[2020-11-24 17:41:13,012 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 17:41:13,012 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 367 states and 394 transitions.
[2020-11-24 17:41:13,013 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:41:13,013 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:41:13,013 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:41:13,015 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:41:13,015 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_WhitelistedPausableToken0 := false;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4756]              assume null == 0;
[L4757]  CALL        call this := FreshRefGenerator__success();
[L1659]              havoc newRef;
[L1660]              assume Alloc[newRef] == false;
[L1661]              Alloc[newRef] := true;
[L1662]              assume newRef != null;
[L4757]  RET         call this := FreshRefGenerator__success();
[L4758]              assume now >= 0;
[L4759]              assume DType[this] == TONToken;
[L4760]              assume !revert && gas >= 0;
[L4761]  CALL        call CorralChoice_TONToken(this);
[L4638]              havoc msgsender_MSG;
[L4639]              havoc msgvalue_MSG;
[L4640]              havoc choice;
[L4641]              havoc __ret_0_totalSupply;
[L4642]              havoc _owner_s426;
[L4643]              havoc __ret_0_balanceOf;
[L4644]              havoc _to_s1072;
[L4645]              havoc _value_s1072;
[L4646]              havoc __ret_0_transfer;
[L4647]              havoc __ret_0_owner;
[L4648]              havoc _newOwner_s91;
[L4649]              havoc _owner_s635;
[L4650]              havoc _spender_s635;
[L4651]              havoc __ret_0_allowance;
[L4652]              havoc _from_s1095;
[L4653]              havoc _to_s1095;
[L4654]              havoc _value_s1095;
[L4655]              havoc __ret_0_transferFrom;
[L4656]              havoc _spender_s799;
[L4657]              havoc _value_s799;
[L4658]              havoc __ret_0_approve;
[L4659]              havoc __ret_0_paused;
[L4660]              havoc __ret_0_name;
[L4661]              havoc __ret_0_symbol;
[L4662]              havoc __ret_0_decimals;
[L4663]              havoc _name_s334;
[L4664]              havoc _symbol_s334;
[L4665]              havoc _decimals_s334;
[L4666]              havoc _value_s1155;
[L4667]              havoc _spender_s817;
[L4668]              havoc _addedValue_s817;
[L4669]              havoc success_s817;
[L4670]              havoc _spender_s835;
[L4671]              havoc _subtractedValue_s835;
[L4672]              havoc success_s835;
[L4673]              havoc __ret_0_mintingFinished;
[L4674]              havoc _to_s918;
[L4675]              havoc _amount_s918;
[L4676]              havoc __ret_0_mint;
[L4677]              havoc __ret_0_finishMinting;
[L4678]              havoc __ret_0_whitelistExpiration;
[L4679]              havoc arg1281_s0;
[L4680]              havoc __ret_0_allowedTransactors;
[L4681]              havoc __ret_0_whitelistActive;
[L4682]              havoc _transactor_s1010;
[L4683]              havoc _transactor_s1027;
[L4684]              havoc _expiration_s1051;
[L4685]              havoc arg1282_s0;
[L4686]              havoc __ret_0_callSpenderWhitelist;
[L4687]              havoc _who_s1170;
[L4688]              havoc _value_s1170;
[L4689]              havoc _spender_s1190;
[L4690]              havoc _spender_s1209;
[L4691]              havoc _spender_s1278;
[L4692]              havoc _value_s1278;
[L4693]              havoc _selector_s1278;
[L4694]              havoc _callParams_s1278;
[L4695]              havoc __ret_0_approveAndCallWithSender;
[L4696]              havoc tmpNow;
[L4697]              havoc gas;
[L4698]              assume gas > 4000000 && gas <= 8000000;
[L4699]              tmpNow := now;
[L4700]              havoc now;
[L4701]              assume now > tmpNow;
[L4702]              assume msgsender_MSG != null;
[L4703]  COND FALSE  !(choice == 7)
[L4709]  COND FALSE  !(choice == 6)
[L4715]  COND FALSE  !(choice == 5)
[L4722]  COND FALSE  !(choice == 4)
[L4728]  COND TRUE   choice == 3
[L4729]              gas := gas - 21000;
[L4730]  COND TRUE   gas >= 0
[L4731]              assume _value_s1095 >= 0 && _value_s1095 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4732]              assume msgvalue_MSG == 0;
[L4733]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_WhitelistedPausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s1095 && p1 != _to_s1095) && (p2 != _from_s1095 || p3 != msgsender_MSG)) && _from_s1095 != _to_s1095) && _value_s1095 <= balances_BasicToken[this][_from_s1095]) && _value_s1095 <= allowed_StandardToken[this][_from_s1095][msgsender_MSG]) && balances_BasicToken[this][_to_s1095] + _value_s1095 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s1095 >= 0) && _value_s1095 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s1095] >= 0) && balances_BasicToken[this][_to_s1095] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s1095] >= 0) && balances_BasicToken[this][_from_s1095] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s1095][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s1095][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := true;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := false;
[L3]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND TRUE   __exception
[L874]               __tmp__Balance := Balance;
[L875]               __tmp__DType := DType;
[L876]               __tmp__Alloc := Alloc;
[L877]               __tmp__balance_ADDR := balance_ADDR;
[L878]               __tmp__M_Ref_int := M_Ref_int;
[L879]               __tmp__sum_balances0 := sum_balances0;
[L880]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L881]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L882]               __tmp__sum_allowed1 := sum_allowed1;
[L883]               __tmp__M_Ref_bool := M_Ref_bool;
[L884]               __tmp__sum_allowedTransactors2 := sum_allowedTransactors2;
[L885]               __tmp__sum_callSpenderWhitelist3 := sum_callSpenderWhitelist3;
[L886]               __tmp__Length := Length;
[L887]               __tmp__now := now;
[L888]               __tmp__owner_Ownable := owner_Ownable;
[L889]               __tmp__paused_Pausable := paused_Pausable;
[L890]               __tmp__name_DetailedERC20 := name_DetailedERC20;
[L891]               __tmp__symbol_DetailedERC20 := symbol_DetailedERC20;
[L892]               __tmp__decimals_DetailedERC20 := decimals_DetailedERC20;
[L893]               __tmp__balances_BasicToken := balances_BasicToken;
[L894]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L895]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L896]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L897]               __tmp__whitelistExpiration_WhitelistedPausableToken := whitelistExpiration_WhitelistedPausableToken;
[L898]               __tmp__allowedTransactors_WhitelistedPausableToken := allowedTransactors_WhitelistedPausableToken;
[L899]               __tmp__callSpenderWhitelist_TONToken := callSpenderWhitelist_TONToken;
[L900]   CALL        call __ret_0_ := transferFrom~address~address~uint256_WhitelistedPausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L2148]  CALL        call allowedTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095);
[L3527]  COND TRUE   __tmp__DType[this] == TONToken
[L3528]  CALL        call __var_14 := whitelistActive_WhitelistedPausableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L2084]              __ret_0_ := __tmp__now < __tmp__whitelistExpiration_WhitelistedPausableToken[this];
[L3528]  RET         call __var_14 := whitelistActive_WhitelistedPausableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3529]  COND FALSE  !(revert)
[L3540]  COND TRUE   !((!__var_14 || __tmp__allowedTransactors_WhitelistedPausableToken[this][_from_s981]) || __tmp__allowedTransactors_WhitelistedPausableToken[this][_to_s981])
[L3541]              revert := true;
[L2148]  RET         call allowedTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095);
[L2149]  COND TRUE   revert
[L900]   RET         call __ret_0_ := transferFrom~address~address~uint256_WhitelistedPausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L901]               assume revert || gas < 0;
[L4733]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_WhitelistedPausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L4761]  RET         call CorralChoice_TONToken(this);

Loop:
[L4761]        assume true;

[2020-11-24 17:41:13,017 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:41:13,017 INFO  L82        PathProgramCache]: Analyzing trace with hash 356479208, now seen corresponding path program 1 times
[2020-11-24 17:41:13,018 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:41:13,027 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:41:13,036 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:41:13,092 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:41:13,093 INFO  L82        PathProgramCache]: Analyzing trace with hash 18424, now seen corresponding path program 1 times
[2020-11-24 17:41:13,094 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:41:13,095 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:41:13,095 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:41:13,096 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:41:13,096 INFO  L82        PathProgramCache]: Analyzing trace with hash -1834028047, now seen corresponding path program 1 times
[2020-11-24 17:41:13,097 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:41:13,106 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:41:13,114 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 17:41:13,526 WARN  L188               SmtUtils]: Spent 255.00 ms on a formula simplification. DAG size of input: 193 DAG size of output: 185
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 7027 to 14051
[2020-11-24 17:41:13,823 WARN  L188               SmtUtils]: Spent 266.00 ms on a formula simplification. DAG size of input: 143 DAG size of output: 137
[2020-11-24 17:41:14,034 WARN  L188               SmtUtils]: Spent 209.00 ms on a formula simplification that was a NOOP. DAG size: 322
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 7933 to 15859
[2020-11-24 17:41:14,946 WARN  L188               SmtUtils]: Spent 890.00 ms on a formula simplification. DAG size of input: 264 DAG size of output: 264
[2020-11-24 17:41:16,000 WARN  L188               SmtUtils]: Spent 1.05 s on a formula simplification. DAG size of input: 300 DAG size of output: 285
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 13313 to 26597
Garbage collection #1: 67 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-24 17:41:16,342 WARN  L188               SmtUtils]: Spent 312.00 ms on a formula simplification. DAG size of input: 172 DAG size of output: 166
[2020-11-24 17:41:16,608 WARN  L188               SmtUtils]: Spent 265.00 ms on a formula simplification that was a NOOP. DAG size: 342
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
[2020-11-24 17:41:17,138 WARN  L188               SmtUtils]: Spent 517.00 ms on a formula simplification. DAG size of input: 272 DAG size of output: 269
[2020-11-24 17:41:17,576 WARN  L188               SmtUtils]: Spent 434.00 ms on a formula simplification. DAG size of input: 288 DAG size of output: 283
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
[2020-11-24 17:41:18,644 WARN  L188               SmtUtils]: Spent 1.02 s on a formula simplification. DAG size of input: 323 DAG size of output: 185
[2020-11-24 17:41:18,889 WARN  L188               SmtUtils]: Spent 221.00 ms on a formula simplification that was a NOOP. DAG size: 297
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #9: 19763 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19763 to 39521
[2020-11-24 17:41:19,520 WARN  L188               SmtUtils]: Spent 569.00 ms on a formula simplification. DAG size of input: 282 DAG size of output: 187
[2020-11-24 17:41:20,154 WARN  L188               SmtUtils]: Spent 632.00 ms on a formula simplification. DAG size of input: 301 DAG size of output: 300
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 31699 to 63397
Garbage collection #10: 63397 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 63397 to 113383
Garbage collection #11: 113383 nodes / 0 free / 0.003s / 0.005s total
Resizing node table from 113383 to 163367
Garbage collection #12: 163367 nodes / 0 free / 0.003s / 0.008s total
Resizing node table from 163367 to 213361
Garbage collection #13: 213361 nodes / 0 free / 0.004s / 0.012s total
Resizing node table from 213361 to 263323
Garbage collection #14: 263323 nodes / 0 free / 0.005s / 0.017s total
Resizing node table from 263323 to 313321
[2020-11-24 17:41:25,635 WARN  L188               SmtUtils]: Spent 5.20 s on a formula simplification. DAG size of input: 739 DAG size of output: 297
[2020-11-24 17:41:25,645 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:41:25,649 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:41:25 BasicIcfg
[2020-11-24 17:41:25,649 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 17:41:25,649 INFO  L168              Benchmark]: Toolchain (without parser) took 17087.63 ms. Allocated memory was 1.0 GB in the beginning and 2.5 GB in the end (delta: 1.5 GB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -180.6 MB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
[2020-11-24 17:41:25,650 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 17:41:25,650 INFO  L168              Benchmark]: Boogie Preprocessor took 105.44 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 17:41:25,650 INFO  L168              Benchmark]: UtopiaSpecLang took 65.83 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 17:41:25,650 INFO  L168              Benchmark]: Boogie Printer took 17.12 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 17:41:25,651 INFO  L168              Benchmark]: RCFGBuilder took 1048.29 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 741.9 MB in the end (delta: 171.8 MB). Peak memory consumption was 171.8 MB. Max. memory is 15.3 GB.
[2020-11-24 17:41:25,651 INFO  L168              Benchmark]: UtopiaLTL2Aut took 65.53 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 58.7 MB). Free memory was 741.9 MB in the beginning and 1.0 GB in the end (delta: -284.7 MB). Peak memory consumption was 25.7 MB. Max. memory is 15.3 GB.
[2020-11-24 17:41:25,652 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1989.84 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 165.7 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -43.2 MB). Peak memory consumption was 484.5 MB. Max. memory is 15.3 GB.
[2020-11-24 17:41:25,652 INFO  L168              Benchmark]: BlockEncodingV2 took 128.22 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 999.0 MB in the end (delta: 70.9 MB). Peak memory consumption was 70.9 MB. Max. memory is 15.3 GB.
[2020-11-24 17:41:25,652 INFO  L168              Benchmark]: BuchiAutomizer took 13664.42 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.2 GB). Free memory was 999.0 MB in the beginning and 1.1 GB in the end (delta: -122.3 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-24 17:41:25,655 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3904 locations, 7083 edges
  - StatisticsResult: Encoded RCFG
    3818 locations, 6869 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 105.44 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 65.83 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.12 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 1048.29 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 741.9 MB in the end (delta: 171.8 MB). Peak memory consumption was 171.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 65.53 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 58.7 MB). Free memory was 741.9 MB in the beginning and 1.0 GB in the end (delta: -284.7 MB). Peak memory consumption was 25.7 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1989.84 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 165.7 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -43.2 MB). Peak memory consumption was 484.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 128.22 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 999.0 MB in the end (delta: 70.9 MB). Peak memory consumption was 70.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 13664.42 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.2 GB). Free memory was 999.0 MB in the beginning and 1.1 GB in the end (delta: -122.3 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1609 locations, 2168 edges
  - StatisticsResult: BuchiProgram size
    3904 locations, 7083 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 5 locations. The remainder module has 367 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 13.6s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 13.0s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.1s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 3 MinimizatonAttempts, 26 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 394 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2074 SDtfs, 1664 SDslu, 1755 SDs, 0 SdLazy, 481 SolverSat, 811 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
WhitelistedPausableToken(17).transferFrom~address~address~uint256.gas(3979001)({from : 21, _from : 13, _to : 4, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s1095 && p1 != _to_s1095) && (p2 != _from_s1095 || p3 != msgsender_MSG)) && _from_s1095 != _to_s1095) && _value_s1095 <= balances_BasicToken[this][_from_s1095]) && _value_s1095 <= allowed_StandardToken[this][_from_s1095][msgsender_MSG]) && balances_BasicToken[this][_to_s1095] + _value_s1095 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s1095 >= 0) && _value_s1095 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s1095] >= 0) && balances_BasicToken[this][_to_s1095] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s1095] >= 0) && balances_BasicToken[this][_from_s1095] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s1095][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s1095][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := true;
[L3]                 call_transferFrom_WhitelistedPausableToken0 := false;
[L3]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND TRUE   __exception
[L874]               __tmp__Balance := Balance;
[L875]               __tmp__DType := DType;
[L876]               __tmp__Alloc := Alloc;
[L877]               __tmp__balance_ADDR := balance_ADDR;
[L878]               __tmp__M_Ref_int := M_Ref_int;
[L879]               __tmp__sum_balances0 := sum_balances0;
[L880]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L881]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L882]               __tmp__sum_allowed1 := sum_allowed1;
[L883]               __tmp__M_Ref_bool := M_Ref_bool;
[L884]               __tmp__sum_allowedTransactors2 := sum_allowedTransactors2;
[L885]               __tmp__sum_callSpenderWhitelist3 := sum_callSpenderWhitelist3;
[L886]               __tmp__Length := Length;
[L887]               __tmp__now := now;
[L888]               __tmp__owner_Ownable := owner_Ownable;
[L889]               __tmp__paused_Pausable := paused_Pausable;
[L890]               __tmp__name_DetailedERC20 := name_DetailedERC20;
[L891]               __tmp__symbol_DetailedERC20 := symbol_DetailedERC20;
[L892]               __tmp__decimals_DetailedERC20 := decimals_DetailedERC20;
[L893]               __tmp__balances_BasicToken := balances_BasicToken;
[L894]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L895]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L896]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L897]               __tmp__whitelistExpiration_WhitelistedPausableToken := whitelistExpiration_WhitelistedPausableToken;
[L898]               __tmp__allowedTransactors_WhitelistedPausableToken := allowedTransactors_WhitelistedPausableToken;
[L899]               __tmp__callSpenderWhitelist_TONToken := callSpenderWhitelist_TONToken;
[L900]   CALL        call __ret_0_ := transferFrom~address~address~uint256_WhitelistedPausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L2148]  CALL        call allowedTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095);
[L3527]  COND TRUE   __tmp__DType[this] == TONToken
[L3528]  CALL        call __var_14 := whitelistActive_WhitelistedPausableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L2084]              __ret_0_ := __tmp__now < __tmp__whitelistExpiration_WhitelistedPausableToken[this];
[L3528]  RET         call __var_14 := whitelistActive_WhitelistedPausableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3529]  COND FALSE  !(revert)
[L3540]  COND TRUE   !((!__var_14 || __tmp__allowedTransactors_WhitelistedPausableToken[this][_from_s981]) || __tmp__allowedTransactors_WhitelistedPausableToken[this][_to_s981])
[L3541]              revert := true;
[L2148]  RET         call allowedTransfer_pre__fail(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095);
[L2149]  COND TRUE   revert
[L900]   RET         call __ret_0_ := transferFrom~address~address~uint256_WhitelistedPausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);
[L901]               assume revert || gas < 0;
[L4733]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_WhitelistedPausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s1095, _to_s1095, _value_s1095);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
