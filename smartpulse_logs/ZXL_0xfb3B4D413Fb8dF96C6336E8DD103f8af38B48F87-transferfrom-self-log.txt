This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 18:12:30,837 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 18:12:30,838 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 18:12:30,845 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 18:12:30,845 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 18:12:30,846 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 18:12:30,846 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 18:12:30,847 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 18:12:30,848 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 18:12:30,849 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 18:12:30,849 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 18:12:30,849 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 18:12:30,850 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 18:12:30,851 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 18:12:30,852 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 18:12:30,853 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 18:12:30,854 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 18:12:30,856 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 18:12:30,859 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 18:12:30,861 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 18:12:30,862 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 18:12:30,864 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 18:12:30,865 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 18:12:30,865 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 18:12:30,866 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 18:12:30,866 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 18:12:30,866 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 18:12:30,867 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 18:12:30,867 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 18:12:30,867 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 18:12:30,868 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 18:12:30,868 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 18:12:30,869 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 18:12:30,869 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 18:12:30,870 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 18:12:30,870 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 18:12:30,871 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 18:12:30,871 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 18:12:30,871 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 18:12:30,872 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 18:12:30,873 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 18:12:30,873 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 18:12:30,887 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 18:12:30,887 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 18:12:30,888 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 18:12:30,888 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 18:12:30,888 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 18:12:30,888 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 18:12:30,888 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 18:12:30,888 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 18:12:30,889 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 18:12:30,889 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 18:12:30,889 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 18:12:30,890 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 18:12:30,890 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 18:12:30,890 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 18:12:30,905 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 18:12:30,915 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 18:12:30,918 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 18:12:30,920 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 18:12:30,921 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 18:12:30,921 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl
[2020-11-24 18:12:30,922 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl'
[2020-11-24 18:12:30,970 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 18:12:30,970 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 18:12:30,971 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 18:12:30,971 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 18:12:30,971 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 18:12:30,981 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/1) ...
[2020-11-24 18:12:30,982 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/1) ...
[2020-11-24 18:12:30,994 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/1) ...
[2020-11-24 18:12:30,994 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/1) ...
[2020-11-24 18:12:31,006 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/1) ...
[2020-11-24 18:12:31,011 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/1) ...
[2020-11-24 18:12:31,014 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/1) ...
[2020-11-24 18:12:31,018 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 18:12:31,018 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 18:12:31,018 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 18:12:31,020 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 18:12:31,024 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/1) ...
[2020-11-24 18:12:31,037 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ZXL.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this]) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-24 18:12:31,043 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ZXL.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this]) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-24 18:12:31,050 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ZXL.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this]) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-24 18:12:31,056 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s200 || p2!=msg.sender ) && _from_s200==_to_s200 ) && _value_s200<=balanceOf_ZXL[this][_from_s200] ) && _value_s200<=allowance_ZXL[this][_from_s200][msg.sender] ) && _value_s200>=0 ) && _value_s200<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ZXL[this][_to_s200]>=0 ) && balanceOf_ZXL[this][_to_s200]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ZXL[this][_from_s200]>=0 ) && balanceOf_ZXL[this][_from_s200]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_ZXL[this][_from_s200][msg.sender]>=0 ) && allowance_ZXL[this][_from_s200][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 18:12:31,059 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( success_s200==true && allowance_ZXL[this][_from_s200][msg.sender]==( ( old(allowance_ZXL[this][_from_s200][msg.sender]) ) - _value_s200 ) ) && totalSupply_ZXL[this]==( old(totalSupply_ZXL[this]) ) ) && balanceOf_ZXL[this]==( old(balanceOf_ZXL[this]) ) ) && allowance_ZXL[this][p1][p2]==( old(allowance_ZXL[this][p1][p2]) ) ) && name_ZXL[this]==( old(name_ZXL[this]) ) ) && symbol_ZXL[this]==( old(symbol_ZXL[this]) ) ) && decimals_ZXL[this]==( old(decimals_ZXL[this]) ) ) && owner_ZXL[this]==( old(owner_ZXL[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s200,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ZXL>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]]
[2020-11-24 18:12:31,062 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ZXL.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this]) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-24 18:12:31,062 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ZXL0) ==> ( <>AP(success_transferFrom_ZXL0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 18:12:31,066 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:12:31 PropertyContainer
[2020-11-24 18:12:31,066 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 18:12:31,066 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 18:12:31,066 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 18:12:31,066 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 18:12:31,067 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/2) ...
[2020-11-24 18:12:31,067 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 18:12:31,067 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 18:12:31,073 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:12:31" (2/2) ...
[2020-11-24 18:12:31,073 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 18:12:31,074 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 18:12:31,074 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 18:12:31,074 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 18:12:31,075 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/2) ...
[2020-11-24 18:12:31,125 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 18:12:31,125 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZXL__success
[2020-11-24 18:12:31,125 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL
[2020-11-24 18:12:31,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL
[2020-11-24 18:12:31,125 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL
[2020-11-24 18:12:31,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL
[2020-11-24 18:12:31,125 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL
[2020-11-24 18:12:31,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL
[2020-11-24 18:12:31,125 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL
[2020-11-24 18:12:31,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL
[2020-11-24 18:12:31,125 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL
[2020-11-24 18:12:31,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL
[2020-11-24 18:12:31,126 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL
[2020-11-24 18:12:31,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL
[2020-11-24 18:12:31,126 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 18:12:31,126 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 18:12:31,126 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 18:12:31,126 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 18:12:31,126 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 18:12:31,126 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ZXL
[2020-11-24 18:12:31,126 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZXL__fail
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL__success
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL__fail
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL__success
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL__fail
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL__success
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL__fail
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL__success
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL__fail
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL__success
[2020-11-24 18:12:31,127 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL__fail
[2020-11-24 18:12:31,128 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL__success
[2020-11-24 18:12:31,128 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL__fail
[2020-11-24 18:12:31,128 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 18:12:31,128 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 18:12:31,128 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 18:12:31,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 18:12:31,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 18:12:31,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZXL__fail
[2020-11-24 18:12:31,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZXL__success
[2020-11-24 18:12:31,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL__fail
[2020-11-24 18:12:31,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL__success
[2020-11-24 18:12:31,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL__fail
[2020-11-24 18:12:31,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL__success
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL__fail
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL__success
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL__fail
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL__success
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL__fail
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL__success
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL__fail
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL__success
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 18:12:31,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 18:12:31,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 18:12:31,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 18:12:31,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 18:12:31,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ZXL
[2020-11-24 18:12:31,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 18:12:31,130 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 18:12:31,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 18:12:31,298 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:12:31,379 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:12:31,379 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:12:31,379 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:12:31,477 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 18:12:31,477 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-24 18:12:31,478 INFO  L202        PluginConnector]: Adding new model ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:12:31 BoogieIcfgContainer
[2020-11-24 18:12:31,478 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:12:31" (2/2) ...
[2020-11-24 18:12:31,478 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 18:12:31,479 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7a6b40fe and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:12:31, skipping insertion in model container
[2020-11-24 18:12:31,479 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 18:12:31,479 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 18:12:31,479 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 18:12:31,480 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 18:12:31,481 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/3) ...
[2020-11-24 18:12:31,481 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2830f86 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:12:31, skipping insertion in model container
[2020-11-24 18:12:31,481 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:12:31" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 18:12:31,514 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:12:31 NWAContainer
[2020-11-24 18:12:31,514 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 18:12:31,515 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 18:12:31,515 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 18:12:31,515 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 18:12:31,516 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:12:31" (3/4) ...
[2020-11-24 18:12:31,517 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@50695a47 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:12:31, skipping insertion in model container
[2020-11-24 18:12:31,517 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:12:31" (4/4) ...
[2020-11-24 18:12:31,520 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 18:12:31,522 INFO  L110   BuchiProductObserver]: Initial RCFG 435 locations, 522 edges
[2020-11-24 18:12:31,522 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 18:12:31,532 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 18:12:32,294 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 18:12:32,296 INFO  L110   BuchiProductObserver]: BuchiProgram size 1002 locations, 1676 edges
[2020-11-24 18:12:32,297 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:12:32 BoogieIcfgContainer
[2020-11-24 18:12:32,297 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 18:12:32,297 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 18:12:32,297 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 18:12:32,299 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 18:12:32,300 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:12:32" (1/1) ...
[2020-11-24 18:12:32,340 INFO  L313           BlockEncoder]: Initial Icfg 1002 locations, 1676 edges
[2020-11-24 18:12:32,341 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 18:12:32,341 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 18:12:32,342 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 18:12:32,342 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 18:12:32,349 INFO  L70    emoveInfeasibleEdges]: Removed 21 edges and 7 locations because of local infeasibility
[2020-11-24 18:12:32,353 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 18:12:32,358 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 18:12:32,360 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 18:12:32,361 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 18:12:32,362 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 18:12:32,364 INFO  L313           BlockEncoder]: Encoded RCFG 988 locations, 1645 edges
[2020-11-24 18:12:32,364 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:12:32 BasicIcfg
[2020-11-24 18:12:32,364 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 18:12:32,365 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 18:12:32,365 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 18:12:32,367 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 18:12:32,368 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:12:32,368 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:12:30" (1/6) ...
[2020-11-24 18:12:32,369 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44f6e4a6 and model type ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:12:32, skipping insertion in model container
[2020-11-24 18:12:32,369 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:12:32,369 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:12:31" (2/6) ...
[2020-11-24 18:12:32,369 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44f6e4a6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:12:32, skipping insertion in model container
[2020-11-24 18:12:32,369 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:12:32,369 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:12:31" (3/6) ...
[2020-11-24 18:12:32,370 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44f6e4a6 and model type ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:12:32, skipping insertion in model container
[2020-11-24 18:12:32,370 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:12:32,370 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:12:31" (4/6) ...
[2020-11-24 18:12:32,370 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44f6e4a6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:12:32, skipping insertion in model container
[2020-11-24 18:12:32,370 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:12:32,370 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:12:32" (5/6) ...
[2020-11-24 18:12:32,370 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@44f6e4a6 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 06:12:32, skipping insertion in model container
[2020-11-24 18:12:32,370 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:12:32,370 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:12:32" (6/6) ...
[2020-11-24 18:12:32,372 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-self.bpl_BEv2
[2020-11-24 18:12:32,410 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 18:12:32,411 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 18:12:32,411 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 18:12:32,411 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 18:12:32,411 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 18:12:32,411 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 18:12:32,411 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 18:12:32,411 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 18:12:32,412 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 18:12:32,427 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 988 states.
[2020-11-24 18:12:32,464 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:12:32,464 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:12:32,464 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:12:32,473 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:12:32,473 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 18:12:32,473 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 18:12:32,474 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 988 states.
[2020-11-24 18:12:32,482 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:12:32,482 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:12:32,482 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:12:32,483 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:12:32,484 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1248]              assume null == 0;
[L1249]  CALL        call this := FreshRefGenerator__success();
[L575]               havoc newRef;
[L576]               assume Alloc[newRef] == false;
[L577]               Alloc[newRef] := true;
[L578]               assume newRef != null;
[L1249]  RET         call this := FreshRefGenerator__success();
[L1250]              assume now >= 0;
[L1251]              assume DType[this] == ZXL;
[L1252]              assume !revert && gas >= 0;
[L1253]  CALL        call CorralChoice_ZXL(this);
[L1164]              havoc msgsender_MSG;
[L1165]              havoc msgvalue_MSG;
[L1166]              havoc choice;
[L1167]              havoc __ret_0_name;
[L1168]              havoc __ret_0_symbol;
[L1169]              havoc __ret_0_decimals;
[L1170]              havoc __ret_0_totalSupply;
[L1171]              havoc arg353_s0;
[L1172]              havoc __ret_0_balanceOf;
[L1173]              havoc arg354_s0;
[L1174]              havoc arg355_s0;
[L1175]              havoc __ret_0_allowance;
[L1176]              havoc _to_s160;
[L1177]              havoc _value_s160;
[L1178]              havoc _from_s200;
[L1179]              havoc _to_s200;
[L1180]              havoc _value_s200;
[L1181]              havoc success_s200;
[L1182]              havoc _spender_s221;
[L1183]              havoc _value_s221;
[L1184]              havoc success_s221;
[L1185]              havoc _spender_s259;
[L1186]              havoc _value_s259;
[L1187]              havoc _extraData_s259;
[L1188]              havoc success_s259;
[L1189]              havoc _value_s295;
[L1190]              havoc success_s295;
[L1191]              havoc _from_s350;
[L1192]              havoc _value_s350;
[L1193]              havoc success_s350;
[L1194]              havoc tmpNow;
[L1195]              havoc gas;
[L1196]              assume gas > 4000000 && gas <= 8000000;
[L1197]              tmpNow := now;
[L1198]              havoc now;
[L1199]              assume now > tmpNow;
[L1200]              assume msgsender_MSG != null;
[L1201]  COND TRUE   choice == 6
[L1202]              gas := gas - 21000;
[L1203]  COND FALSE  !(gas >= 0)
[L1253]  RET         call CorralChoice_ZXL(this);

Loop:
[L1253]        assume true;

[2020-11-24 18:12:32,500 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:12:32,500 INFO  L82        PathProgramCache]: Analyzing trace with hash 795031319, now seen corresponding path program 1 times
[2020-11-24 18:12:32,505 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:12:32,526 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:12:32,581 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:12:32,583 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:12:32,584 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:12:32,587 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:12:32,599 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:12:32,599 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:12:32,601 INFO  L87              Difference]: Start difference. First operand 988 states. Second operand 5 states.
[2020-11-24 18:12:32,840 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:12:32,841 INFO  L93              Difference]: Finished difference Result 506 states and 554 transitions.
[2020-11-24 18:12:32,841 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:12:32,842 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 506 states and 554 transitions.
[2020-11-24 18:12:32,847 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:12:32,852 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 506 states to 172 states and 183 transitions.
[2020-11-24 18:12:32,853 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 18:12:32,853 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 172
[2020-11-24 18:12:32,854 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 172 states and 183 transitions.
[2020-11-24 18:12:32,855 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:12:32,855 INFO  L728         BuchiCegarLoop]: Abstraction has 172 states and 183 transitions.
[2020-11-24 18:12:32,870 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 172 states and 183 transitions.
[2020-11-24 18:12:32,882 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 172 to 172.
[2020-11-24 18:12:32,882 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 172 states.
[2020-11-24 18:12:32,883 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 172 states to 172 states and 183 transitions.
[2020-11-24 18:12:32,884 INFO  L751         BuchiCegarLoop]: Abstraction has 172 states and 183 transitions.
[2020-11-24 18:12:32,884 INFO  L631         BuchiCegarLoop]: Abstraction has 172 states and 183 transitions.
[2020-11-24 18:12:32,884 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 18:12:32,884 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 172 states and 183 transitions.
[2020-11-24 18:12:32,885 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:12:32,886 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:12:32,886 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:12:32,887 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:12:32,887 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1248]              assume null == 0;
[L1249]  CALL        call this := FreshRefGenerator__success();
[L575]               havoc newRef;
[L576]               assume Alloc[newRef] == false;
[L577]               Alloc[newRef] := true;
[L578]               assume newRef != null;
[L1249]  RET         call this := FreshRefGenerator__success();
[L1250]              assume now >= 0;
[L1251]              assume DType[this] == ZXL;
[L1252]              assume !revert && gas >= 0;
[L1253]  CALL        call CorralChoice_ZXL(this);
[L1164]              havoc msgsender_MSG;
[L1165]              havoc msgvalue_MSG;
[L1166]              havoc choice;
[L1167]              havoc __ret_0_name;
[L1168]              havoc __ret_0_symbol;
[L1169]              havoc __ret_0_decimals;
[L1170]              havoc __ret_0_totalSupply;
[L1171]              havoc arg353_s0;
[L1172]              havoc __ret_0_balanceOf;
[L1173]              havoc arg354_s0;
[L1174]              havoc arg355_s0;
[L1175]              havoc __ret_0_allowance;
[L1176]              havoc _to_s160;
[L1177]              havoc _value_s160;
[L1178]              havoc _from_s200;
[L1179]              havoc _to_s200;
[L1180]              havoc _value_s200;
[L1181]              havoc success_s200;
[L1182]              havoc _spender_s221;
[L1183]              havoc _value_s221;
[L1184]              havoc success_s221;
[L1185]              havoc _spender_s259;
[L1186]              havoc _value_s259;
[L1187]              havoc _extraData_s259;
[L1188]              havoc success_s259;
[L1189]              havoc _value_s295;
[L1190]              havoc success_s295;
[L1191]              havoc _from_s350;
[L1192]              havoc _value_s350;
[L1193]              havoc success_s350;
[L1194]              havoc tmpNow;
[L1195]              havoc gas;
[L1196]              assume gas > 4000000 && gas <= 8000000;
[L1197]              tmpNow := now;
[L1198]              havoc now;
[L1199]              assume now > tmpNow;
[L1200]              assume msgsender_MSG != null;
[L1201]  COND FALSE  !(choice == 6)
[L1207]  COND FALSE  !(choice == 5)
[L1213]  COND FALSE  !(choice == 4)
[L1219]  COND FALSE  !(choice == 3)
[L1226]  COND TRUE   choice == 2
[L1227]              gas := gas - 21000;
[L1228]  COND TRUE   gas >= 0
[L1229]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1230]              assume msgvalue_MSG == 0;
[L1231]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s200 || p2 != msgsender_MSG) && _from_s200 == _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L131]               havoc __exception;
[L132]               revert := false;
[L133]   COND FALSE  !(__exception)
[L155]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L670]   COND TRUE   !(_value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG])
[L671]               revert := true;
[L155]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L156]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s200 == true && allowance_ZXL[this][_from_s200][msgsender_MSG] == old(allowance_ZXL[this][_from_s200][msgsender_MSG]) - _value_s200) && totalSupply_ZXL[this] == old(totalSupply_ZXL[this])) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this])) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2])) && name_ZXL[this] == old(name_ZXL[this])) && symbol_ZXL[this] == old(symbol_ZXL[this])) && decimals_ZXL[this] == old(decimals_ZXL[this])) && owner_ZXL[this] == old(owner_ZXL[this]));
[L3]                 revert := revert_hold;
[L1231]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1253]  RET         call CorralChoice_ZXL(this);

Loop:
[L1253]        assume true;

[2020-11-24 18:12:32,890 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:12:32,890 INFO  L82        PathProgramCache]: Analyzing trace with hash -2041179638, now seen corresponding path program 1 times
[2020-11-24 18:12:32,891 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:12:32,902 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:12:32,918 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:12:32,918 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:12:32,919 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:12:32,920 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:12:32,921 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:12:32,921 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:12:32,921 INFO  L87              Difference]: Start difference. First operand 172 states and 183 transitions. cyclomatic complexity: 12 Second operand 3 states.
[2020-11-24 18:12:32,932 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:12:32,932 INFO  L93              Difference]: Finished difference Result 195 states and 205 transitions.
[2020-11-24 18:12:32,932 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:12:32,933 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 195 states and 205 transitions.
[2020-11-24 18:12:32,934 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:12:32,934 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 195 states to 183 states and 189 transitions.
[2020-11-24 18:12:32,935 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 183
[2020-11-24 18:12:32,935 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 183
[2020-11-24 18:12:32,935 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 183 states and 189 transitions.
[2020-11-24 18:12:32,935 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:12:32,935 INFO  L728         BuchiCegarLoop]: Abstraction has 183 states and 189 transitions.
[2020-11-24 18:12:32,936 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 183 states and 189 transitions.
[2020-11-24 18:12:32,939 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 183 to 172.
[2020-11-24 18:12:32,939 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 172 states.
[2020-11-24 18:12:32,939 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 172 states to 172 states and 178 transitions.
[2020-11-24 18:12:32,939 INFO  L751         BuchiCegarLoop]: Abstraction has 172 states and 178 transitions.
[2020-11-24 18:12:32,939 INFO  L631         BuchiCegarLoop]: Abstraction has 172 states and 178 transitions.
[2020-11-24 18:12:32,939 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 18:12:32,939 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 172 states and 178 transitions.
[2020-11-24 18:12:32,940 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:12:32,940 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:12:32,940 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:12:32,941 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:12:32,941 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1248]              assume null == 0;
[L1249]  CALL        call this := FreshRefGenerator__success();
[L575]               havoc newRef;
[L576]               assume Alloc[newRef] == false;
[L577]               Alloc[newRef] := true;
[L578]               assume newRef != null;
[L1249]  RET         call this := FreshRefGenerator__success();
[L1250]              assume now >= 0;
[L1251]              assume DType[this] == ZXL;
[L1252]              assume !revert && gas >= 0;
[L1253]  CALL        call CorralChoice_ZXL(this);
[L1164]              havoc msgsender_MSG;
[L1165]              havoc msgvalue_MSG;
[L1166]              havoc choice;
[L1167]              havoc __ret_0_name;
[L1168]              havoc __ret_0_symbol;
[L1169]              havoc __ret_0_decimals;
[L1170]              havoc __ret_0_totalSupply;
[L1171]              havoc arg353_s0;
[L1172]              havoc __ret_0_balanceOf;
[L1173]              havoc arg354_s0;
[L1174]              havoc arg355_s0;
[L1175]              havoc __ret_0_allowance;
[L1176]              havoc _to_s160;
[L1177]              havoc _value_s160;
[L1178]              havoc _from_s200;
[L1179]              havoc _to_s200;
[L1180]              havoc _value_s200;
[L1181]              havoc success_s200;
[L1182]              havoc _spender_s221;
[L1183]              havoc _value_s221;
[L1184]              havoc success_s221;
[L1185]              havoc _spender_s259;
[L1186]              havoc _value_s259;
[L1187]              havoc _extraData_s259;
[L1188]              havoc success_s259;
[L1189]              havoc _value_s295;
[L1190]              havoc success_s295;
[L1191]              havoc _from_s350;
[L1192]              havoc _value_s350;
[L1193]              havoc success_s350;
[L1194]              havoc tmpNow;
[L1195]              havoc gas;
[L1196]              assume gas > 4000000 && gas <= 8000000;
[L1197]              tmpNow := now;
[L1198]              havoc now;
[L1199]              assume now > tmpNow;
[L1200]              assume msgsender_MSG != null;
[L1201]  COND FALSE  !(choice == 6)
[L1207]  COND FALSE  !(choice == 5)
[L1213]  COND FALSE  !(choice == 4)
[L1219]  COND FALSE  !(choice == 3)
[L1226]  COND TRUE   choice == 2
[L1227]              gas := gas - 21000;
[L1228]  COND TRUE   gas >= 0
[L1229]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1230]              assume msgvalue_MSG == 0;
[L1231]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s200 || p2 != msgsender_MSG) && _from_s200 == _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L131]               havoc __exception;
[L132]               revert := false;
[L133]   COND TRUE   __exception
[L134]               __tmp__Balance := Balance;
[L135]               __tmp__DType := DType;
[L136]               __tmp__Alloc := Alloc;
[L137]               __tmp__balance_ADDR := balance_ADDR;
[L138]               __tmp__M_Ref_int := M_Ref_int;
[L139]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L140]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L141]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L142]               __tmp__sum_allowance1 := sum_allowance1;
[L143]               __tmp__Length := Length;
[L144]               __tmp__now := now;
[L145]               __tmp__name_ZXL := name_ZXL;
[L146]               __tmp__symbol_ZXL := symbol_ZXL;
[L147]               __tmp__decimals_ZXL := decimals_ZXL;
[L148]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L149]               __tmp__owner_ZXL := owner_ZXL;
[L150]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L151]               __tmp__allowance_ZXL := allowance_ZXL;
[L152]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L653]   COND TRUE   !(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG])
[L654]               revert := true;
[L152]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L153]               assume revert || gas < 0;
[L1231]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1253]  RET         call CorralChoice_ZXL(this);

Loop:
[L1253]        assume true;

[2020-11-24 18:12:32,942 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:12:32,943 INFO  L82        PathProgramCache]: Analyzing trace with hash 644289047, now seen corresponding path program 1 times
[2020-11-24 18:12:32,943 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:12:32,951 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:12:32,981 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:12:32,981 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:12:32,981 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 18:12:32,981 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:12:32,982 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 18:12:32,982 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 18:12:32,982 INFO  L87              Difference]: Start difference. First operand 172 states and 178 transitions. cyclomatic complexity: 7 Second operand 6 states.
[2020-11-24 18:12:33,043 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:12:33,043 INFO  L93              Difference]: Finished difference Result 181 states and 186 transitions.
[2020-11-24 18:12:33,043 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 18:12:33,043 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 181 states and 186 transitions.
[2020-11-24 18:12:33,044 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:12:33,045 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 181 states to 178 states and 183 transitions.
[2020-11-24 18:12:33,045 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 178
[2020-11-24 18:12:33,045 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 178
[2020-11-24 18:12:33,045 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 178 states and 183 transitions.
[2020-11-24 18:12:33,046 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:12:33,046 INFO  L728         BuchiCegarLoop]: Abstraction has 178 states and 183 transitions.
[2020-11-24 18:12:33,046 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 178 states and 183 transitions.
[2020-11-24 18:12:33,049 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 178 to 171.
[2020-11-24 18:12:33,049 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 171 states.
[2020-11-24 18:12:33,049 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 171 states to 171 states and 176 transitions.
[2020-11-24 18:12:33,049 INFO  L751         BuchiCegarLoop]: Abstraction has 171 states and 176 transitions.
[2020-11-24 18:12:33,049 INFO  L631         BuchiCegarLoop]: Abstraction has 171 states and 176 transitions.
[2020-11-24 18:12:33,049 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 18:12:33,049 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 171 states and 176 transitions.
[2020-11-24 18:12:33,050 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:12:33,050 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:12:33,050 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:12:33,051 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:12:33,051 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1248]              assume null == 0;
[L1249]  CALL        call this := FreshRefGenerator__success();
[L575]               havoc newRef;
[L576]               assume Alloc[newRef] == false;
[L577]               Alloc[newRef] := true;
[L578]               assume newRef != null;
[L1249]  RET         call this := FreshRefGenerator__success();
[L1250]              assume now >= 0;
[L1251]              assume DType[this] == ZXL;
[L1252]              assume !revert && gas >= 0;
[L1253]  CALL        call CorralChoice_ZXL(this);
[L1164]              havoc msgsender_MSG;
[L1165]              havoc msgvalue_MSG;
[L1166]              havoc choice;
[L1167]              havoc __ret_0_name;
[L1168]              havoc __ret_0_symbol;
[L1169]              havoc __ret_0_decimals;
[L1170]              havoc __ret_0_totalSupply;
[L1171]              havoc arg353_s0;
[L1172]              havoc __ret_0_balanceOf;
[L1173]              havoc arg354_s0;
[L1174]              havoc arg355_s0;
[L1175]              havoc __ret_0_allowance;
[L1176]              havoc _to_s160;
[L1177]              havoc _value_s160;
[L1178]              havoc _from_s200;
[L1179]              havoc _to_s200;
[L1180]              havoc _value_s200;
[L1181]              havoc success_s200;
[L1182]              havoc _spender_s221;
[L1183]              havoc _value_s221;
[L1184]              havoc success_s221;
[L1185]              havoc _spender_s259;
[L1186]              havoc _value_s259;
[L1187]              havoc _extraData_s259;
[L1188]              havoc success_s259;
[L1189]              havoc _value_s295;
[L1190]              havoc success_s295;
[L1191]              havoc _from_s350;
[L1192]              havoc _value_s350;
[L1193]              havoc success_s350;
[L1194]              havoc tmpNow;
[L1195]              havoc gas;
[L1196]              assume gas > 4000000 && gas <= 8000000;
[L1197]              tmpNow := now;
[L1198]              havoc now;
[L1199]              assume now > tmpNow;
[L1200]              assume msgsender_MSG != null;
[L1201]  COND FALSE  !(choice == 6)
[L1207]  COND FALSE  !(choice == 5)
[L1213]  COND FALSE  !(choice == 4)
[L1219]  COND FALSE  !(choice == 3)
[L1226]  COND TRUE   choice == 2
[L1227]              gas := gas - 21000;
[L1228]  COND TRUE   gas >= 0
[L1229]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1230]              assume msgvalue_MSG == 0;
[L1231]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s200 || p2 != msgsender_MSG) && _from_s200 == _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L131]               havoc __exception;
[L132]               revert := false;
[L133]   COND FALSE  !(__exception)
[L155]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L670]   COND FALSE  !(!(_value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L674]               sum_allowance1[_from_s200] := sum_allowance1[_from_s200] - allowance_ZXL[this][_from_s200][msgsender_MSG];
[L675]               allowance_ZXL[this][_from_s200][msgsender_MSG] := (allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]               sum_allowance1[_from_s200] := sum_allowance1[_from_s200] + allowance_ZXL[this][_from_s200][msgsender_MSG];
[L677]   CALL        call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L611]               __var_1 := null;
[L612]   COND FALSE  !(!(_to_s145 != null))
[L616]   COND FALSE  !(!(balanceOf_ZXL[this][_from_s145] >= _value_s145))
[L620]   COND FALSE  !(!((balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_ZXL[this][_to_s145]))
[L624]               previousBalances_s145 := (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L625]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_from_s145];
[L626]               balanceOf_ZXL[this][_from_s145] := (balanceOf_ZXL[this][_from_s145] - _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L627]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_from_s145];
[L628]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_to_s145];
[L629]               balanceOf_ZXL[this][_to_s145] := (balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L630]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_to_s145];
[L631]               assert { :EventEmitted "Transfer_ZXL" } true;
[L632]               assert (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s145;
[L677]   RET         call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L678]   COND FALSE  !(revert)
[L681]               success_s200 := true;
[L155]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L156]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s200 == true && allowance_ZXL[this][_from_s200][msgsender_MSG] == old(allowance_ZXL[this][_from_s200][msgsender_MSG]) - _value_s200) && totalSupply_ZXL[this] == old(totalSupply_ZXL[this])) && balanceOf_ZXL[this] == old(balanceOf_ZXL[this])) && allowance_ZXL[this][p1][p2] == old(allowance_ZXL[this][p1][p2])) && name_ZXL[this] == old(name_ZXL[this])) && symbol_ZXL[this] == old(symbol_ZXL[this])) && decimals_ZXL[this] == old(decimals_ZXL[this])) && owner_ZXL[this] == old(owner_ZXL[this]));
[L3]                 revert := revert_hold;
[L1231]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1253]  RET         call CorralChoice_ZXL(this);

Loop:
[L1253]        assume true;

[2020-11-24 18:12:33,053 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:12:33,053 INFO  L82        PathProgramCache]: Analyzing trace with hash 65635983, now seen corresponding path program 1 times
[2020-11-24 18:12:33,053 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:12:33,078 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:12:33,358 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:12:33,358 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:12:33,358 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-24 18:12:33,359 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:12:33,359 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 18:12:33,359 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=31, Invalid=151, Unknown=0, NotChecked=0, Total=182
[2020-11-24 18:12:33,360 INFO  L87              Difference]: Start difference. First operand 171 states and 176 transitions. cyclomatic complexity: 6 Second operand 14 states.
[2020-11-24 18:12:33,663 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:12:33,664 INFO  L93              Difference]: Finished difference Result 170 states and 174 transitions.
[2020-11-24 18:12:33,664 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 18:12:33,664 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 170 states and 174 transitions.
[2020-11-24 18:12:33,665 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:12:33,665 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 170 states to 137 states and 141 transitions.
[2020-11-24 18:12:33,665 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 137
[2020-11-24 18:12:33,666 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 137
[2020-11-24 18:12:33,666 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 137 states and 141 transitions.
[2020-11-24 18:12:33,666 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:12:33,666 INFO  L728         BuchiCegarLoop]: Abstraction has 137 states and 141 transitions.
[2020-11-24 18:12:33,666 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 137 states and 141 transitions.
[2020-11-24 18:12:33,669 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 137 to 137.
[2020-11-24 18:12:33,669 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 137 states.
[2020-11-24 18:12:33,669 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 137 states to 137 states and 141 transitions.
[2020-11-24 18:12:33,669 INFO  L751         BuchiCegarLoop]: Abstraction has 137 states and 141 transitions.
[2020-11-24 18:12:33,669 INFO  L631         BuchiCegarLoop]: Abstraction has 137 states and 141 transitions.
[2020-11-24 18:12:33,669 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 18:12:33,669 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 137 states and 141 transitions.
[2020-11-24 18:12:33,670 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:12:33,670 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:12:33,670 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:12:33,671 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:12:33,671 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1248]              assume null == 0;
[L1249]  CALL        call this := FreshRefGenerator__success();
[L575]               havoc newRef;
[L576]               assume Alloc[newRef] == false;
[L577]               Alloc[newRef] := true;
[L578]               assume newRef != null;
[L1249]  RET         call this := FreshRefGenerator__success();
[L1250]              assume now >= 0;
[L1251]              assume DType[this] == ZXL;
[L1252]              assume !revert && gas >= 0;
[L1253]  CALL        call CorralChoice_ZXL(this);
[L1164]              havoc msgsender_MSG;
[L1165]              havoc msgvalue_MSG;
[L1166]              havoc choice;
[L1167]              havoc __ret_0_name;
[L1168]              havoc __ret_0_symbol;
[L1169]              havoc __ret_0_decimals;
[L1170]              havoc __ret_0_totalSupply;
[L1171]              havoc arg353_s0;
[L1172]              havoc __ret_0_balanceOf;
[L1173]              havoc arg354_s0;
[L1174]              havoc arg355_s0;
[L1175]              havoc __ret_0_allowance;
[L1176]              havoc _to_s160;
[L1177]              havoc _value_s160;
[L1178]              havoc _from_s200;
[L1179]              havoc _to_s200;
[L1180]              havoc _value_s200;
[L1181]              havoc success_s200;
[L1182]              havoc _spender_s221;
[L1183]              havoc _value_s221;
[L1184]              havoc success_s221;
[L1185]              havoc _spender_s259;
[L1186]              havoc _value_s259;
[L1187]              havoc _extraData_s259;
[L1188]              havoc success_s259;
[L1189]              havoc _value_s295;
[L1190]              havoc success_s295;
[L1191]              havoc _from_s350;
[L1192]              havoc _value_s350;
[L1193]              havoc success_s350;
[L1194]              havoc tmpNow;
[L1195]              havoc gas;
[L1196]              assume gas > 4000000 && gas <= 8000000;
[L1197]              tmpNow := now;
[L1198]              havoc now;
[L1199]              assume now > tmpNow;
[L1200]              assume msgsender_MSG != null;
[L1201]  COND FALSE  !(choice == 6)
[L1207]  COND FALSE  !(choice == 5)
[L1213]  COND FALSE  !(choice == 4)
[L1219]  COND FALSE  !(choice == 3)
[L1226]  COND TRUE   choice == 2
[L1227]              gas := gas - 21000;
[L1228]  COND TRUE   gas >= 0
[L1229]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1230]              assume msgvalue_MSG == 0;
[L1231]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s200 || p2 != msgsender_MSG) && _from_s200 == _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L131]               havoc __exception;
[L132]               revert := false;
[L133]   COND TRUE   __exception
[L134]               __tmp__Balance := Balance;
[L135]               __tmp__DType := DType;
[L136]               __tmp__Alloc := Alloc;
[L137]               __tmp__balance_ADDR := balance_ADDR;
[L138]               __tmp__M_Ref_int := M_Ref_int;
[L139]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L140]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L141]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L142]               __tmp__sum_allowance1 := sum_allowance1;
[L143]               __tmp__Length := Length;
[L144]               __tmp__now := now;
[L145]               __tmp__name_ZXL := name_ZXL;
[L146]               __tmp__symbol_ZXL := symbol_ZXL;
[L147]               __tmp__decimals_ZXL := decimals_ZXL;
[L148]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L149]               __tmp__owner_ZXL := owner_ZXL;
[L150]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L151]               __tmp__allowance_ZXL := allowance_ZXL;
[L152]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L653]   COND FALSE  !(!(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L657]               __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] - __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L658]               __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] := (__tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L659]               __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] + __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L660]   CALL        call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L585]               __var_1 := null;
[L586]   COND TRUE   !(_to_s145 != null)
[L587]               revert := true;
[L660]   RET         call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L661]   COND TRUE   revert
[L152]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L153]               assume revert || gas < 0;
[L1231]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1253]  RET         call CorralChoice_ZXL(this);

Loop:
[L1253]        assume true;

[2020-11-24 18:12:33,673 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:12:33,673 INFO  L82        PathProgramCache]: Analyzing trace with hash 697786611, now seen corresponding path program 1 times
[2020-11-24 18:12:33,673 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:12:33,681 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:12:33,688 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:12:33,721 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:12:33,721 INFO  L82        PathProgramCache]: Analyzing trace with hash 4167, now seen corresponding path program 1 times
[2020-11-24 18:12:33,722 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:12:33,722 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:12:33,723 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:12:33,724 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:12:33,724 INFO  L82        PathProgramCache]: Analyzing trace with hash 156552597, now seen corresponding path program 1 times
[2020-11-24 18:12:33,725 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:12:33,733 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:12:33,740 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 18:12:34,092 WARN  L188               SmtUtils]: Spent 200.00 ms on a formula simplification. DAG size of input: 171 DAG size of output: 162
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
[2020-11-24 18:12:34,373 WARN  L188               SmtUtils]: Spent 251.00 ms on a formula simplification. DAG size of input: 117 DAG size of output: 111
[2020-11-24 18:12:34,570 WARN  L188               SmtUtils]: Spent 195.00 ms on a formula simplification that was a NOOP. DAG size: 256
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.003s / 0.006s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.008s total
Resizing node table from 6037 to 12073
[2020-11-24 18:12:35,359 WARN  L188               SmtUtils]: Spent 759.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 214
[2020-11-24 18:12:36,360 WARN  L188               SmtUtils]: Spent 998.00 ms on a formula simplification. DAG size of input: 249 DAG size of output: 234
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 9973 to 19937
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-24 18:12:36,610 WARN  L188               SmtUtils]: Spent 223.00 ms on a formula simplification. DAG size of input: 141 DAG size of output: 135
[2020-11-24 18:12:36,814 WARN  L188               SmtUtils]: Spent 201.00 ms on a formula simplification that was a NOOP. DAG size: 271
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-24 18:12:37,201 WARN  L188               SmtUtils]: Spent 381.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 214
[2020-11-24 18:12:37,548 WARN  L188               SmtUtils]: Spent 344.00 ms on a formula simplification. DAG size of input: 234 DAG size of output: 231
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-24 18:12:38,238 WARN  L188               SmtUtils]: Spent 682.00 ms on a formula simplification. DAG size of input: 162 DAG size of output: 153
[2020-11-24 18:12:38,498 WARN  L188               SmtUtils]: Spent 251.00 ms on a formula simplification that was a NOOP. DAG size: 238
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-24 18:12:39,327 WARN  L188               SmtUtils]: Spent 817.00 ms on a formula simplification. DAG size of input: 163 DAG size of output: 153
[2020-11-24 18:12:39,841 WARN  L188               SmtUtils]: Spent 512.00 ms on a formula simplification. DAG size of input: 240 DAG size of output: 239
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
[2020-11-24 18:12:40,810 WARN  L188               SmtUtils]: Spent 960.00 ms on a formula simplification. DAG size of input: 245 DAG size of output: 234
[2020-11-24 18:12:40,818 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:12:40,822 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:12:40 BasicIcfg
[2020-11-24 18:12:40,822 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 18:12:40,823 INFO  L168              Benchmark]: Toolchain (without parser) took 9852.54 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 729.8 MB). Free memory was 945.9 MB in the beginning and 894.0 MB in the end (delta: 51.9 MB). Peak memory consumption was 862.5 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:40,823 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:12:40,823 INFO  L168              Benchmark]: Boogie Preprocessor took 47.23 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:40,824 INFO  L168              Benchmark]: UtopiaSpecLang took 47.67 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:40,824 INFO  L168              Benchmark]: Boogie Printer took 7.52 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:12:40,824 INFO  L168              Benchmark]: RCFGBuilder took 404.97 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 897.6 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:40,824 INFO  L168              Benchmark]: UtopiaLTL2Aut took 35.62 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 888.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:40,825 INFO  L168              Benchmark]: BÃ¼chi Program Product took 782.41 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 888.7 MB in the beginning and 1.0 GB in the end (delta: -158.5 MB). Peak memory consumption was 169.2 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:40,825 INFO  L168              Benchmark]: BlockEncodingV2 took 67.11 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 27.1 MB). Peak memory consumption was 27.1 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:40,825 INFO  L168              Benchmark]: BuchiAutomizer took 8457.55 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 660.6 MB). Free memory was 1.0 GB in the beginning and 894.0 MB in the end (delta: 126.0 MB). Peak memory consumption was 867.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:40,828 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1002 locations, 1676 edges
  - StatisticsResult: Encoded RCFG
    988 locations, 1645 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 47.23 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 47.67 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 7.52 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 404.97 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 897.6 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 35.62 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 888.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 782.41 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 888.7 MB in the beginning and 1.0 GB in the end (delta: -158.5 MB). Peak memory consumption was 169.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 67.11 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 27.1 MB). Peak memory consumption was 27.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 8457.55 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 660.6 MB). Free memory was 1.0 GB in the beginning and 894.0 MB in the end (delta: 126.0 MB). Peak memory consumption was 867.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    435 locations, 522 edges
  - StatisticsResult: BuchiProgram size
    1002 locations, 1676 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 137 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 8.4s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 7.6s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 4 MinimizatonAttempts, 18 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 172 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1045 SDtfs, 1009 SDslu, 1538 SDs, 0 SdLazy, 1239 SolverSat, 413 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
ZXL(12).transferFrom~address~address~uint256.gas(3979001)({from : 6, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s200 || p2 != msgsender_MSG) && _from_s200 == _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L131]               havoc __exception;
[L132]               revert := false;
[L133]   COND TRUE   __exception
[L134]               __tmp__Balance := Balance;
[L135]               __tmp__DType := DType;
[L136]               __tmp__Alloc := Alloc;
[L137]               __tmp__balance_ADDR := balance_ADDR;
[L138]               __tmp__M_Ref_int := M_Ref_int;
[L139]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L140]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L141]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L142]               __tmp__sum_allowance1 := sum_allowance1;
[L143]               __tmp__Length := Length;
[L144]               __tmp__now := now;
[L145]               __tmp__name_ZXL := name_ZXL;
[L146]               __tmp__symbol_ZXL := symbol_ZXL;
[L147]               __tmp__decimals_ZXL := decimals_ZXL;
[L148]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L149]               __tmp__owner_ZXL := owner_ZXL;
[L150]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L151]               __tmp__allowance_ZXL := allowance_ZXL;
[L152]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L653]   COND FALSE  !(!(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L657]               __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] - __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L658]               __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] := (__tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L659]               __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] + __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L660]   CALL        call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L585]               __var_1 := null;
[L586]   COND TRUE   !(_to_s145 != null)
[L587]               revert := true;
[L660]   RET         call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L661]   COND TRUE   revert
[L152]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L153]               assume revert || gas < 0;
[L1231]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
